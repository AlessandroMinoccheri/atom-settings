{"mapping":{"Aura\\Intl\\BasicFormatter":{"class":{"descriptions":{"short":"BasicFormatter","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Aura\\Intl\\Exception":{"class":{"descriptions":{"short":"Exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Aura\\Intl\\Exception\\CannotFormat":{"class":{"descriptions":{"short":"Could not format a message.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Aura\\Intl\\Exception\\CannotInstantiateFormatter":{"class":{"descriptions":{"short":"Could not instantiate a formatter object.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Aura\\Intl\\Exception\\FormatterNotMapped":{"class":{"descriptions":{"short":"A formatter name is not mapped in the locator.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Aura\\Intl\\Exception\\IcuVersionTooLow":{"class":{"descriptions":{"short":"ICU Version is too low for Aura.Intl to work properly.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Aura\\Intl\\FormatterInterface":{"class":{"descriptions":{"short":"Formatter Interface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Aura\\Intl\\FormatterLocator":{"class":{"descriptions":{"short":"A ServiceLocator implementation for loading and retaining formatter objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$registry"],"docParameters":{"$registry":{"type":"array","description":"An array of key-value pairs where the key is the formatter name the value is a callable that returns a formatter object."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Aura\\Intl\\IntlFormatter":{"class":{"descriptions":{"short":"Uses php intl extension to format messages","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$icu_version"],"docParameters":{"$icu_version":{"type":"string","description":"The current ICU version; mostly used for testing."}},"throws":{"Exception\\IcuVersionTooLow":"when the Version of ICU installed is too low for Aura.Intl to work properly."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Aura\\Intl\\Package":{"class":{"descriptions":{"short":"Message Catalog","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$formatter","$fallback","$messages"],"docParameters":{"$formatter":{"type":"string","description":"The name of the formatter to use."},"$fallback":{"type":"string","description":"The name of the fallback package to use."},"$messages":{"type":"array","description":"The messages in this package."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Aura\\Intl\\PackageFactory":{"class":{"descriptions":{"short":"Creates new package instances.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Aura\\Intl\\PackageLocator":{"class":{"descriptions":{"short":"A ServiceLocator implementation for loading and retaining translator objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$registry"],"docParameters":{"$registry":{"type":"array","description":"A registry of packages."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Aura\\Intl\\PackageLocatorInterface":{"class":{"descriptions":{"short":"Package locator interface.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Aura\\Intl\\Translator":{"class":{"descriptions":{"short":"Translator to translate the message","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locale","$messages","$formatter"],"optionals":["$fallback"],"docParameters":{"$locale":{"type":"string","description":"The locale being used."},"$messages":{"type":"array","description":"The message keys and translations."},"$formatter":{"type":"FormatterInterface","description":"A message formatter."},"$fallback":{"type":"TranslatorInterface","description":"A fallback translator."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Aura\\Intl\\TranslatorFactory":{"class":{"descriptions":{"short":"Factory to create Translator objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Aura\\Intl\\TranslatorInterface":{"class":{"descriptions":{"short":"TranslatorInterface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Aura\\Intl\\TranslatorLocator":{"class":{"descriptions":{"short":"A ServiceLocator implementation for loading and retaining translator objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$packages","$formatters","$factory","$locale"],"optionals":[],"docParameters":{"$packages":{"type":"PackageLocator","description":"The package locator."},"$formatters":{"type":"FormatterLocator","description":"The formatter locator."},"$factory":{"type":"TranslatorFactory","description":"A translator factory to create translator objects for the locale and package."},"$locale":{"type":"string","description":"The default locale code to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Auth\\AbstractPasswordHasher":{"class":{"descriptions":{"short":"Abstract password hashing class","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Array of config."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Auth\\BaseAuthenticate":{"class":{"descriptions":{"short":"Base Authentication class with common methods and properties.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"The Component registry used on this request."},"$config":{"type":"array","description":"Array of config to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Auth\\BaseAuthorize":{"class":{"descriptions":{"short":"Abstract base authorization adapter for AuthComponent.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"The controller for this request."},"$config":{"type":"array","description":"An array of config. This class does not use any config."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Auth\\BasicAuthenticate":{"class":{"descriptions":{"short":"Basic Authentication adapter for AuthComponent.","long":"Provides Basic HTTP authentication support for AuthComponent. Basic Auth will\nauthenticate users against the configured userModel and verify the username\nand passwords match.\n\n### Using Basic auth\n\nIn your controller's components array, add auth + the required config\n```\npublic $components = [\n'Auth' => [\n'authenticate' => ['Basic']\n]\n];\n```\n\nYou should also set `AuthComponent::$sessionKey = false;` in your AppController's\nbeforeFilter() to prevent CakePHP from sending a session cookie to the client.\n\nSince HTTP Basic Authentication is stateless you don't need a login() action\nin your controller. The user credentials will be checked on each request. If\nvalid credentials are not provided, required authentication headers will be sent\nby this authentication provider which triggers the login dialog in the browser\/client.\n\nYou may also want to use `$this->Auth->unauthorizedRedirect = false;`.\nBy default, unauthorized users are redirected to the referrer URL,\n`AuthComponent::$loginAction`, or '\/'. If unauthorizedRedirect is set to\nfalse, a ForbiddenException exception is thrown instead of redirecting."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"The Component registry used on this request."},"$config":{"type":"array","description":"Array of config to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Auth\\ControllerAuthorize":{"class":{"descriptions":{"short":"An authorization adapter for AuthComponent. Provides the ability to authorize\nusing a controller callback. Your controller's isAuthorized() method should\nreturn a boolean to indicate whether or not the user is authorized.","long":"```\npublic function isAuthorized($user)\n{\nif ($this->request->param('admin')) {\nreturn $user['role'] === 'admin';\n}\nreturn !empty($user);\n}\n```\n\nThe above is simple implementation that would only authorize users of the\n'admin' role to access admin routing."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"The controller for this request."},"$config":{"type":"array","description":"An array of config. This class does not use any config."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Auth\\DefaultPasswordHasher":{"class":{"descriptions":{"short":"Default password hashing class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Array of config."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Auth\\DigestAuthenticate":{"class":{"descriptions":{"short":"Digest Authentication adapter for AuthComponent.","long":"Provides Digest HTTP authentication support for AuthComponent.\n\n### Using Digest auth\n\nIn your controller's components array, add auth + the required config\n```\npublic $components = [\n'Auth' => [\n'authenticate' => ['Digest']\n]\n];\n```\n\nYou should also set `AuthComponent::$sessionKey = false;` in your AppController's\nbeforeFilter() to prevent CakePHP from sending a session cookie to the client.\n\nSince HTTP Digest Authentication is stateless you don't need a login() action\nin your controller. The user credentials will be checked on each request. If\nvalid credentials are not provided, required authentication headers will be sent\nby this authentication provider which triggers the login dialog in the browser\/client.\n\nYou may also want to use `$this->Auth->unauthorizedRedirect = false;`.\nThis causes AuthComponent to throw a ForbiddenException exception instead of\nredirecting to another page.\n\n### Generating passwords compatible with Digest authentication.\n\nDigestAuthenticate requires a special password hash that conforms to RFC2617.\nYou can generate this password using `DigestAuthenticate::password()`\n\n```\n$digestPass = DigestAuthenticate::password($username, $password, env('SERVER_NAME'));\n```\n\nIf you wish to use digest authentication alongside other authentication methods,\nit's recommended that you store the digest authentication separately. For\nexample `User.digest_pass` could be used for a digest password, while\n`User.password` would store the password hash for use with other methods like\nBasic or Form."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"The Component registry used on this request."},"$config":{"type":"array","description":"Array of config to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"Besides the keys specified in BaseAuthenticate::$_defaultConfig,\nDigestAuthenticate uses the following extra keys:\n\n- `realm` The realm authentication is for, Defaults to the servername.\n- `nonce` A nonce used for authentication. Defaults to `uniqid()`.\n- `qop` Defaults to 'auth', no other values are supported at this time.\n- `opaque` A string that must be returned unchanged by clients.\nDefaults to `md5($config['realm'])`"},"deprecated":false}}}},"Cake\\Auth\\FallbackPasswordHasher":{"class":{"descriptions":{"short":"A password hasher that can use multiple different hashes where only\none is the preferred one. This is useful when trying to migrate an\nexisting database of users from one password type to another.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"configuration options for this object. Requires the `hashers` key to be present in the array with a list of other hashers to be used"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Auth\\FormAuthenticate":{"class":{"descriptions":{"short":"An authentication adapter for AuthComponent. Provides the ability to authenticate using POST\ndata. Can be used by configuring AuthComponent to use it via the AuthComponent::$authenticate config.","long":"```\n$this->Auth->authenticate = [\n'Form' => [\n'finder' => ['auth' => ['some_finder_option' => 'some_value']]\n]\n]\n```\n\nWhen configuring FormAuthenticate you can pass in config to which fields, model and additional conditions\nare used. See FormAuthenticate::$_config for more information."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"The Component registry used on this request."},"$config":{"type":"array","description":"Array of config to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Auth\\PasswordHasherFactory":{"class":{"descriptions":{"short":"Builds password hashing objects","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Auth\\Storage\\MemoryStorage":{"class":{"descriptions":{"short":"Memory based non-persistent storage for authenticated user record.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Auth\\Storage\\SessionStorage":{"class":{"descriptions":{"short":"Session based persistent storage for authenticated user record.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request","$response"],"optionals":["$config"],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request","description":"Request instance."},"$response":{"type":"\\Cake\\Network\\Response","description":"Response instance."},"$config":{"type":"array","description":"Configuration list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Auth\\Storage\\StorageInterface":{"class":{"descriptions":{"short":"Describes the methods that any class representing an Auth data storage should\ncomply with.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Auth\\WeakPasswordHasher":{"class":{"descriptions":{"short":"Password hashing class that use weak hashing algorithms. This class is\nintended only to be used with legacy databases where passwords have\nnot been migrated to a stronger algorithm yet.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Array of config."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Cache\\Cache":{"class":{"descriptions":{"short":"Cache provides a consistent interface to Caching in your application. It allows you\nto use several different Cache engines, without coupling your application to a specific\nimplementation. It also allows you to change out cache storage or configuration without effecting\nthe rest of your application.","long":"### Configuring Cache engines\n\nYou can configure Cache engines in your application's `Config\/cache.php` file.\nA sample configuration would be:\n\n```\nCache::config('shared', [\n'className' => 'Cake\\Cache\\Engine\\ApcEngine',\n'prefix' => 'my_app_'\n]);\n```\n\nThis would configure an APC cache engine to the 'shared' alias. You could then read and write\nto that cache alias by using it for the `$config` parameter in the various Cache methods.\n\nIn general all Cache operations are supported by all cache engines.\nHowever, Cache::increment() and Cache::decrement() are not supported by File caching.\n\nThere are 5 built-in caching engines:\n\n- `FileEngine` - Uses simple files to store content. Poor performance, but good for\nstoring large objects, or things that are not IO sensitive.  Well suited to development\nas it is an easy cache to inspect and manually flush.\n- `ApcEngine` - Uses the APC object cache, one of the fastest caching engines.\n- `MemcacheEngine` - Uses the PECL::Memcache extension and Memcached for storage.\nFast reads\/writes, and benefits from memcache being distributed.\n- `XcacheEngine` - Uses the Xcache extension, an alternative to APC.\n- `WincacheEngine` - Uses Windows Cache Extension for PHP. Supports wincache 1.1.0 and higher.\nThis engine is recommended to people deploying on windows with IIS.\n- `RedisEngine` - Uses redis and php-redis extension to store cache data.\n\nSee Cache engine documentation for expected configuration keys."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Cache\\CacheEngine":{"class":{"descriptions":{"short":"Storage engine for CakePHP caching","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Cache\\CacheRegistry":{"class":{"descriptions":{"short":"An object registry for cache engines.","long":"Used by Cake\\Cache\\Cache to load and manage cache engines."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Cache\\Engine\\ApcEngine":{"class":{"descriptions":{"short":"APC storage engine for cache","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Cache\\Engine\\FileEngine":{"class":{"descriptions":{"short":"File Storage engine for cache. Filestorage is the slowest cache storage\nto read and write. However, it is good for servers that don't have other storage\nengine available, or have content which is not performance sensitive.","long":"You can configure a FileEngine cache, using Cache::config()"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Cache\\Engine\\MemcachedEngine":{"class":{"descriptions":{"short":"Memcached storage engine for cache. Memcached has some limitations in the amount of\ncontrol you have over expire times far in the future. See MemcachedEngine::write() for\nmore information.","long":"Main advantage of this Memcached engine over the memcached engine is\nsupport of binary protocol, and igbinary serialization\n(if memcached extension compiled with --enable-igbinary)\nCompressed keys can also be incremented\/decremented"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Cache\\Engine\\NullEngine":{"class":{"descriptions":{"short":"Null cache engine, all operations return false.","long":"This is used internally for when Cache::disable() has been called."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Cache\\Engine\\RedisEngine":{"class":{"descriptions":{"short":"Redis storage engine for cache.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Cache\\Engine\\WincacheEngine":{"class":{"descriptions":{"short":"Wincache storage engine for cache","long":"Supports wincache 1.1.0 and higher."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Cache\\Engine\\XcacheEngine":{"class":{"descriptions":{"short":"Xcache storage engine for cache","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Chronos":{"class":{"descriptions":{"short":"An Immutable extension on the native DateTime object.","long":"Adds a number of convenience APIs methods and the ability\nto easily convert into a mutable object."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$tz"],"docParameters":{"$time":{"type":"string|null","description":"Fixed or relative time"},"$tz":{"type":"\\DateTimeZone|string|null","description":"The timezone for the instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new Chronos instance.","long":"Please see the testing aids section (specifically static::setTestNow())\nfor more on the possibility of this constructor returning a test instance."},"deprecated":false}}}},"Cake\\Chronos\\ChronosInterface":{"class":{"descriptions":{"short":"An extension to the DateTimeInterface for a friendlier API","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\ChronosInterval":{"class":{"descriptions":{"short":"A simple API extension for DateInterval.\nThe implementation provides helpers to handle weeks but only days are saved.\nWeeks are calculated based on the total days of the current instance.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$years","$months","$weeks","$days","$hours","$minutes","$seconds"],"docParameters":{"$years":{"type":"int|null","description":"The year to use."},"$months":{"type":"int|null","description":"The month to use."},"$weeks":{"type":"int|null","description":"The week to use."},"$days":{"type":"int|null","description":"The day to use."},"$hours":{"type":"int|null","description":"The hours to use."},"$minutes":{"type":"int|null","description":"The minutes to use."},"$seconds":{"type":"int|null","description":"The seconds to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new ChronosInterval instance.","long":""},"deprecated":false}}}},"Cake\\Chronos\\Date":{"class":{"descriptions":{"short":"An immutable date object that converts all time components into 00:00:00.","long":"This class is useful when you want to represent a calendar date and ignore times.\nThis means that timezone changes take no effect as a calendar date exists in all timezones\nin each respective date."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$tz"],"docParameters":{"$time":{"type":"string|null","description":"Fixed or relative time"},"$tz":{"type":"\\DateTimeZone|string|null","description":"The timezone for the instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new Immutable Date instance.","long":"Please see the testing aids section (specifically static::setTestNow())\nfor more on the possibility of this constructor returning a test instance.\n\nDate instances lack time components, however due to limitations in PHP's\ninternal Datetime object the time will always be set to 00:00:00, and the\ntimezone will always be UTC. Normalizing the timezone allows for\nsubtraction\/addition to have deterministic results."},"deprecated":false}}}},"Cake\\Chronos\\DifferenceFormatter":{"class":{"descriptions":{"short":"Handles formatting differences in text.","long":"Provides a swappable component for other libraries to leverage.\nwhen localizing or customizing the difference output."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$translate"],"docParameters":{"$translate":{"type":"\\Cake\\Chronos\\Translator|null","description":"The text translator object."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Chronos\\MutableDate":{"class":{"descriptions":{"short":"A mutable date object that converts all time components into 00:00:00.","long":"This class is useful when you want to represent a calendar date and ignore times.\nThis means that timezone changes take no effect as a calendar date exists in all timezones\nin each respective date."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$tz"],"docParameters":{"$time":{"type":"string|null","description":"Fixed or relative time"},"$tz":{"type":"\\DateTimeZone|string|null","description":"The timezone for the instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new mutable Date instance.","long":"Please see the testing aids section (specifically static::setTestNow())\nfor more on the possibility of this constructor returning a test instance.\n\nDate instances lack time components, however due to limitations in PHP's\ninternal Datetime object the time will always be set to 00:00:00, and the\ntimezone will always be UTC. Normalizing the timezone allows for\nsubtraction\/addition to have deterministic results."},"deprecated":false}}}},"Cake\\Chronos\\MutableDateTime":{"class":{"descriptions":{"short":"A mutable datetime instance that implements the ChronosInterface.","long":"This object can be mutated in place using any setter method,\nor __set()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$tz"],"docParameters":{"$time":{"type":"string|null","description":"Fixed or relative time"},"$tz":{"type":"\\DateTimeZone|string|null","description":"The timezone for the instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new MutableDateTime instance.","long":"Please see the testing aids section (specifically static::setTestNow())\nfor more on the possibility of this constructor returning a test instance."},"deprecated":false}}}},"Cake\\Chronos\\Traits\\ComparisonTrait":{"class":{"descriptions":{"short":"Provides various comparison operator methods for datetime objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Traits\\CopyTrait":{"class":{"descriptions":{"short":"Provides methods for copying datetime objects.","long":"Expects that implementing classes provide a static `instance()` method."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Traits\\DifferenceTrait":{"class":{"descriptions":{"short":"Provides methods for getting differences between datetime objects.","long":"Expects that the implementing class implements:\n\n- static::now()\n- static::instance()\n- copy()"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Traits\\FactoryTrait":{"class":{"descriptions":{"short":"Provides a number of datetime related factory methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Traits\\FormattingTrait":{"class":{"descriptions":{"short":"Provides string formatting methods for datetime instances.","long":"Expects implementing classes to define static::$toStringFormat"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Traits\\FrozenTimeTrait":{"class":{"descriptions":{"short":"A trait for freezing the time aspect of a DateTime.","long":"Used in making calendar date objects, both mutable and immutable."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Traits\\MagicPropertyTrait":{"class":{"descriptions":{"short":"Provides the magic methods that allow read access\nto magic properties.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Traits\\ModifierTrait":{"class":{"descriptions":{"short":"Provides a suite of modifier methods.","long":"These methods let you modify the various aspects\nof a DateTime with a series of fluent methods.\n\nThis trait expects that the implementing class\nalso implements a copy() method. This method can be obtained\nusing the CopyTrait."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Traits\\RelativeKeywordTrait":{"class":{"descriptions":{"short":"Provides methods for testing if strings contain relative keywords.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Traits\\TestingAidTrait":{"class":{"descriptions":{"short":"Provides methods for setting a 'test' now. This lets you\nretrieve pre-determined times with now().","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Traits\\TimezoneTrait":{"class":{"descriptions":{"short":"Methods for modifying\/reading timezone data.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Chronos\\Translator":{"class":{"descriptions":{"short":"Basic english only 'translator' for diffForHumans()","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Collection\\Collection":{"class":{"descriptions":{"short":"A collection is an immutable list of elements with a handful of functions to\niterate, group, transform and extract information from it.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items"],"optionals":[],"docParameters":{"$items":{"type":"array|\\Traversable","description":"Items."}},"throws":{"\\InvalidArgumentException":"If passed incorrect type for items."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. You can provide an array or any traversable object","long":""},"deprecated":false}}}},"Cake\\Collection\\CollectionInterface":{"class":{"descriptions":{"short":"Describes the methods a Collection should implement. A collection is an immutable\nlist of elements exposing a number of traversing and extracting method for\ngenerating other collections.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Collection\\CollectionTrait":{"class":{"descriptions":{"short":"Offers a handful of method to manipulate iterators","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Collection\\ExtractTrait":{"class":{"descriptions":{"short":"Provides utility protected methods for extracting a property or column\nfrom an array or object.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Collection\\Iterator\\BufferedIterator":{"class":{"descriptions":{"short":"Creates an iterator from another iterator that will keep the results of the inner\niterator in memory, so that results don't have to be re-calculated.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items"],"optionals":[],"docParameters":{"$items":{"type":"array|\\Traversable","description":"The items to be filtered."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Maintains an in-memory cache of the results yielded by the internal\niterator.","long":""},"deprecated":false}}}},"Cake\\Collection\\Iterator\\ExtractIterator":{"class":{"descriptions":{"short":"Creates an iterator from another iterator that extract the requested column\nor property based on a path","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items","$path"],"optionals":[],"docParameters":{"$items":{"type":"array|\\Traversable","description":"The list of values to iterate"},"$path":{"type":"string","description":"a dot separated string symbolizing the path to follow inside the hierarchy of each value so that the column can be extracted."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates the iterator that will return the requested property for each value\nin the collection expressed in $path","long":"### Example:\n\nExtract the user name for all comments in the array:\n\n```\n$items = [\n['comment' => ['body' => 'cool', 'user' => ['name' => 'Mark']],\n['comment' => ['body' => 'very cool', 'user' => ['name' => 'Renan']]\n];\n$extractor = new ExtractIterator($items, 'comment.user.name'');\n```"},"deprecated":false}}}},"Cake\\Collection\\Iterator\\FilterIterator":{"class":{"descriptions":{"short":"Creates a filtered iterator from another iterator. The filtering is done by\npassing a callback function to each of the elements and taking them out if\nit does not return true.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items","$callback"],"optionals":[],"docParameters":{"$items":{"type":"\\Iterator","description":"The items to be filtered."},"$callback":{"type":"callable","description":"Callback."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a filtered iterator using the callback to determine which items are\naccepted or rejected.","long":"Each time the callback is executed it will receive the value of the element\nin the current iteration, the key of the element and the passed $items iterator\nas arguments, in that order."},"deprecated":false}}}},"Cake\\Collection\\Iterator\\InsertIterator":{"class":{"descriptions":{"short":"This iterator will insert values into a property of each of the records returned.\nThe values to be inserted come out of another traversal object. This is useful\nwhen you have two separate collections and want to merge them together by placing\neach of the values from one collection into a property inside the other collection.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$into","$path","$values"],"optionals":[],"docParameters":{"$into":{"type":"array|\\Traversable","description":"The target collection to which the values will be inserted at the specified path."},"$path":{"type":"string","description":"A dot separated list of properties that need to be traversed to insert the value into the target collection."},"$values":{"type":"array|\\Traversable","description":"The source collection from which the values will be inserted at the specified path."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a new collection that will dynamically add properties to it out of\nthe values found in $values.","long":""},"deprecated":false}}}},"Cake\\Collection\\Iterator\\MapReduce":{"class":{"descriptions":{"short":"Implements a simplistic version of the popular Map-Reduce algorithm. Acts\nlike an iterator for the original passed data after each result has been\nprocessed, thus offering a transparent wrapper for results coming from any\nsource.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data","$mapper"],"optionals":["$reducer"],"docParameters":{"$data":{"type":"\\Traversable","description":"the original data to be processed"},"$mapper":{"type":"callable","description":"the mapper callback. This function will receive 3 arguments. The first one is the current value, second the current results key and third is this class instance so you can call the result emitters."},"$reducer":{"type":"callable|null","description":"the reducer callback. This function will receive 3 arguments. The first one is the list of values inside a bucket, second one is the name of the bucket that was created during the mapping phase and third one is an instance of this class."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"### Example:\n\nSeparate all unique odd and even numbers in an array\n\n```\n$data = new \\ArrayObject([1, 2, 3, 4, 5, 3]);\n$mapper = function ($value, $key, $mr) {\n$type = ($value % 2 === 0) ? 'even' : 'odd';\n$mr->emitIntermediate($value, $type);\n};\n\n$reducer = function ($numbers, $type, $mr) {\n$mr->emit(array_unique($numbers), $type);\n};\n$results = new MapReduce($data, $mapper, $reducer);\n```\n\nPrevious example will generate the following result:\n\n```\n['odd' => [1, 3, 5], 'even' => [2, 4]]\n```"},"deprecated":false}}}},"Cake\\Collection\\Iterator\\NestIterator":{"class":{"descriptions":{"short":"A type of collection that is aware of nested items and exposes methods to\ncheck or retrieve them","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items","$nestKey"],"optionals":[],"docParameters":{"$items":{"type":"array|\\Traversable","description":"Collection items."},"$nestKey":{"type":"string|callable","description":"the property that contains the nested items If a callable is passed, it should return the childrens for the passed item"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Collection\\Iterator\\NoChildrenIterator":{"class":{"descriptions":{"short":"An iterator that can be used as an argument for other iterators that require\na RecursiveIterator but do not want children. This iterator will\nalways behave as having no nested items.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items"],"optionals":[],"docParameters":{"$items":{"type":"array|\\Traversable","description":"Items."}},"throws":{"\\InvalidArgumentException":"If passed incorrect type for items."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. You can provide an array or any traversable object","long":""},"deprecated":false}}}},"Cake\\Collection\\Iterator\\ReplaceIterator":{"class":{"descriptions":{"short":"Creates an iterator from another iterator that will modify each of the values\nby converting them using a callback function.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items","$callback"],"optionals":[],"docParameters":{"$items":{"type":"array|\\Traversable","description":"The items to be filtered."},"$callback":{"type":"callable","description":"Callback."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates an iterator from another iterator that will modify each of the values\nby converting them using a callback function.","long":"Each time the callback is executed it will receive the value of the element\nin the current iteration, the key of the element and the passed $items iterator\nas arguments, in that order."},"deprecated":false}}}},"Cake\\Collection\\Iterator\\SortIterator":{"class":{"descriptions":{"short":"An iterator that will return the passed items in order. The order is given by\nthe value returned in a callback function that maps each of the elements.","long":"### Example:\n\n```\n$items = [$user1, $user2, $user3];\n$sorted = new SortIterator($items, function ($user) {\nreturn $user->age;\n});\n\n\/\/ output all user name order by their age in descending order\nforeach ($sorted as $user) {\necho $user->name;\n}\n```\n\nThis iterator does not preserve the keys passed in the original elements."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items","$callback"],"optionals":["$dir","$type"],"docParameters":{"$items":{"type":"array|\\Traversable","description":"The values to sort"},"$callback":{"type":"callable|string","description":"A function used to return the actual value to be compared. It can also be a string representing the path to use to fetch a column or property in each element"},"$dir":{"type":"int","description":"either SORT_DESC or SORT_ASC"},"$type":{"type":"int","description":"the type of comparison to perform, either SORT_STRING SORT_NUMERIC or SORT_NATURAL"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Wraps this iterator around the passed items so when iterated they are returned\nin order.","long":"The callback will receive as first argument each of the elements in $items,\nthe value returned in the callback will be used as the value for sorting such\nelement. Please note that the callback function could be called more than once\nper element."},"deprecated":false}}}},"Cake\\Collection\\Iterator\\StoppableIterator":{"class":{"descriptions":{"short":"Creates an iterator from another iterator that will verify a condition on each\nstep. If the condition evaluates to false, the iterator will not yield more\nresults.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items","$condition"],"optionals":[],"docParameters":{"$items":{"type":"array|\\Traversable","description":"The list of values to iterate"},"$condition":{"type":"callable","description":"A function that will be called for each item in the collection, if the result evaluates to false, no more items will be yielded from this iterator."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates an iterator that can be stopped based on a condition provided by a callback.","long":"Each time the condition callback is executed it will receive the value of the element\nin the current iteration, the key of the element and the passed $items iterator\nas arguments, in that order."},"deprecated":false}}}},"Cake\\Collection\\Iterator\\TreeIterator":{"class":{"descriptions":{"short":"A Recursive iterator used to flatten nested structures and also exposes\nall Collection methods","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items"],"optionals":["$mode","$flags"],"docParameters":{"$items":{"type":"\\RecursiveIterator","description":"The iterator to flatten."},"$mode":{"type":"int","description":"Iterator mode."},"$flags":{"type":"int","description":"Iterator flags."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Collection\\Iterator\\TreePrinter":{"class":{"descriptions":{"short":"Iterator for flattening elements in a tree structure while adding some\nvisual markers for their relative position in the tree","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items","$valuePath","$keyPath","$spacer"],"optionals":["$mode"],"docParameters":{"$items":{"type":"\\RecursiveIterator","description":"The iterator to flatten."},"$valuePath":{"type":"string|callable","description":"The property to extract or a callable to return the display value."},"$keyPath":{"type":"string|callable","description":"The property to use as iteration key or a callable returning the key value."},"$spacer":{"type":"string","description":"The string to use for prefixing the values according to their depth in the tree."},"$mode":{"type":"int","description":"Iterator mode."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Collection\\Iterator\\UnfoldIterator":{"class":{"descriptions":{"short":"An iterator that can be used to generate nested iterators out of a collection\nof items by applying an function to each of the elements in this iterator.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items","$unfolder"],"optionals":[],"docParameters":{"$items":{"type":"array|\\Traversable","description":"The list of values to iterate"},"$unfolder":{"type":"callable","description":"A callable function that will receive the current item and key. It must return an array or Traversable object out of which the nested iterators will be yielded."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates the iterator that will generate child iterators from each of the\nelements it was constructed with.","long":""},"deprecated":false}}}},"Cake\\Collection\\Iterator\\ZipIterator":{"class":{"descriptions":{"short":"Creates an iterator that returns elements grouped in pairs","long":"### Example\n\n```\n$iterator = new ZipIterator([[1, 2], [3, 4]]);\n$iterator->toList(); \/\/ Returns [[1, 3], [2, 4]]\n```\n\nYou can also chose a custom function to zip the elements together, such\nas doing a sum by index:\n\n### Example\n\n```\n$iterator = new ZipIterator([[1, 2], [3, 4]], function ($a, $b) {\nreturn $a + $b;\n});\n$iterator->toList(); \/\/ Returns [4, 6]\n```"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sets"],"optionals":["$callable"],"docParameters":{"$sets":{"type":"array","description":"The list of array or iterators to be zipped."},"$callable":{"type":"callable|null","description":"The function to use for zipping the elements of each iterator."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates the iterator to merge together the values by for all the passed\niterators by their corresponding index.","long":""},"deprecated":false}}}},"Cake\\Console\\ConsoleErrorHandler":{"class":{"descriptions":{"short":"Error Handler for Cake console. Does simple printing of the\nexception that occurred and the stack trace of the error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":"Options for the error handler."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Console\\ConsoleInput":{"class":{"descriptions":{"short":"Object wrapper for interacting with stdin","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$handle"],"docParameters":{"$handle":{"type":"string","description":"The location of the stream to use as input."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Console\\ConsoleInputArgument":{"class":{"descriptions":{"short":"An object to represent a single argument used in the command line.\nConsoleOptionParser creates these when you use addArgument()","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$help","$required","$choices"],"docParameters":{"$name":{"type":"string|array","description":"The long name of the option, or an array with all the properties."},"$help":{"type":"string","description":"The help text for this option"},"$required":{"type":"bool","description":"Whether this argument is required. Missing required args will trigger exceptions"},"$choices":{"type":"array","description":"Valid choices for this option."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Make a new Input Argument","long":""},"deprecated":false}}}},"Cake\\Console\\ConsoleInputOption":{"class":{"descriptions":{"short":"An object to represent a single option used in the command line.\nConsoleOptionParser creates these when you use addOption()","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$short","$help","$boolean","$default","$choices","$multiple"],"docParameters":{"$name":{"type":"string|array","description":"The long name of the option, or an array with all the properties."},"$short":{"type":"string","description":"The short alias for this option"},"$help":{"type":"string","description":"The help text for this option"},"$boolean":{"type":"bool","description":"Whether this option is a boolean option. Boolean options don't consume extra tokens"},"$default":{"type":"string","description":"The default value for this option."},"$choices":{"type":"array","description":"Valid choices for this option."},"$multiple":{"type":"bool","description":"Whether this option can accept multiple value definition."}},"throws":{"\\Cake\\Console\\Exception\\ConsoleException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Make a new Input Option","long":""},"deprecated":false}}}},"Cake\\Console\\ConsoleInputSubcommand":{"class":{"descriptions":{"short":"An object to represent a single subcommand used in the command line.\nCreated when you call ConsoleOptionParser::addSubcommand()","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$help","$parser"],"docParameters":{"$name":{"type":"string|array","description":"The long name of the subcommand, or an array with all the properties."},"$help":{"type":"string","description":"The help text for this option."},"$parser":{"type":"\\Cake\\Console\\ConsoleOptionParser|array|null","description":"A parser for this subcommand. Either a ConsoleOptionParser, or an array that can be used with ConsoleOptionParser::buildFromArray()."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Make a new Subcommand","long":""},"deprecated":false}}}},"Cake\\Console\\ConsoleIo":{"class":{"descriptions":{"short":"A wrapper around the various IO operations shell tasks need to do.","long":"Packages up the stdout, stderr, and stdin streams providing a simple\nconsistent interface for shells to use. This class also makes mocking streams\neasy to do in unit tests."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$err","$in","$helpers"],"docParameters":{"$out":{"type":"\\Cake\\Console\\ConsoleOutput|null","description":"A ConsoleOutput object for stdout."},"$err":{"type":"\\Cake\\Console\\ConsoleOutput|null","description":"A ConsoleOutput object for stderr."},"$in":{"type":"\\Cake\\Console\\ConsoleInput|null","description":"A ConsoleInput object for stdin."},"$helpers":{"type":"\\Cake\\Console\\HelperRegistry|null","description":"A HelperRegistry instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Console\\ConsoleOptionParser":{"class":{"descriptions":{"short":"Handles parsing the ARGV in the command line and provides support\nfor GetOpt compatible option definition. Provides a builder pattern implementation\nfor creating shell option parsers.","long":"### Options\n\nNamed arguments come in two forms, long and short. Long arguments are preceded\nby two - and give a more verbose option name. i.e. `--version`. Short arguments are\npreceded by one - and are only one character long. They usually match with a long option,\nand provide a more terse alternative.\n\n### Using Options\n\nOptions can be defined with both long and short forms. By using `$parser->addOption()`\nyou can define new options. The name of the option is used as its long form, and you\ncan supply an additional short form, with the `short` option. Short options should\nonly be one letter long. Using more than one letter for a short option will raise an exception.\n\nCalling options can be done using syntax similar to most *nix command line tools. Long options\ncane either include an `=` or leave it out.\n\n`cake myshell command --connection default --name=something`\n\nShort options can be defined singly or in groups.\n\n`cake myshell command -cn`\n\nShort options can be combined into groups as seen above. Each letter in a group\nwill be treated as a separate option. The previous example is equivalent to:\n\n`cake myshell command -c -n`\n\nShort options can also accept values:\n\n`cake myshell command -c default`\n\n### Positional arguments\n\nIf no positional arguments are defined, all of them will be parsed. If you define positional\narguments any arguments greater than those defined will cause exceptions. Additionally you can\ndeclare arguments as optional, by setting the required param to false.\n\n```\n$parser->addArgument('model', ['required' => false]);\n```\n\n### Providing Help text\n\nBy providing help text for your positional arguments and named arguments, the ConsoleOptionParser\ncan generate a help display for you. You can view the help for shells by using the `--help` or `-h` switch."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$command","$defaultOptions"],"docParameters":{"$command":{"type":"string|null","description":"The command name this parser is for. The command name is used for generating help."},"$defaultOptions":{"type":"bool","description":"Whether you want the verbose and quiet options set. Setting this to false will prevent the addition of `--verbose` & `--quiet` options."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Construct an OptionParser so you can define its behavior","long":""},"deprecated":false}}}},"Cake\\Console\\ConsoleOutput":{"class":{"descriptions":{"short":"Object wrapper for outputting information from a shell application.\nCan be connected to any stream resource that can be used with fopen()","long":"Can generate colorized output on consoles that support it. There are a few\nbuilt in styles\n\n- `error` Error messages.\n- `warning` Warning messages.\n- `info` Informational messages.\n- `comment` Additional text.\n- `question` Magenta text used for user prompts\n\nBy defining styles with addStyle() you can create custom console styles.\n\n### Using styles in output\n\nYou can format console output using tags with the name of the style to apply. From inside a shell object\n\n```\n$this->out('<warning>Overwrite:<\/warning> foo.php was overwritten.');\n```\n\nThis would create orange 'Overwrite:' text, while the rest of the text would remain the normal color.\nSee ConsoleOutput::styles() to learn more about defining your own styles. Nested styles are not supported\nat this time."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$stream"],"docParameters":{"$stream":{"type":"string","description":"The identifier of the stream to write output to."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Construct the output object.","long":"Checks for a pretty console environment. Ansicon and ConEmu allows\npretty consoles on windows, and is supported."},"deprecated":false}}}},"Cake\\Console\\Exception\\ConsoleException":{"class":{"descriptions":{"short":"Exception class for Console libraries.  This exception will be thrown from Console library\nclasses when they encounter an error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Console\\Exception\\MissingHelperException":{"class":{"descriptions":{"short":"Used when a Helper cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Console\\Exception\\MissingShellException":{"class":{"descriptions":{"short":"Used when a shell cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Console\\Exception\\MissingShellMethodException":{"class":{"descriptions":{"short":"Used when a shell method cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Console\\Exception\\MissingTaskException":{"class":{"descriptions":{"short":"Used when a Task cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Console\\Exception\\StopException":{"class":{"descriptions":{"short":"Exception class for halting errors in console tasks","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Console\\HelpFormatter":{"class":{"descriptions":{"short":"HelpFormatter formats help for console shells. Can format to either\ntext or XML formats. Uses ConsoleOptionParser methods to generate help.","long":"Generally not directly used. Using $parser->help($command, 'xml'); is usually\nhow you would access help. Or via the `--help=xml` option on the command line.\n\nXml output is useful for integration with other tools like IDE's or other build tools."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parser"],"optionals":[],"docParameters":{"$parser":{"type":"\\Cake\\Console\\ConsoleOptionParser","description":"The option parser help is being generated for."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Build the help formatter for an OptionParser","long":""},"deprecated":false}}}},"Cake\\Console\\Helper":{"class":{"descriptions":{"short":"Base class for Helpers.","long":"Console Helpers allow you to package up reusable blocks\nof Console output logic. For example creating tables,\nprogress bars or ascii art."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$io"],"optionals":["$config"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo","description":"The ConsoleIo instance to use."},"$config":{"type":"array","description":"The settings for this helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Console\\HelperRegistry":{"class":{"descriptions":{"short":"Registry for Helpers. Provides features\nfor lazily loading helpers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Console\\Shell":{"class":{"descriptions":{"short":"Base class for command-line utilities for automating programmer chores.","long":"Is the equivalent of Cake\\Controller\\Controller on the command line."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Console\\ShellDispatcher":{"class":{"descriptions":{"short":"Shell dispatcher handles dispatching cli commands.","long":"Consult \/bin\/cake.php for how this class is used in practice."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$args","$bootstrap"],"docParameters":{"$args":{"type":"array","description":"the argv from PHP"},"$bootstrap":{"type":"bool","description":"Should the environment be bootstrapped."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"The execution of the script is stopped after dispatching the request with\na status code of either 0 or 1 according to the result of the dispatch."},"deprecated":false}}}},"Cake\\Console\\TaskRegistry":{"class":{"descriptions":{"short":"Registry for Tasks. Provides features\nfor lazily loading tasks.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$Shell"],"optionals":[],"docParameters":{"$Shell":{"type":"\\Cake\\Console\\Shell","description":"Shell instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Controller\\Component":{"class":{"descriptions":{"short":"Base class for an individual Component. Components provide reusable bits of\ncontroller logic that can be composed into a controller. Components also\nprovide request life-cycle callbacks for injecting logic at specific points.","long":"### Initialize hook\n\nLike Controller and Table, this class has an initialize() hook that you can use\nto add custom 'constructor' logic. It is important to remember that each request\n(and sub-request) will only make one instance of any given component.\n\n### Life cycle callbacks\n\nComponents can provide several callbacks that are fired at various stages of the request\ncycle. The available callbacks are:\n\n- `beforeFilter(Event $event)`\nCalled before the controller's beforeFilter method by default.\n- `startup(Event $event)`\nCalled after the controller's beforeFilter method, and before the\ncontroller action is called.\n- `beforeRender(Event $event)`\nCalled before the Controller beforeRender, and before the view class is loaded.\n- `shutdown(Event $event)`\nCalled after the action is complete and the view has been rendered but\nbefore Controller::afterFilter().\n- `beforeRedirect(Event $event $url, Response $response)`\nCalled before a redirect is done. Allows you to change the URL that will\nbe redirected to by returning a Response instance with new URL set using\nResponse::location(). Redirection can be prevented by stopping the event\npropagation.\n\nWhile the controller is not an explicit argument for the callback methods it\nis the subject of each event and can be fetched using Event::subject()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"A ComponentRegistry this component can use to lazy load its components"},"$config":{"type":"array","description":"Array of configuration settings."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Controller\\ComponentRegistry":{"class":{"descriptions":{"short":"ComponentRegistry is a registry for loaded components","long":"Handles loading, constructing and binding events for component class objects."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$controller"],"docParameters":{"$controller":{"type":"\\Cake\\Controller\\Controller|null","description":"Controller instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Controller\\Component\\AuthComponent":{"class":{"descriptions":{"short":"Authentication control component class.","long":"Binds access control with user authentication and session management."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"A ComponentRegistry this component can use to lazy load its components"},"$config":{"type":"array","description":"Array of configuration settings."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Controller\\Component\\CookieComponent":{"class":{"descriptions":{"short":"Cookie Component.","long":"Provides enhanced cookie handling features for use in the controller layer.\nIn addition to the basic features offered be Cake\\Network\\Response, this class lets you:\n\n- Create and read encrypted cookies.\n- Store non-scalar data.\n- Use hash compatible syntax to read\/write\/delete values."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"A ComponentRegistry this component can use to lazy load its components"},"$config":{"type":"array","description":"Array of configuration settings."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Controller\\Component\\CsrfComponent":{"class":{"descriptions":{"short":"Provides CSRF protection & validation.","long":"This component adds a CSRF token to a cookie. The cookie value is compared to\nrequest data, or the X-CSRF-Token header on each PATCH, POST,\nPUT, or DELETE request.\n\nIf the request data is missing or does not match the cookie data,\nan InvalidCsrfTokenException will be raised.\n\nThis component integrates with the FormHelper automatically and when\nused together your forms will have CSRF tokens automatically added\nwhen `$this->Form->create(...)` is used in a view."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"A ComponentRegistry this component can use to lazy load its components"},"$config":{"type":"array","description":"Array of configuration settings."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Controller\\Component\\FlashComponent":{"class":{"descriptions":{"short":"The CakePHP FlashComponent provides a way for you to write a flash variable\nto the session from your controllers, to be rendered in a view with the\nFlashHelper.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"A ComponentRegistry for this component"},"$config":{"type":"array","description":"Array of config."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Controller\\Component\\PaginatorComponent":{"class":{"descriptions":{"short":"This component is used to handle automatic model data pagination. The primary way to use this\ncomponent is to call the paginate() method. There is a convenience wrapper on Controller as well.","long":"### Configuring pagination\n\nYou configure pagination when calling paginate(). See that method for more details."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"A ComponentRegistry this component can use to lazy load its components"},"$config":{"type":"array","description":"Array of configuration settings."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Controller\\Component\\RequestHandlerComponent":{"class":{"descriptions":{"short":"Request object for handling alternative HTTP requests","long":"Alternative HTTP requests can come from wireless units like mobile phones, palmtop computers,\nand the like. These units have no use for AJAX requests, and this Component can tell how Cake\nshould respond to the different needs of a handheld computer and a desktop machine."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"ComponentRegistry object."},"$config":{"type":"array","description":"Array of config."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Parses the accepted content types accepted by the client using HTTP_ACCEPT","long":""},"deprecated":false}}}},"Cake\\Controller\\Component\\SecurityComponent":{"class":{"descriptions":{"short":"The Security Component creates an easy way to integrate tighter security in\nyour application. It provides methods for various tasks like:","long":"- Restricting which HTTP methods your application accepts.\n- Form tampering protection\n- Requiring that SSL be used.\n- Limiting cross controller communication."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"A ComponentRegistry this component can use to lazy load its components"},"$config":{"type":"array","description":"Array of configuration settings."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Controller\\Controller":{"class":{"descriptions":{"short":"Application controller class for organization of business logic.\nProvides basic functionality, such as rendering views inside layouts,\nautomatic model availability, redirection, callbacks, and more.","long":"Controllers should provide a number of 'action' methods. These are public\nmethods on a controller that are not inherited from `Controller`.\nEach action serves as an endpoint for performing a specific action on a\nresource or collection of resources. For example adding or editing a new\nobject, or listing a set of objects.\n\nYou can access request parameters, using `$this->request`. The request object\ncontains all the POST, GET and FILES that were part of the request.\n\nAfter performing the required action, controllers are responsible for\ncreating a response. This usually takes the form of a generated `View`, or\npossibly a redirection to another URL. In either case `$this->response`\nallows you to manipulate all aspects of the response.\n\nControllers are created by `Dispatcher` based on request parameters and\nrouting. By default controllers and actions use conventional names.\nFor example `\/posts\/index` maps to `PostsController::index()`. You can re-map\nURLs using Router::connect() or RouterBuilder::connect().\n\n### Life cycle callbacks\n\nCakePHP fires a number of life cycle callbacks during each request.\nBy implementing a method you can receive the related events. The available\ncallbacks are:\n\n- `beforeFilter(Event $event)`\nCalled before each action. This is a good place to do general logic that\napplies to all actions.\n- `beforeRender(Event $event)`\nCalled before the view is rendered.\n- `beforeRedirect(Event $event, $url, Response $response)`\nCalled before a redirect is done.\n- `afterFilter(Event $event)`\nCalled after each action is complete and after the view is rendered."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$request","$response","$name","$eventManager","$components"],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request|null","description":"Request object for this controller. Can be null for testing, but expect that features that use the request parameters will not work."},"$response":{"type":"\\Cake\\Network\\Response|null","description":"Response object for this controller."},"$name":{"type":"string|null","description":"Override the name useful in testing when using mocks."},"$eventManager":{"type":"\\Cake\\Event\\EventManager|null","description":"The event manager. Defaults to a new instance."},"$components":{"type":"\\Cake\\Controller\\ComponentRegistry|null","description":"The component registry. Defaults to a new instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Sets a number of properties based on conventions if they are empty. To override the\nconventions CakePHP uses you can define properties in your class declaration."},"deprecated":false}}}},"Cake\\Controller\\ErrorController":{"class":{"descriptions":{"short":"Error Handling Controller","long":"Controller used by ErrorHandler to render error views."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$request","$response","$name","$eventManager","$components"],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request|null","description":"Request object for this controller. Can be null for testing, but expect that features that use the request parameters will not work."},"$response":{"type":"\\Cake\\Network\\Response|null","description":"Response object for this controller."},"$name":{"type":"string|null","description":"Override the name useful in testing when using mocks."},"$eventManager":{"type":"\\Cake\\Event\\EventManager|null","description":"The event manager. Defaults to a new instance."},"$components":{"type":"\\Cake\\Controller\\ComponentRegistry|null","description":"The component registry. Defaults to a new instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Sets a number of properties based on conventions if they are empty. To override the\nconventions CakePHP uses you can define properties in your class declaration."},"deprecated":false}}}},"Cake\\Controller\\Exception\\AuthSecurityException":{"class":{"descriptions":{"short":"Auth Security exception - used when SecurityComponent detects any issue with the current request","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Bad Request' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 400"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Controller\\Exception\\MissingActionException":{"class":{"descriptions":{"short":"Missing Action exception - used when a controller action\ncannot be found, or when the controller's isAction() method returns false.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Controller\\Exception\\MissingComponentException":{"class":{"descriptions":{"short":"Used when a component cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Controller\\Exception\\SecurityException":{"class":{"descriptions":{"short":"Security exception - used when SecurityComponent detects any issue with the current request","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Bad Request' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 400"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Core\\App":{"class":{"descriptions":{"short":"App is responsible for resource location, and path management.","long":"### Adding paths\n\nAdditional paths for Templates and Plugins are configured with Configure now. See config\/app.php for an\nexample. The `App.paths.plugins` and `App.paths.templates` variables are used to configure paths for plugins\nand templates respectively. All class based resources should be mapped using your application's autoloader.\n\n### Inspecting loaded paths\n\nYou can inspect the currently loaded paths using `App::path('Controller')` for example to see loaded\ncontroller paths.\n\nIt is also possible to inspect paths for plugin classes, for instance, to get\nthe path to a plugin's helpers you would call `App::path('View\/Helper', 'MyPlugin')`\n\n### Locating plugins\n\nPlugins can be located with App as well. Using Plugin::path('DebugKit') for example, will\ngive you the full path to the DebugKit plugin."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Core\\ClassLoader":{"class":{"descriptions":{"short":"ClassLoader","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Core\\Configure":{"class":{"descriptions":{"short":"Configuration class. Used for managing runtime configuration information.","long":"Provides features for reading and writing to the runtime configuration, as well\nas methods for loading additional configuration files or storing runtime configuration\nfor future use."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Core\\Configure\\ConfigEngineInterface":{"class":{"descriptions":{"short":"An interface for creating objects compatible with Configure::load()","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Core\\Configure\\Engine\\IniConfig":{"class":{"descriptions":{"short":"Ini file configuration engine.","long":"Since IniConfig uses parse_ini_file underneath, you should be aware that this\nclass shares the same behavior, especially with regards to boolean and null values.\n\nIn addition to the native `parse_ini_file` features, IniConfig also allows you\nto create nested array structures through usage of `.` delimited names. This allows\nyou to create nested arrays structures in an ini config file. For example:\n\n`db.password = secret` would turn into `['db' => ['password' => 'secret']]`\n\nYou can nest properties as deeply as needed using `.`'s. In addition to using `.` you\ncan use standard ini section notation to create nested structures:\n\n```\n[section]\nkey = value\n```\n\nOnce loaded into Configure, the above would be accessed using:\n\n`Configure::read('section.key');\n\nYou can combine `.` separated values with sections to create more deeply\nnested structures.\n\nIniConfig also manipulates how the special ini values of\n'yes', 'no', 'on', 'off', 'null' are handled. These values will be\nconverted to their boolean equivalents."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$path","$section"],"docParameters":{"$path":{"type":"string|null","description":"Path to load ini config files from. Defaults to CONFIG."},"$section":{"type":"string|null","description":"Only get one section, leave null to parse and fetch all sections in the ini file."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Build and construct a new ini file parser. The parser can be used to read\nini files that are on the filesystem.","long":""},"deprecated":false}}}},"Cake\\Core\\Configure\\Engine\\JsonConfig":{"class":{"descriptions":{"short":"JSON engine allows Configure to load configuration values from\nfiles containing JSON strings.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$path"],"docParameters":{"$path":{"type":"string|null","description":"The path to read config files from. Defaults to CONFIG."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor for JSON Config file reading.","long":""},"deprecated":false}}}},"Cake\\Core\\Configure\\Engine\\PhpConfig":{"class":{"descriptions":{"short":"PHP engine allows Configure to load configuration values from\nfiles containing simple PHP arrays.","long":"Files compatible with PhpConfig should return an array that\ncontains all of the configuration data contained in the file."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$path"],"docParameters":{"$path":{"type":"string|null","description":"The path to read config files from. Defaults to CONFIG."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor for PHP Config file reading.","long":""},"deprecated":false}}}},"Cake\\Core\\Configure\\FileConfigTrait":{"class":{"descriptions":{"short":"Trait providing utility methods for file based config engines.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Core\\ConventionsTrait":{"class":{"descriptions":{"short":"Provides methods that allow other classes access to conventions based inflections.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Core\\Exception\\Exception":{"class":{"descriptions":{"short":"Base class that all CakePHP Exceptions extend.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Core\\Exception\\MissingPluginException":{"class":{"descriptions":{"short":"Exception raised when a plugin could not be found","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Core\\InstanceConfigTrait":{"class":{"descriptions":{"short":"A trait for reading and writing instance config","long":"Implementing objects are expected to declare a `$_defaultConfig` property."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Core\\ObjectRegistry":{"class":{"descriptions":{"short":"Acts as a registry\/factory for objects.","long":"Provides registry & factory functionality for object types. Used\nas a super class for various composition based re-use features in CakePHP.\n\nEach subclass needs to implement the various abstract methods to complete\nthe template method load().\n\nThe ObjectRegistry is EventManager aware, but each extending class will need to use\n\\Cake\\Event\\EventDispatcherTrait to attach and detach on set and bind"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Core\\Plugin":{"class":{"descriptions":{"short":"Plugin is used to load and locate plugins.","long":"It also can retrieve plugin paths and load their bootstrap and routes files."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Core\\StaticConfigTrait":{"class":{"descriptions":{"short":"A trait that provides a set of static methods to manage configuration\nfor classes that provide an adapter facade or need to have sets of\nconfiguration data registered and manipulated.","long":"Implementing objects are expected to declare a static `$_dsnClassMap` property."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Connection":{"class":{"descriptions":{"short":"Represents a connection with a database server.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$config"],"optionals":[],"docParameters":{"$config":{"type":"array","description":"configuration for connecting to database"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Database\\Dialect\\MysqlDialectTrait":{"class":{"descriptions":{"short":"Contains functions that encapsulates the SQL dialect used by MySQL,\nincluding query translators and schema introspection.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Dialect\\PostgresDialectTrait":{"class":{"descriptions":{"short":"Contains functions that encapsulates the SQL dialect used by Postgres,\nincluding query translators and schema introspection.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Dialect\\SqliteDialectTrait":{"class":{"descriptions":{"short":"SQLite dialect trait","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Dialect\\SqlserverDialectTrait":{"class":{"descriptions":{"short":"Contains functions that encapsulates the SQL dialect used by SQLServer,\nincluding query translators and schema introspection.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Dialect\\TupleComparisonTranslatorTrait":{"class":{"descriptions":{"short":"Provides a translator method for tuple comparisons","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Driver":{"class":{"descriptions":{"short":"Represents a database diver containing all specificities for\na database engine including its SQL dialect","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"The configuration for the driver."}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Driver\\Mysql":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"The configuration for the driver."}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Driver\\PDODriverTrait":{"class":{"descriptions":{"short":"PDO driver trait","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Driver\\Postgres":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"The configuration for the driver."}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Driver\\Sqlite":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"The configuration for the driver."}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Driver\\Sqlserver":{"class":{"descriptions":{"short":"SQLServer driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"The configuration for the driver."}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Exception":{"class":{"descriptions":{"short":"Exception for the database package.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Database\\Exception\\MissingConnectionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Database\\Exception\\MissingDriverException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Database\\Exception\\MissingExtensionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Database\\ExpressionInterface":{"class":{"descriptions":{"short":"An interface used by Expression objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Expression\\BetweenExpression":{"class":{"descriptions":{"short":"An expression object that represents a SQL BETWEEN snippet","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field","$from","$to"],"optionals":["$type"],"docParameters":{"$field":{"type":"string|\\Cake\\Database\\ExpressionInterface","description":"The field name to compare for values in between the range."},"$from":{"type":"mixed","description":"The initial value of the range."},"$to":{"type":"mixed","description":"The ending value in the comparison range."},"$type":{"type":"string|null","description":"The data type name to bind the values with."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Expression\\CaseExpression":{"class":{"descriptions":{"short":"This class represents a SQL Case statement","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$conditions","$values","$types"],"docParameters":{"$conditions":{"type":"array|\\Cake\\Database\\ExpressionInterface","description":"The conditions to test. Must be a ExpressionInterface instance, or an array of ExpressionInterface instances."},"$values":{"type":"array|\\Cake\\Database\\ExpressionInterface","description":"associative array of values to be associated with the conditions passed in $conditions. If there are more $values than $conditions, the last $value is used as the `ELSE` value"},"$types":{"type":"array","description":"associative array of types to be associated with the values passed in $values"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs the case expression","long":""},"deprecated":false}}}},"Cake\\Database\\Expression\\Comparison":{"class":{"descriptions":{"short":"A Comparison is a type of query expression that represents an operation\ninvolving a field an operator and a value. In its most common form the\nstring representation of a comparison is `field = value`","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field","$value","$type","$operator"],"optionals":[],"docParameters":{"$field":{"type":"string|\\Cake\\Database\\ExpressionInterface","description":"the field name to compare to a value"},"$value":{"type":"mixed","description":"The value to be used in comparison"},"$type":{"type":"string","description":"the type name used to cast the value"},"$operator":{"type":"string","description":"the operator used for comparing field and value"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Expression\\FieldInterface":{"class":{"descriptions":{"short":"Describes a getter and a setter for the a field property. Useful for expressions\nthat contain an identifier to compare against.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Expression\\FieldTrait":{"class":{"descriptions":{"short":"Contains the field property with a getter and a setter for it","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Expression\\FunctionExpression":{"class":{"descriptions":{"short":"This class represents a function call string in a SQL statement. Calls can be\nconstructed by passing the name of the function and a list of params.\nFor security reasons, all params passed are quoted by default unless\nexplicitly told otherwise.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$params","$types","$returnType"],"docParameters":{"$name":{"type":"string","description":"the name of the function to be constructed"},"$params":{"type":"array","description":"list of arguments to be passed to the function If associative the key would be used as argument when value is 'literal'"},"$types":{"type":"array","description":"associative array of types to be associated with the passed arguments"},"$returnType":{"type":"string","description":"The return type of this expression"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Takes a name for the function to be invoked and a list of params\nto be passed into the function. Optionally you can pass a list of types to\nbe used for each bound param.","long":"By default, all params that are passed will be quoted. If you wish to use\nliteral arguments, you need to explicitly hint this function.\n\n### Examples:\n\n`$f = new FunctionExpression('CONCAT', ['CakePHP', ' rules']);`\n\nPrevious line will generate `CONCAT('CakePHP', ' rules')`\n\n`$f = new FunctionExpression('CONCAT', ['name' => 'literal', ' rules']);`\n\nWill produce `CONCAT(name, ' rules')`"},"deprecated":false}}}},"Cake\\Database\\Expression\\IdentifierExpression":{"class":{"descriptions":{"short":"Represents a single identifier name in the database","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$identifier"],"optionals":[],"docParameters":{"$identifier":{"type":"string","description":"The identifier this expression represents"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Expression\\OrderByExpression":{"class":{"descriptions":{"short":"An expression object for ORDER BY clauses","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$conditions","$types","$conjunction"],"docParameters":{"$conditions":{"type":"string|array|\\Cake\\Database\\ExpressionInterface","description":"The sort columns"},"$types":{"type":"array|\\Cake\\Database\\TypeMap","description":"The types for each column."},"$conjunction":{"type":"string","description":"The glue used to join conditions together."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Expression\\OrderClauseExpression":{"class":{"descriptions":{"short":"An expression object for complex ORDER BY clauses","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field","$direction"],"optionals":[],"docParameters":{"$field":{"type":"\\Cake\\Database\\ExpressionInterface|string","description":"The field to order on."},"$direction":{"type":"string","description":"The direction to sort on."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Expression\\QueryExpression":{"class":{"descriptions":{"short":"Represents a SQL Query expression. Internally it stores a tree of\nexpressions that can be compiled by converting this object to string\nand will contain a correctly parenthesized and nested expression.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$conditions","$types","$conjunction"],"docParameters":{"$conditions":{"type":"string|array|\\Cake\\Database\\ExpressionInterface","description":"tree-like array structure containing all the conditions to be added or nested inside this expression object."},"$types":{"type":"array|\\Cake\\Database\\TypeMap","description":"associative array of types to be associated with the values passed in $conditions."},"$conjunction":{"type":"string","description":"the glue that will join all the string conditions at this level of the expression tree. For example \"AND\", \"OR\", \"XOR\"..."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. A new expression object can be created without any params and\nbe built dynamically. Otherwise it is possible to pass an array of conditions\ncontaining either a tree-like array structure to be parsed and\/or other\nexpression objects. Optionally, you can set the conjunction keyword to be used\nfor joining each part of this level of the expression tree.","long":""},"deprecated":false}}}},"Cake\\Database\\Expression\\TupleComparison":{"class":{"descriptions":{"short":"This expression represents SQL fragments that are used for comparing one tuple\nto another, one tuple to a set of other tuples or one tuple to an expression","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fields","$values"],"optionals":["$types","$conjunction"],"docParameters":{"$fields":{"type":"string|array|\\Cake\\Database\\ExpressionInterface","description":"the fields to use to form a tuple"},"$values":{"type":"array|\\Cake\\Database\\ExpressionInterface","description":"the values to use to form a tuple"},"$types":{"type":"array","description":"the types names to use for casting each of the values, only one type per position in the value array in needed"},"$conjunction":{"type":"string","description":"the operator used for comparing field and value"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Expression\\UnaryExpression":{"class":{"descriptions":{"short":"An expression object that represents an expression with only a single operand.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$operator","$value"],"optionals":["$mode"],"docParameters":{"$operator":{"type":"string","description":"The operator to used for the expression"},"$value":{"type":"mixed","description":"the value to use as the operand for the expression"},"$mode":{"type":"int","description":"either UnaryExpression::PREFIX or UnaryExpression::POSTFIX"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Expression\\ValuesExpression":{"class":{"descriptions":{"short":"An expression object to contain values being inserted.","long":"Helps generate SQL with the correct number of placeholders and bind\nvalues correctly into the statement."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$columns","$typeMap"],"optionals":[],"docParameters":{"$columns":{"type":"array","description":"The list of columns that are going to be part of the values."},"$typeMap":{"type":"\\Cake\\Database\\TypeMap","description":"A dictionary of column -> type names"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\FieldTypeConverter":{"class":{"descriptions":{"short":"A callable class to be used for processing each of the rows in a statement\nresult, so that the values are converted to the right PHP types.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$typeMap","$driver"],"optionals":[],"docParameters":{"$typeMap":{"type":"\\Cake\\Database\\TypeMap","description":"Contains the types to use for converting results"},"$driver":{"type":"\\Cake\\Database\\Driver","description":"The driver to use for the type conversion"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Builds the type map","long":""},"deprecated":false}}}},"Cake\\Database\\FunctionsBuilder":{"class":{"descriptions":{"short":"Contains methods related to generating FunctionExpression objects\nwith most commonly used SQL functions.\nThis acts as a factory for FunctionExpression objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\IdentifierQuoter":{"class":{"descriptions":{"short":"Contains all the logic related to quoting identifiers in a Query object","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$driver"],"optionals":[],"docParameters":{"$driver":{"type":"\\Cake\\Database\\Driver","description":"The driver instance used to do the identifier quoting"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Log\\LoggedQuery":{"class":{"descriptions":{"short":"Contains a query string, the params used to executed it, time taken to do it\nand the number of rows found or affected by its execution.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Log\\LoggingStatement":{"class":{"descriptions":{"short":"Statement decorator used to","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$statement","$driver"],"docParameters":{"$statement":{"type":"\\Cake\\Database\\StatementInterface|null","description":"Statement implementation such as PDOStatement"},"$driver":{"type":"\\Cake\\Database\\Driver|null","description":"Driver instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Log\\QueryLogger":{"class":{"descriptions":{"short":"This class is a bridge used to write LoggedQuery objects into a real log.\nby default this class use the built-in CakePHP Log class to accomplish this","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Query":{"class":{"descriptions":{"short":"This class represents a Relational database SQL Query. A query can be of\ndifferent types like select, update, insert and delete. Exposes the methods\nfor dynamically constructing each query part, execute it and transform it\nto a specific SQL dialect.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection"],"optionals":[],"docParameters":{"$connection":{"type":"\\Cake\\Datasource\\ConnectionInterface","description":"The connection object to be used for transforming and executing this query"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Database\\QueryCompiler":{"class":{"descriptions":{"short":"Responsible for compiling a Query object into its SQL representation","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Schema\\BaseSchema":{"class":{"descriptions":{"short":"Base class for schema implementations.","long":"This class contains methods that are common across\nthe various SQL dialects."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$driver"],"optionals":[],"docParameters":{"$driver":{"type":"\\Cake\\Database\\Driver","description":"The driver to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"This constructor will connect the driver so that methods like columnSql() and others\nwill fail when the driver has not been connected."},"deprecated":false}}}},"Cake\\Database\\Schema\\CachedCollection":{"class":{"descriptions":{"short":"Extends the schema collection class to provide caching","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection"],"optionals":["$cacheKey"],"docParameters":{"$connection":{"type":"\\Cake\\Datasource\\ConnectionInterface","description":"The connection instance."},"$cacheKey":{"type":"string|bool","description":"The cache key or boolean false to disable caching."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Database\\Schema\\Collection":{"class":{"descriptions":{"short":"Represents a database schema collection","long":"Used to access information about the tables,\nand other data in a database."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection"],"optionals":[],"docParameters":{"$connection":{"type":"\\Cake\\Datasource\\ConnectionInterface","description":"The connection instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Database\\Schema\\MysqlSchema":{"class":{"descriptions":{"short":"Schema generation\/reflection features for MySQL","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$driver"],"optionals":[],"docParameters":{"$driver":{"type":"\\Cake\\Database\\Driver","description":"The driver to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"This constructor will connect the driver so that methods like columnSql() and others\nwill fail when the driver has not been connected."},"deprecated":false}}}},"Cake\\Database\\Schema\\PostgresSchema":{"class":{"descriptions":{"short":"Schema management\/reflection features for Postgres.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$driver"],"optionals":[],"docParameters":{"$driver":{"type":"\\Cake\\Database\\Driver","description":"The driver to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"This constructor will connect the driver so that methods like columnSql() and others\nwill fail when the driver has not been connected."},"deprecated":false}}}},"Cake\\Database\\Schema\\SqliteSchema":{"class":{"descriptions":{"short":"Schema management\/reflection features for Sqlite","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$driver"],"optionals":[],"docParameters":{"$driver":{"type":"\\Cake\\Database\\Driver","description":"The driver to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"This constructor will connect the driver so that methods like columnSql() and others\nwill fail when the driver has not been connected."},"deprecated":false}}}},"Cake\\Database\\Schema\\SqlserverSchema":{"class":{"descriptions":{"short":"Schema management\/reflection features for SQLServer.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$driver"],"optionals":[],"docParameters":{"$driver":{"type":"\\Cake\\Database\\Driver","description":"The driver to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"This constructor will connect the driver so that methods like columnSql() and others\nwill fail when the driver has not been connected."},"deprecated":false}}}},"Cake\\Database\\Schema\\Table":{"class":{"descriptions":{"short":"Represents a single table in a database schema.","long":"Can either be populated using the reflection API's\nor by incrementally building an instance using\nmethods.\n\nOnce created Table instances can be added to\nSchema\\Collection objects. They can also be converted into SQL using the\ncreateSql(), dropSql() and truncateSql() methods."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$table"],"optionals":["$columns"],"docParameters":{"$table":{"type":"string","description":"The table name."},"$columns":{"type":"array","description":"The list of columns for the schema."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Database\\SqlDialectTrait":{"class":{"descriptions":{"short":"Sql dialect trait","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\SqliteCompiler":{"class":{"descriptions":{"short":"Responsible for compiling a Query object into its SQL representation\nfor SQLite","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\SqlserverCompiler":{"class":{"descriptions":{"short":"Responsible for compiling a Query object into its SQL representation\nfor SQL Server","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\StatementInterface":{"class":{"descriptions":{"short":"Represents a database statement. Concrete implementations\ncan either use PDOStatement or a native driver","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Statement\\BufferResultsTrait":{"class":{"descriptions":{"short":"Contains a setter for marking a Statement as buffered","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Statement\\BufferedStatement":{"class":{"descriptions":{"short":"A statement decorator that implements buffered results.","long":"This statement decorator will save fetched results in memory, allowing\nthe iterator to be rewound and reused."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$statement","$driver"],"docParameters":{"$statement":{"type":"\\Cake\\Database\\StatementInterface|null","description":"Statement implementation such as PDOStatement"},"$driver":{"type":"\\Cake\\Database\\Driver|null","description":"Driver instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Statement\\CallbackStatement":{"class":{"descriptions":{"short":"Wraps a statement in a callback that allows row results\nto be modified when being fetched.","long":"This is used by CakePHP to eagerly load association data."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$statement","$driver","$callback"],"optionals":[],"docParameters":{"$statement":{"type":"\\Cake\\Database\\StatementInterface","description":"The statement to decorate."},"$driver":{"type":"\\Cake\\Database\\Driver","description":"The driver instance used by the statement."},"$callback":{"type":"callable","description":"The callback to apply to results before they are returned."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Statement\\MysqlStatement":{"class":{"descriptions":{"short":"Statement class meant to be used by a Mysql PDO driver","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$statement","$driver"],"docParameters":{"$statement":{"type":"\\PDOStatement|null","description":"Original statement to be decorated."},"$driver":{"type":"\\Cake\\Database\\Driver|null","description":"Driver instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Statement\\PDOStatement":{"class":{"descriptions":{"short":"Decorator for \\PDOStatement class mainly used for converting human readable\nfetch modes into PDO constants.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$statement","$driver"],"docParameters":{"$statement":{"type":"\\PDOStatement|null","description":"Original statement to be decorated."},"$driver":{"type":"\\Cake\\Database\\Driver|null","description":"Driver instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Statement\\SqliteStatement":{"class":{"descriptions":{"short":"Statement class meant to be used by an Sqlite driver","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$statement","$driver"],"docParameters":{"$statement":{"type":"\\Cake\\Database\\StatementInterface|null","description":"Statement implementation such as PDOStatement"},"$driver":{"type":"\\Cake\\Database\\Driver|null","description":"Driver instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Statement\\SqlserverStatement":{"class":{"descriptions":{"short":"Statement class meant to be used by an Sqlserver driver","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$statement","$driver"],"docParameters":{"$statement":{"type":"\\PDOStatement|null","description":"Original statement to be decorated."},"$driver":{"type":"\\Cake\\Database\\Driver|null","description":"Driver instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Statement\\StatementDecorator":{"class":{"descriptions":{"short":"Represents a database statement. Statements contains queries that can be\nexecuted multiple times by binding different values on each call. This class\nalso helps convert values to their valid representation for the corresponding\ntypes.","long":"This class is but a decorator of an actual statement implementation, such as\nPDOStatement."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$statement","$driver"],"docParameters":{"$statement":{"type":"\\Cake\\Database\\StatementInterface|null","description":"Statement implementation such as PDOStatement"},"$driver":{"type":"\\Cake\\Database\\Driver|null","description":"Driver instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type":{"class":{"descriptions":{"short":"Encapsulates all conversion functions for values coming from database into PHP and\ngoing from PHP into database.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\TypeConverterTrait":{"class":{"descriptions":{"short":"Type converter trait","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\TypeInterface":{"class":{"descriptions":{"short":"Encapsulates all conversion functions for values coming from a database into PHP and\ngoing from PHP into a database.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\TypeMap":{"class":{"descriptions":{"short":"Implements default and single-use mappings for columns to their associated types","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$defaults"],"docParameters":{"$defaults":{"type":"array","description":"The defaults to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates an instance with the given defaults","long":""},"deprecated":false}}}},"Cake\\Database\\TypeMapTrait":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Type\\BinaryType":{"class":{"descriptions":{"short":"Binary type converter.","long":"Use to convert binary data between PHP and the database types."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type\\BoolType":{"class":{"descriptions":{"short":"Bool type converter.","long":"Use to convert bool data between PHP and the database types."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type\\DateTimeType":{"class":{"descriptions":{"short":"Datetime type converter.","long":"Use to convert datetime instances to strings & back."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type\\DateType":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type\\DecimalType":{"class":{"descriptions":{"short":"Decimal type converter.","long":"Use to convert decimal data between PHP and the database types."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type\\ExpressionTypeCasterTrait":{"class":{"descriptions":{"short":"Offers a method to convert values to ExpressionInterface objects\nif the type they should be converted to implements ExpressionTypeInterface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Type\\ExpressionTypeInterface":{"class":{"descriptions":{"short":"An interface used by Type objects to signal whether the value should\nbe converted to an ExpressionInterface instead of a string when sent\nto the database.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Type\\FloatType":{"class":{"descriptions":{"short":"Float type converter.","long":"Use to convert float\/decimal data between PHP and the database types."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type\\IntegerType":{"class":{"descriptions":{"short":"Integer type converter.","long":"Use to convert integer data between PHP and the database types."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type\\JsonType":{"class":{"descriptions":{"short":"Json type converter.","long":"Use to convert json data between PHP and the database types."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type\\OptionalConvertInterface":{"class":{"descriptions":{"short":"An interface used by Type objects to signal whether the casting\nis actually required.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\Type\\StringType":{"class":{"descriptions":{"short":"String type converter.","long":"Use to convert string data between PHP and the database types."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type\\TimeType":{"class":{"descriptions":{"short":"Time type converter.","long":"Use to convert time instances to strings & back."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\Type\\UuidType":{"class":{"descriptions":{"short":"Provides behavior for the UUID type","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name identifying this type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Database\\TypedResultInterface":{"class":{"descriptions":{"short":"Represents an expression that is known to return a specific type","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\TypedResultTrait":{"class":{"descriptions":{"short":"Implements the TypedResultInterface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Database\\ValueBinder":{"class":{"descriptions":{"short":"Value binder class manages list of values bound to conditions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\ConnectionInterface":{"class":{"descriptions":{"short":"This interface defines the methods you can depend on in\na connection.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\ConnectionManager":{"class":{"descriptions":{"short":"Manages and loads instances of Connection","long":"Provides an interface to loading and creating connection objects. Acts as\na registry for the connections defined in an application.\n\nProvides an interface for loading and enumerating connections defined in\nconfig\/app.php"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\ConnectionRegistry":{"class":{"descriptions":{"short":"A registry object for connection instances.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\EntityInterface":{"class":{"descriptions":{"short":"Describes the methods that any class representing a data storage should\ncomply with.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\EntityTrait":{"class":{"descriptions":{"short":"An entity represents a single result row from a repository. It exposes the\nmethods for retrieving and storing properties associated in this row.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\Exception\\InvalidPrimaryKeyException":{"class":{"descriptions":{"short":"Exception raised when the provided primary key does not match the table primary key","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string","description":"The error message"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Datasource\\Exception\\MissingDatasourceConfigException":{"class":{"descriptions":{"short":"Exception class to be thrown when a datasource configuration is not found","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Datasource\\Exception\\MissingDatasourceException":{"class":{"descriptions":{"short":"Used when a datasource cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Datasource\\Exception\\MissingModelException":{"class":{"descriptions":{"short":"Used when a model cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Datasource\\Exception\\RecordNotFoundException":{"class":{"descriptions":{"short":"Exception raised when a particular record was not found","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string","description":"The error message"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Datasource\\FactoryLocator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\FixtureInterface":{"class":{"descriptions":{"short":"Defines the interface that testing fixtures use.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\InvalidPropertyInterface":{"class":{"descriptions":{"short":"Describes the methods that any class representing a data storage should\ncomply with.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\ModelAwareTrait":{"class":{"descriptions":{"short":"Provides functionality for loading table classes\nand other repositories onto properties of the host object.","long":"Example users of this trait are Cake\\Controller\\Controller and\nCake\\Console\\Shell."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\QueryCacher":{"class":{"descriptions":{"short":"Handles caching queries and loading results from the cache.","long":"Used by Cake\\Datasource\\QueryTrait internally."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$config"],"optionals":[],"docParameters":{"$key":{"type":"string|\\Closure","description":"The key or function to generate a key."},"$config":{"type":"string|\\Cake\\Cache\\CacheEngine","description":"The cache config name or cache engine instance."}},"throws":{"\\RuntimeException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Datasource\\QueryInterface":{"class":{"descriptions":{"short":"The basis for every query object","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\QueryTrait":{"class":{"descriptions":{"short":"Contains the characteristics for an object that is attached to a repository and\ncan retrieve results based on any criteria.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\RepositoryInterface":{"class":{"descriptions":{"short":"Describes the methods that any class representing a data storage should\ncomply with.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\ResultSetDecorator":{"class":{"descriptions":{"short":"Generic ResultSet decorator. This will make any traversable object appear to\nbe a database result","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$items"],"optionals":[],"docParameters":{"$items":{"type":"array|\\Traversable","description":"Items."}},"throws":{"\\InvalidArgumentException":"If passed incorrect type for items."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. You can provide an array or any traversable object","long":""},"deprecated":false}}}},"Cake\\Datasource\\ResultSetInterface":{"class":{"descriptions":{"short":"Describes how a collection of datasource results should look like","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\RuleInvoker":{"class":{"descriptions":{"short":"Contains logic for invoking an application rule.","long":"Combined with Cake\\Datasource\\RuleChecker as an implementation\ndetail to de-duplicate rule decoration and provide cleaner separation\nof duties."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$rule","$name"],"optionals":["$options"],"docParameters":{"$rule":{"type":"callable","description":"The rule to be invoked."},"$name":{"type":"string","description":"The name of the rule. Used in error messsages."},"$options":{"type":"array","description":"The options for the rule. See above."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"### Options\n\n- `errorField` The field errors should be set onto.\n- `message` The error message.\n\nIndividual rules may have additional options that can be\nset here. Any options will be passed into the rule as part of the\nrule $scope."},"deprecated":false}}}},"Cake\\Datasource\\RulesAwareTrait":{"class":{"descriptions":{"short":"A trait that allows a class to build and apply application.\nrules.","long":"If the implementing class also implements EventAwareTrait, then\nevents will be emitted when rules are checked.\n\nThe implementing class is expected to define the `RULES_CLASS` constant\nif they need to customize which class is used for rules objects."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Datasource\\RulesChecker":{"class":{"descriptions":{"short":"Contains logic for storing and checking rules on entities","long":"RulesCheckers are used by Table classes to ensure that the\ncurrent entity state satisfies the application logic and business rules.\n\nRulesCheckers afford different rules to be applied in the create and update\nscenario.\n\n### Adding rules\n\nRules must be callable objects that return true\/false depending on whether or\nnot the rule has been satisfied. You can use RulesChecker::add(), RulesChecker::addCreate(),\nRulesChecker::addUpdate() and RulesChecker::addDelete to add rules to a checker.\n\n### Running checks\n\nGenerally a Table object will invoke the rules objects, but you can manually\ninvoke the checks by calling RulesChecker::checkCreate(), RulesChecker::checkUpdate() or\nRulesChecker::checkDelete()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":"The options to pass to every rule"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Takes the options to be passed to all rules.","long":""},"deprecated":false}}}},"Cake\\Datasource\\TableSchemaInterface":{"class":{"descriptions":{"short":"Defines the interface for getting the schema.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Error\\BaseErrorHandler":{"class":{"descriptions":{"short":"Base error handler that provides logic common to the CLI + web\nerror\/exception handlers.","long":"Subclasses are required to implement the template methods to handle displaying\nthe errors in their environment."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Error\\Debugger":{"class":{"descriptions":{"short":"Provide custom logging and error handling.","long":"Debugger overrides PHP's default error handling to provide stack traces and enhanced logging"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Error\\ErrorHandler":{"class":{"descriptions":{"short":"Error Handler provides basic error and exception handling for your application. It captures and\nhandles all unhandled exceptions and errors. Displays helpful framework errors when debug > 1.","long":"### Uncaught exceptions\n\nWhen debug < 1 a CakeException will render 404 or 500 errors. If an uncaught exception is thrown\nand it is a type that ErrorHandler does not know about it will be treated as a 500 error.\n\n### Implementing application specific exception handling\n\nYou can implement application specific exception handling in one of a few ways. Each approach\ngives you different amounts of control over the exception handling process.\n\n- Modify config\/error.php and setup custom exception handling.\n- Use the `exceptionRenderer` option to inject an Exception renderer. This will\nlet you keep the existing handling logic but override the rendering logic.\n\n#### Create your own Exception handler\n\nThis gives you full control over the exception handling process. The class you choose should be\nloaded in your config\/error.php and registered as the default exception handler.\n\n#### Using a custom renderer with `exceptionRenderer`\n\nIf you don't want to take control of the exception handling, but want to change how exceptions are\nrendered you can use `exceptionRenderer` option to choose a class to render exception pages. By default\n`Cake\\Error\\ExceptionRenderer` is used. Your custom exception renderer class should be placed in src\/Error.\n\nYour custom renderer should expect an exception in its constructor, and implement a render method.\nFailing to do so will cause additional errors.\n\n#### Logging exceptions\n\nUsing the built-in exception handling, you can log all the exceptions\nthat are dealt with by ErrorHandler by setting `log` option to true in your config\/error.php.\nEnabling this will log every exception to Log and the configured loggers.\n\n### PHP errors\n\nError handler also provides the built in features for handling php errors (trigger_error).\nWhile in debug mode, errors will be output to the screen using debugger. While in production mode,\nerrors will be logged to Log.  You can control which errors are logged by setting\n`errorLevel` option in config\/error.php.\n\n#### Logging errors\n\nWhen ErrorHandler is used for handling errors, you can enable error logging by setting the `log`\noption to true. This will log all errors to the configured log handlers.\n\n#### Controlling what errors are logged\/displayed\n\nYou can control which errors are logged \/ displayed by ErrorHandler by setting `errorLevel`. Setting this\nto one or a combination of a few of the E_* constants will only enable the specified errors:\n\n```\n$options['errorLevel'] = E_ALL & ~E_NOTICE;\n```\n\nWould enable handling for all non Notice errors."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":"The options for error handling."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Error\\ExceptionRenderer":{"class":{"descriptions":{"short":"Exception Renderer.","long":"Captures and handles all unhandled exceptions. Displays helpful framework errors when debug is true.\nWhen debug is false a CakeException will render 404 or 500 errors. If an uncaught exception is thrown\nand it is a type that ExceptionHandler does not know about it will be treated as a 500 error.\n\n### Implementing application specific exception rendering\n\nYou can implement application specific exception handling by creating a subclass of\nExceptionRenderer and configure it to be the `exceptionRenderer` in config\/error.php\n\n#### Using a subclass of ExceptionRenderer\n\nUsing a subclass of ExceptionRenderer gives you full control over how Exceptions are rendered, you\ncan configure your class in your config\/app.php."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$exception"],"optionals":[],"docParameters":{"$exception":{"type":"\\Exception","description":"Exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates the controller to perform rendering on the error response.\nIf the error is a Cake\\Core\\Exception\\Exception it will be converted to either a 400 or a 500\ncode error depending on the code used to construct the error.","long":""},"deprecated":false}}}},"Cake\\Error\\FatalErrorException":{"class":{"descriptions":{"short":"Represents a fatal error","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$file","$line"],"docParameters":{"$message":{"type":"string","description":"Message string."},"$code":{"type":"int","description":"Code."},"$file":{"type":"string|null","description":"File name."},"$line":{"type":"int|null","description":"Line number."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Error\\Middleware\\ErrorHandlerMiddleware":{"class":{"descriptions":{"short":"Error handling middleware.","long":"Traps exceptions and converts them into HTML or content-type appropriate\nerror pages using the CakePHP ExceptionRenderer."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$renderer","$config"],"docParameters":{"$renderer":{"type":"string|callable|null","description":"The renderer or class name to use or a callable factory."},"$config":{"type":"array","description":"Configuration options to use. If empty, `Configure::read('Error')` will be used."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Error\\PHP7ErrorException":{"class":{"descriptions":{"short":"Wraps a PHP 7 Error object inside a normal Exception\nso it can be handled correctly by the rest of the\nerror handling system","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$error"],"optionals":[],"docParameters":{"$error":{"type":"\\Error","description":"the Error object"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Wraps the passed Error class","long":""},"deprecated":false}}}},"Cake\\Event\\Decorator\\AbstractDecorator":{"class":{"descriptions":{"short":"Common base class for event decorator subclasses.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callable"],"optionals":["$options"],"docParameters":{"$callable":{"type":"callable","description":"Callable."},"$options":{"type":"array","description":"Decorator options."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Event\\Decorator\\ConditionDecorator":{"class":{"descriptions":{"short":"Event Condition Decorator","long":"Use this decorator to allow your event listener to only\nbe invoked if the `if` and\/or `unless` conditions pass."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callable"],"optionals":["$options"],"docParameters":{"$callable":{"type":"callable","description":"Callable."},"$options":{"type":"array","description":"Decorator options."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Event\\Decorator\\SubjectFilterDecorator":{"class":{"descriptions":{"short":"Event Subject Filter Decorator","long":"Use this decorator to allow your event listener to only\nbe invoked if event subject matches the `allowedSubject` option.\n\nThe `allowedSubject` option can be a list of class names, if you want\nto check multiple classes."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callable"],"optionals":["$options"],"docParameters":{"$callable":{"type":"callable","description":"Callable."},"$options":{"type":"array","description":"Decorator options."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Event\\Event":{"class":{"descriptions":{"short":"Represents the transport class of events across the system. It receives a name, subject and an optional\npayload. The name can be any string that uniquely identifies the event across the application, while the subject\nrepresents the object that the event applies to.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$subject","$data"],"docParameters":{"$name":{"type":"string","description":"Name of the event"},"$subject":{"type":"object|null","description":"the object that this event applies to (usually the object that is generating the event)"},"$data":{"type":"array|null","description":"any value you wish to be transported with this event to it can be read by listeners"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"### Examples of usage:\n\n```\n$event = new Event('Order.afterBuy', $this, ['buyer' => $userData]);\n$event = new Event('User.afterRegister', $UserModel);\n```"},"deprecated":false}}}},"Cake\\Event\\EventDispatcherInterface":{"class":{"descriptions":{"short":"Objects implementing this interface can emit events.","long":"Objects with this interface can trigger events, and have\nan event manager retrieved from them.\n\nThe Cake\\Event\\EventDispatcherTrait lets you easily implement\nthis interface."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Event\\EventDispatcherTrait":{"class":{"descriptions":{"short":"Implements Cake\\Event\\EventDispatcherInterface.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Event\\EventList":{"class":{"descriptions":{"short":"The Event List","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Event\\EventListenerInterface":{"class":{"descriptions":{"short":"Objects implementing this interface should declare the `implementedEvents` function\nto notify the event manager what methods should be called when an event is triggered.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Event\\EventManager":{"class":{"descriptions":{"short":"The event manager is responsible for keeping track of event listeners, passing the correct\ndata to them, and firing them in the correct order, when associated events are triggered. You\ncan create multiple instances of this object to manage local events or keep a single instance\nand pass it around to manage all events in your app.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Event\\EventManagerTrait":{"class":{"descriptions":{"short":"Provides the event manager interface features for usage in classes that require it.","long":""},"deprecated":true},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Filesystem\\File":{"class":{"descriptions":{"short":"Convenience class for reading, writing and appending to files.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$create","$mode"],"docParameters":{"$path":{"type":"string","description":"Path to file"},"$create":{"type":"bool","description":"Create file if it does not exist (if true)"},"$mode":{"type":"int","description":"Mode to apply to the folder holding the file"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Filesystem\\Folder":{"class":{"descriptions":{"short":"Folder structure browser, lists folders and files.\nProvides an Object interface for Common directory related tasks.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$path","$create","$mode"],"docParameters":{"$path":{"type":"string|null","description":"Path to folder"},"$create":{"type":"bool","description":"Create folder if not found"},"$mode":{"type":"int|bool","description":"Mode (CHMOD) to apply to created folder, false to ignore"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Form\\Form":{"class":{"descriptions":{"short":"Form abstraction used to create forms not tied to ORM backed models,\nor to other permanent datastores. Ideal for implementing forms on top of\nAPI services, or contact forms.","long":"### Building a form\n\nThis class is most useful when subclassed. In a subclass you\nshould define the `_buildSchema`, `_buildValidator` and optionally,\nthe `_execute` methods. These allow you to declare your form's\nfields, validation and primary action respectively.\n\nYou can also define the validation and schema by chaining method\ncalls off of `$form->schema()` and `$form->validator()`.\n\nForms are conventionally placed in the `App\\Form` namespace."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Form\\Schema":{"class":{"descriptions":{"short":"Contains the schema information for Form instances.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\ActionDispatcher":{"class":{"descriptions":{"short":"This class provides compatibility with dispatcher filters\nand interacting with the controller layers.","long":"Long term this should just be the controller dispatcher, but\nfor now it will do a bit more than that."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$factory","$eventManager","$filters"],"docParameters":{"$factory":{"type":"\\Cake\\Http\\ControllerFactory|null","description":"A controller factory instance."},"$eventManager":{"type":"\\Cake\\Event\\EventManager|null","description":"An event manager if you want to inject one."},"$filters":{"type":"array","description":"The list of filters to include."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Http\\BaseApplication":{"class":{"descriptions":{"short":"Base class for application classes.","long":"The application class is responsible for bootstrapping the application,\nand ensuring that middleware is attached. It is also invoked as the last piece\nof middleware, and delegates request\/response handling to the correct controller."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$configDir"],"optionals":[],"docParameters":{"$configDir":{"type":"string","description":"The directory the bootstrap configuration is held in."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Http\\CallbackStream":{"class":{"descriptions":{"short":"Implementation of PSR HTTP streams.","long":"This differs from Zend\\Diactoros\\Callback stream in that\nit allows the use of `echo` inside the callback, and gracefully\nhandles the callback not returning a string.\n\nIdeally we can amend\/update diactoros, but we need to figure\nthat out with the diactoros project. Until then we'll use this shim\nto provide backwards compatibility with existing CakePHP apps."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":null}},"throws":{"InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Cake\\Http\\Client":{"class":{"descriptions":{"short":"The end user interface for doing HTTP requests.","long":"### Scoped clients\n\nIf you're doing multiple requests to the same hostname its often convenient\nto use the constructor arguments to create a scoped client. This allows you\nto keep your code DRY and not repeat hostnames, authentication, and other options.\n\n### Doing requests\n\nOnce you've created an instance of Client you can do requests\nusing several methods. Each corresponds to a different HTTP method.\n\n- get()\n- post()\n- put()\n- delete()\n- patch()\n\n### Cookie management\n\nClient will maintain cookies from the responses done with\na client instance. These cookies will be automatically added\nto future requests to matching hosts. Cookies will respect the\n`Expires`, `Path` and `Domain` attributes. You can get the list of\ncurrently stored cookies using the cookies() method.\n\nYou can use the 'cookieJar' constructor option to provide a custom\ncookie jar instance you've restored from cache\/disk. By default\nan empty instance of Cake\\Http\\Client\\CookieCollection will be created.\n\n### Sending request bodies\n\nBy default any POST\/PUT\/PATCH\/DELETE request with $data will\nsend their data as `application\/x-www-form-urlencoded` unless\nthere are attached files. In that case `multipart\/form-data`\nwill be used.\n\nWhen sending request bodies you can use the `type` option to\nset the Content-Type for the request:\n\n```\n$http->get('\/users', [], ['type' => 'json']);\n```\n\nThe `type` option sets both the `Content-Type` and `Accept` header, to\nthe same mime type. When using `type` you can use either a full mime\ntype or an alias. If you need different types in the Accept and Content-Type\nheaders you should set them manually and not use `type`\n\n### Using authentication\n\nBy using the `auth` key you can use authentication. The type sub option\ncan be used to specify which authentication strategy you want to use.\nCakePHP comes with a few built-in strategies:\n\n- Basic\n- Digest\n- Oauth\n\n### Using proxies\n\nBy using the `proxy` key you can set authentication credentials for\na proxy if you need to use one.. The type sub option can be used to\nspecify which authentication strategy you want to use.\nCakePHP comes with built-in support for basic authentication."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Config options for scoped clients."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new HTTP Client.","long":"### Config options\n\nYou can set the following options when creating a client:\n\n- host - The hostname to do requests on.\n- port - The port to use.\n- scheme - The default scheme\/protocol to use. Defaults to http.\n- timeout - The timeout in seconds. Defaults to 30\n- ssl_verify_peer - Whether or not SSL certificates should be validated.\nDefaults to true.\n- ssl_verify_peer_name - Whether or not peer names should be validated.\nDefaults to true.\n- ssl_verify_depth - The maximum certificate chain depth to travers.\nDefaults to 5.\n- ssl_verify_host - Verify that the certificate and hostname match.\nDefaults to true.\n- redirect - Number of redirects to follow. Defaults to false."},"deprecated":false}}}},"Cake\\Http\\Client\\Adapter\\Stream":{"class":{"descriptions":{"short":"Implements sending Cake\\Http\\Client\\Request\nvia php's stream API.","long":"This approach and implementation is partly inspired by Aura.Http"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\Client\\Auth\\Basic":{"class":{"descriptions":{"short":"Basic authentication adapter for Cake\\Http\\Client","long":"Generally not directly constructed, but instead used by Cake\\Http\\Client\nwhen $options['auth']['type'] is 'basic'"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\Client\\Auth\\Digest":{"class":{"descriptions":{"short":"Digest authentication adapter for Cake\\Http\\Client","long":"Generally not directly constructed, but instead used by Cake\\Http\\Client\nwhen $options['auth']['type'] is 'digest'"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":["$options"],"docParameters":{"$client":{"type":"\\Cake\\Http\\Client","description":"Http client object."},"$options":{"type":"array|null","description":"Options list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Http\\Client\\Auth\\Oauth":{"class":{"descriptions":{"short":"Oauth 1 authentication strategy for Cake\\Http\\Client","long":"This object does not handle getting Oauth access tokens from the service\nprovider. It only handles make client requests *after* you have obtained the Oauth\ntokens.\n\nGenerally not directly constructed, but instead used by Cake\\Http\\Client\nwhen $options['auth']['type'] is 'oauth'"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\Client\\CookieCollection":{"class":{"descriptions":{"short":"Container class for cookies used in Http\\Client.","long":"Provides cookie jar like features for storing cookies between\nrequests, as well as appending cookies to new requests."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\Client\\FormData":{"class":{"descriptions":{"short":"Provides an interface for building\nmultipart\/form-encoded message bodies.","long":"Used by Http\\Client to upload POST\/PUT data\nand files."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\Client\\FormDataPart":{"class":{"descriptions":{"short":"Contains the data and behavior for a single\npart in a Multipart FormData request body.","long":"Added to Cake\\Http\\Client\\FormData when sending\ndata to a remote server."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$value"],"optionals":["$disposition"],"docParameters":{"$name":{"type":"string","description":"The name of the data."},"$value":{"type":"string","description":"The value of the data."},"$disposition":{"type":"string","description":"The type of disposition to use, defaults to form-data."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Http\\Client\\Message":{"class":{"descriptions":{"short":"Base class for other HTTP requests\/responses","long":"Defines some common helper methods, constants\nand properties."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\Client\\Request":{"class":{"descriptions":{"short":"Implements methods for HTTP requests.","long":"Used by Cake\\Http\\Client to contain request information\nfor making requests."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$url","$method","$headers","$data"],"docParameters":{"$url":{"type":"string","description":"The request URL"},"$method":{"type":"string","description":"The HTTP method to use."},"$headers":{"type":"array","description":"The HTTP headers to set."},"$data":{"type":"array|string|null","description":"The request body to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"Provides backwards compatible defaults for some properties."},"deprecated":false}}}},"Cake\\Http\\Client\\Response":{"class":{"descriptions":{"short":"Implements methods for HTTP responses.","long":"All of the following examples assume that `$response` is an\ninstance of this class.\n\n### Get header values\n\nHeader names are case-insensitive, but normalized to Title-Case\nwhen the response is parsed.\n\n```\n$val = $response->getHeaderLine('content-type');\n```\n\nWill read the Content-Type header. You can get all set\nheaders using:\n\n```\n$response->getHeaders();\n```\n\nYou can also get at the headers using object access. When getting\nheaders with object access, you have to use case-sensitive header\nnames:\n\n```\n$val = $response->headers['Content-Type'];\n```\n\n### Get the response body\n\nYou can access the response body stream using:\n\n```\n$content = $response->getBody();\n```\n\nYou can also use object access to get the string version\nof the response body:\n\n```\n$content = $response->body;\n```\n\nIf your response body is in XML or JSON you can use\nspecial content type specific accessors to read the decoded data.\nJSON data will be returned as arrays, while XML data will be returned\nas SimpleXML nodes:\n\n```\n\/\/ Get as xml\n$content = $response->xml\n\/\/ Get as json\n$content = $response->json\n```\n\nIf the response cannot be decoded, null will be returned.\n\n### Check the status code\n\nYou can access the response status code using:\n\n```\n$content = $response->getStatusCode();\n```\n\nYou can also use object access:\n\n```\n$content = $response->code;\n```"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$headers","$body"],"docParameters":{"$headers":{"type":"array","description":"Unparsed headers."},"$body":{"type":"string","description":"The response body."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Http\\ControllerFactory":{"class":{"descriptions":{"short":"Factory method for building controllers from request\/response pairs.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\MiddlewareQueue":{"class":{"descriptions":{"short":"Provides methods for creating and manipulating a \"queue\" of middleware callables.\nThis queue is used to process a request and response via \\Cake\\Http\\Runner.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\RequestTransformer":{"class":{"descriptions":{"short":"Translate and transform from PSR7 requests into CakePHP requests.","long":"This is an important step for maintaining backwards compatibility\nwith existing CakePHP applications, which depend on the CakePHP request object.\n\nThere is no reverse transform as the 'application' cannot return a mutated\nrequest object."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\ResponseEmitter":{"class":{"descriptions":{"short":"Emits a Response to the PHP Server API.","long":"This emitter offers a few changes from the emitters offered by\ndiactoros:\n\n- It logs headers sent using CakePHP's logging tools.\n- Cookies are emitted using setcookie() to not conflict with ext\/session"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\ResponseTransformer":{"class":{"descriptions":{"short":"This class converts PSR7 responses into CakePHP ones and back again.","long":"By bridging the CakePHP and PSR7 responses together, applications\ncan be embedded as PSR7 middleware in a fully compatible way."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\Runner":{"class":{"descriptions":{"short":"Executes the middleware queue and provides the `next` callable\nthat allows the queue to be iterated.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Http\\Server":{"class":{"descriptions":{"short":"Runs an application invoking all the PSR7 middleware and the registered application.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$app"],"optionals":[],"docParameters":{"$app":{"type":"\\Cake\\Http\\BaseApplication","description":"The application to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Http\\ServerRequestFactory":{"class":{"descriptions":{"short":"Factory for making ServerRequest instances.","long":"This subclass adds in CakePHP specific behavior to populate\nthe basePath and webroot attributes. Furthermore the Uri's path\nis corrected to only contain the 'virtual' path for the request."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\ChainMessagesLoader":{"class":{"descriptions":{"short":"Wraps multiple message loaders calling them one after another until\none of them returns a non-empty package.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$loaders"],"optionals":[],"docParameters":{"$loaders":{"type":"array","description":"List of callables to execute"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Receives a list of callable functions or objects that will be executed\none after another until one of them returns a non-empty translations package","long":""},"deprecated":false}}}},"Cake\\I18n\\Date":{"class":{"descriptions":{"short":"Extends the Date class provided by Chronos.","long":"Adds handy methods and locale-aware formatting helpers"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$tz"],"docParameters":{"$time":{"type":"string|null","description":"Fixed or relative time"},"$tz":{"type":"\\DateTimeZone|string|null","description":"The timezone for the instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new mutable Date instance.","long":"Please see the testing aids section (specifically static::setTestNow())\nfor more on the possibility of this constructor returning a test instance.\n\nDate instances lack time components, however due to limitations in PHP's\ninternal Datetime object the time will always be set to 00:00:00, and the\ntimezone will always be UTC. Normalizing the timezone allows for\nsubtraction\/addition to have deterministic results."},"deprecated":false}}}},"Cake\\I18n\\DateFormatTrait":{"class":{"descriptions":{"short":"Trait for date formatting methods shared by both Time & Date.","long":"This trait expects that the implementing class define static::$_toStringFormat."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\Formatter\\IcuFormatter":{"class":{"descriptions":{"short":"A formatter that will interpolate variables using the MessageFormatter class","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\Formatter\\SprintfFormatter":{"class":{"descriptions":{"short":"A formatter that will interpolate variables using sprintf and\nselect the correct plural form when required","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\FrozenDate":{"class":{"descriptions":{"short":"Extends the Date class provided by Chronos.","long":"Adds handy methods and locale-aware formatting helpers\n\nThis object provides an immutable variant of Cake\\I18n\\Date"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$tz"],"docParameters":{"$time":{"type":"string|null","description":"Fixed or relative time"},"$tz":{"type":"\\DateTimeZone|string|null","description":"The timezone for the instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new Immutable Date instance.","long":"Please see the testing aids section (specifically static::setTestNow())\nfor more on the possibility of this constructor returning a test instance.\n\nDate instances lack time components, however due to limitations in PHP's\ninternal Datetime object the time will always be set to 00:00:00, and the\ntimezone will always be UTC. Normalizing the timezone allows for\nsubtraction\/addition to have deterministic results."},"deprecated":false}}}},"Cake\\I18n\\FrozenTime":{"class":{"descriptions":{"short":"Extends the built-in DateTime class to provide handy methods and locale-aware\nformatting helpers","long":"This object provides an immutable variant of Cake\\I18n\\Time"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$tz"],"docParameters":{"$time":{"type":"string|null","description":"Fixed or relative time"},"$tz":{"type":"\\DateTimeZone|string|null","description":"The timezone for the instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new Chronos instance.","long":"Please see the testing aids section (specifically static::setTestNow())\nfor more on the possibility of this constructor returning a test instance."},"deprecated":false}}}},"Cake\\I18n\\I18n":{"class":{"descriptions":{"short":"I18n handles translation of Text and time format strings.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\MessagesFileLoader":{"class":{"descriptions":{"short":"A generic translations package factory that will load translations files\nbased on the file extension and the package name.","long":"This class is a callable, so it can be used as a package loader argument."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$locale"],"optionals":["$extension"],"docParameters":{"$name":{"type":"string","description":"The name (domain) of the translations package."},"$locale":{"type":"string","description":"The locale to load, this will be mapped to a folder in the system."},"$extension":{"type":"string","description":"The file extension to use. This will also be mapped to a messages parser class."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a translation file loader. The file to be loaded corresponds to\nthe following rules:","long":"- The locale is a folder under the `Locale` directory, a fallback will be\nused if the folder is not found.\n- The $name corresponds to the file name to load\n- If there is a loaded plugin with the underscored version of $name, the\ntranslation file will be loaded from such plugin.\n\n### Examples:\n\nLoad and parse src\/Locale\/fr\/validation.po\n\n```\n$loader = new MessagesFileLoader('validation', 'fr_FR', 'po');\n$package = $loader();\n```\n\nLoad and parse  src\/Locale\/fr_FR\/validation.mo\n\n```\n$loader = new MessagesFileLoader('validation', 'fr_FR', 'mo');\n$package = $loader();\n```\n\nLoad the plugins\/MyPlugin\/src\/Locale\/fr\/my_plugin.po file:\n\n```\n$loader = new MessagesFileLoader('my_plugin', 'fr_FR', 'mo');\n$package = $loader();\n```"},"deprecated":false}}}},"Cake\\I18n\\Middleware\\LocaleSelectorMiddleware":{"class":{"descriptions":{"short":"Sets the runtime default locale for the request based on the\nAccept-Language header. The default will only be set if it\nmatches the list of passed valid locales.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$locales"],"docParameters":{"$locales":{"type":"array","description":"A list of accepted locales, or ['*'] to accept any locale header value."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\I18n\\Number":{"class":{"descriptions":{"short":"Number helper library.","long":"Methods to make numbers more readable."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\Parser\\MoFileParser":{"class":{"descriptions":{"short":"Parses file in PO format","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\Parser\\PoFileParser":{"class":{"descriptions":{"short":"Parses file in PO format","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\PluralRules":{"class":{"descriptions":{"short":"Utility class used to determine the plural number to be used for a variable\nbase on the locale","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\RelativeTimeFormatter":{"class":{"descriptions":{"short":"Helper class for formatting relative dates & times.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\Time":{"class":{"descriptions":{"short":"Extends the built-in DateTime class to provide handy methods and locale-aware\nformatting helpers","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$tz"],"docParameters":{"$time":{"type":"string|null","description":"Fixed or relative time"},"$tz":{"type":"\\DateTimeZone|string|null","description":"The timezone for the instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new MutableDateTime instance.","long":"Please see the testing aids section (specifically static::setTestNow())\nfor more on the possibility of this constructor returning a test instance."},"deprecated":false}}}},"Cake\\I18n\\Translator":{"class":{"descriptions":{"short":"Provides missing message behavior for CakePHP internal message formats.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locale","$messages","$formatter"],"optionals":["$fallback"],"docParameters":{"$locale":{"type":"string","description":"The locale being used."},"$messages":{"type":"array","description":"The message keys and translations."},"$formatter":{"type":"\\Aura\\Intl\\FormatterInterface","description":"A message formatter."},"$fallback":{"type":"\\Aura\\Intl\\TranslatorInterface|null","description":"A fallback translator."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\I18n\\TranslatorFactory":{"class":{"descriptions":{"short":"Factory to create translators","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\I18n\\TranslatorRegistry":{"class":{"descriptions":{"short":"Constructs and stores instances of translators that can be\nretrieved by name and locale.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$packages","$formatters","$factory","$locale"],"optionals":[],"docParameters":{"$packages":{"type":"PackageLocator","description":"The package locator."},"$formatters":{"type":"FormatterLocator","description":"The formatter locator."},"$factory":{"type":"TranslatorFactory","description":"A translator factory to create translator objects for the locale and package."},"$locale":{"type":"string","description":"The default locale code to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Log\\Engine\\BaseLog":{"class":{"descriptions":{"short":"Base log engine class.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Configuration array"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"__construct method","long":""},"deprecated":false}}}},"Cake\\Log\\Engine\\ConsoleLog":{"class":{"descriptions":{"short":"Console logging. Writes logs to console output.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Options for the FileLog, see above."}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a new Console Logger.","long":"Config\n\n- `levels` string or array, levels the engine is interested in\n- `scopes` string or array, scopes the engine is interested in\n- `stream` the path to save logs on.\n- `outputAs` integer or ConsoleOutput::[RAW|PLAIN|COLOR]"},"deprecated":false}}}},"Cake\\Log\\Engine\\FileLog":{"class":{"descriptions":{"short":"File Storage stream for Logging. Writes logs to different files\nbased on the level of log it is.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Configuration array"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Sets protected properties based on config provided","long":""},"deprecated":false}}}},"Cake\\Log\\Engine\\SyslogLog":{"class":{"descriptions":{"short":"Syslog stream for Logging. Writes logs to the system logger","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Configuration array"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"__construct method","long":""},"deprecated":false}}}},"Cake\\Log\\Log":{"class":{"descriptions":{"short":"Logs messages to configured Log adapters.  One or more adapters\ncan be configured using Cake Logs's methods.  If you don't\nconfigure any adapters, and write to Log, the messages will be\nignored.","long":"### Configuring Log adapters\n\nYou can configure log adapters in your applications `config\/app.php` file.\nA sample configuration would look like:\n\n```\nLog::config('my_log', ['className' => 'FileLog']);\n```\n\nYou can define the className as any fully namespaced classname or use a short hand\nclassname to use loggers in the `App\\Log\\Engine` & `Cake\\Log\\Engine` namespaces.\nYou can also use plugin short hand to use logging classes provided by plugins.\n\nLog adapters are required to implement `Psr\\Log\\LoggerInterface`, and there is a\nbuilt-in base class (`Cake\\Log\\Engine\\BaseLog`) that can be used for custom loggers.\n\nOutside of the `className` key, all other configuration values will be passed to the\nlogging adapter's constructor as an array.\n\n### Logging levels\n\nWhen configuring loggers, you can set which levels a logger will handle.\nThis allows you to disable debug messages in production for example:\n\n```\nLog::config('default', [\n'className' => 'File',\n'path' => LOGS,\n'levels' => ['error', 'critical', 'alert', 'emergency']\n]);\n```\n\nThe above logger would only log error messages or higher. Any\nother log messages would be discarded.\n\n### Logging scopes\n\nWhen configuring loggers you can define the active scopes the logger\nis for. If defined, only the listed scopes will be handled by the\nlogger. If you don't define any scopes an adapter will catch\nall scopes that match the handled levels.\n\n```\nLog::config('payments', [\n'className' => 'File',\n'scopes' => ['payment', 'order']\n]);\n```\n\nThe above logger will only capture log entries made in the\n`payment` and `order` scopes. All other scopes including the\nundefined scope will be ignored.\n\n### Writing to the log\n\nYou write to the logs using Log::write().  See its documentation for more information.\n\n### Logging Levels\n\nBy default Cake Log supports all the log levels defined in\nRFC 5424. When logging messages you can either use the named methods,\nor the correct constants with `write()`:\n\n```\nLog::error('Something horrible happened');\nLog::write(LOG_ERR, 'Something horrible happened');\n```\n\n### Logging scopes\n\nWhen logging messages and configuring log adapters, you can specify\n'scopes' that the logger will handle.  You can think of scopes as subsystems\nin your application that may require different logging setups.  For\nexample in an e-commerce application you may want to handle logged errors\nin the cart and ordering subsystems differently than the rest of the\napplication.  By using scopes you can control logging for each part\nof your application and also use standard log levels."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Log\\LogEngineRegistry":{"class":{"descriptions":{"short":"Registry of loaded log engines","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Log\\LogTrait":{"class":{"descriptions":{"short":"A trait providing an object short-cut method\nto logging.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Mailer\\AbstractTransport":{"class":{"descriptions":{"short":"Abstract transport for sending email","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Configuration options."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Mailer\\Email":{"class":{"descriptions":{"short":"CakePHP Email class.","long":"This class is used for sending Internet Message Format based\non the standard outlined in http:\/\/www.rfc-editor.org\/rfc\/rfc2822.txt\n\n### Configuration\n\nConfiguration for Email is managed by Email::config() and Email::configTransport().\nEmail::config() can be used to add or read a configuration profile for Email instances.\nOnce made configuration profiles can be used to re-use across various email messages your\napplication sends."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array|string|null","description":"Array of configs, or string to load configs from email.php"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Mailer\\Exception\\MissingActionException":{"class":{"descriptions":{"short":"Missing Action exception - used when a mailer action cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Mailer\\Exception\\MissingMailerException":{"class":{"descriptions":{"short":"Used when a mailer cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Mailer\\Mailer":{"class":{"descriptions":{"short":"Mailer base class.","long":"Mailer classes let you encapsulate related Email logic into a reusable\nand testable class.\n\n## Defining Messages\n\nMailers make it easy for you to define methods that handle email formatting\nlogic. For example:\n\n```\nclass UserMailer extends Mailer\n{\npublic function resetPassword($user)\n{\n$this\n->subject('Reset Password')\n->to($user->email)\n->set(['token' => $user->token]);\n}\n}\n```\n\nIs a trivial example but shows how a mailer could be declared.\n\n## Sending Messages\n\nAfter you have defined some messages you will want to send them:\n\n```\n$mailer = new UserMailer();\n$mailer->send('resetPassword', $user);\n```\n\n## Event Listener\n\nMailers can also subscribe to application event allowing you to\ndecouple email delivery from your application code. By re-declaring the\n`implementedEvents()` method you can define event handlers that can\nconvert events into email. For example, if your application had a user\nregistration event:\n\n```\npublic function implementedEvents()\n{\nreturn [\n'Model.afterSave' => 'onRegistration',\n];\n}\n\npublic function onRegistration(Event $event, Entity $entity, ArrayObject $options)\n{\nif ($entity->isNew()) {\n$this->send('welcome', [$entity]);\n}\n}\n```\n\nThe onRegistration method converts the application event into a mailer method.\nOur mailer could either be registered in the application bootstrap, or\nin the Table class' initialize() hook."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$email"],"docParameters":{"$email":{"type":"\\Cake\\Mailer\\Email|null","description":"Email instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Mailer\\MailerAwareTrait":{"class":{"descriptions":{"short":"Provides functionality for loading mailer classes\nonto properties of the host object.","long":"Example users of this trait are Cake\\Controller\\Controller and\nCake\\Console\\Shell."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Mailer\\Transport\\DebugTransport":{"class":{"descriptions":{"short":"Debug Transport class, useful for emulating the email sending process and inspecting\nthe resultant email message before actually sending it during development","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Configuration options."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Mailer\\Transport\\MailTransport":{"class":{"descriptions":{"short":"Send mail using mail() function","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Configuration options."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Mailer\\Transport\\SmtpTransport":{"class":{"descriptions":{"short":"Send mail using SMTP protocol","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Configuration options."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\CorsBuilder":{"class":{"descriptions":{"short":"A builder object that assists in defining Cross Origin Request related\nheaders.","long":"Each of the methods in this object provide a fluent interface. Once you've\nset all the headers you want to use, the `build()` method can be used to return\na modified Response.\n\nIt is most convenient to get this object via `Request::cors()`."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$response","$origin"],"optionals":["$isSsl"],"docParameters":{"$response":{"type":"\\Cake\\Network\\Response","description":"The response object to add headers onto."},"$origin":{"type":"string","description":"The request's Origin header."},"$isSsl":{"type":"bool","description":"Whether or not the request was over SSL."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\BadRequestException":{"class":{"descriptions":{"short":"Represents an HTTP 400 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Bad Request' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 400"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\ConflictException":{"class":{"descriptions":{"short":"Represents an HTTP 409 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Conflict' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 409"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\ForbiddenException":{"class":{"descriptions":{"short":"Represents an HTTP 403 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Forbidden' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 403"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\GoneException":{"class":{"descriptions":{"short":"Represents an HTTP 410 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Gone' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 410"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\HttpException":{"class":{"descriptions":{"short":"Parent class for all of the HTTP related exceptions in CakePHP.\nAll HTTP status\/error related exceptions should extend this class so\ncatch blocks can be specifically typed.","long":"You may also use this as a meaningful bridge to Cake\\Core\\Exception\\Exception, e.g.:\nthrow new \\Cake\\Network\\Exception\\HttpException('HTTP Version Not Supported', 505);"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Network\\Exception\\InternalErrorException":{"class":{"descriptions":{"short":"Represents an HTTP 500 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Internal Server Error' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 500"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\InvalidCsrfTokenException":{"class":{"descriptions":{"short":"Represents an HTTP 403 error caused by an invalid CSRF token","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Invalid CSRF Token' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 403"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\MethodNotAllowedException":{"class":{"descriptions":{"short":"Represents an HTTP 405 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Method Not Allowed' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 405"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\NotAcceptableException":{"class":{"descriptions":{"short":"Represents an HTTP 406 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Not Acceptable' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 406"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\NotFoundException":{"class":{"descriptions":{"short":"Represents an HTTP 404 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Not Found' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 404"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\NotImplementedException":{"class":{"descriptions":{"short":"Not Implemented Exception - used when an API method is not implemented","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Network\\Exception\\ServiceUnavailableException":{"class":{"descriptions":{"short":"Represents an HTTP 503 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Service Unavailable' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 503"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\SocketException":{"class":{"descriptions":{"short":"Exception class for Socket. This exception will be thrown from Socket, Email, HttpSocket\nSmtpTransport, MailTransport and HttpResponse when it encounters an error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\UnauthorizedException":{"class":{"descriptions":{"short":"Represents an HTTP 401 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Unauthorized' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 401"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Exception\\UnavailableForLegalReasonsException":{"class":{"descriptions":{"short":"Represents an HTTP 451 error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code"],"docParameters":{"$message":{"type":"string|null","description":"If no message is given 'Unavailable For Legal Reasons' will be the message"},"$code":{"type":"int","description":"Status code, defaults to 451"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Request":{"class":{"descriptions":{"short":"A class that helps wrap Request information and particulars about a single request.\nProvides methods commonly used to introspect on the request headers and request body.","long":"Has both an Array and Object interface. You can access framework parameters using indexes:\n\n`$request['controller']` or `$request->controller`."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"string|array","description":"An array of request data to create a request with."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a new request object.","long":"You can supply the data as either an array or as a string.  If you use\na string you can only supply the URL for the request.  Using an array will\nlet you provide the following keys:\n\n- `post` POST data or non query string data\n- `query` Additional data from the query string.\n- `files` Uploaded file data formatted like $_FILES.\n- `cookies` Cookies for this request.\n- `environment` $_SERVER and $_ENV data.\n- `url` The URL without the base path for the request.\n- `base` The base URL for the request.\n- `webroot` The webroot directory for the request.\n- `input` The data that would come from php:\/\/input this is useful for simulating\n- `session` An instance of a Session object\nrequests with put, patch or delete data."},"deprecated":false}}}},"Cake\\Network\\Response":{"class":{"descriptions":{"short":"Cake Response is responsible for managing the response text, status and headers of a HTTP response.","long":"By default controllers will use this class to render their response. If you are going to use\na custom response class it should subclass this object in order to ensure compatibility."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":"list of parameters to setup the response. Possible values are: - body: the response text that should be sent to the client - statusCodes: additional allowable response codes - status: the HTTP status code to respond with - type: a complete mime-type string or an extension mapped in this class - charset: the charset for the response body"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Network\\Session":{"class":{"descriptions":{"short":"This class is a wrapper for the native PHP session functions. It provides\nseveral defaults for the most common session configuration\nvia external handlers and helps with using session in cli without any warnings.","long":"Sessions can be created from the defaults using `Session::create()` or you can get\nan instance of a new session by just instantiating this class and passing the complete\noptions you want to use.\n\nWhen specific options are omitted, this class will take its defaults from the configuration\nvalues from the `session.*` directives in php.ini. This class will also alter such\ndirectives when configuration values are provided."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"The Configuration to apply to this session object"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"### Configuration:\n\n- timeout: The time in minutes the session should be valid for.\n- cookiePath: The url path for which session cookie is set. Maps to the\n`session.cookie_path` php.ini config. Defaults to base path of app.\n- ini: A list of php.ini directives to change before the session start.\n- handler: An array containing at least the `class` key. To be used as the session\nengine for persisting data. The rest of the keys in the array will be passed as\nthe configuration array for the engine. You can set the `class` key to an already\ninstantiated session handler object."},"deprecated":false}}}},"Cake\\Network\\Session\\CacheSession":{"class":{"descriptions":{"short":"CacheSession provides method for saving sessions into a Cache engine. Used with Session","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"The configuration to use for this engine It requires the key 'config' which is the name of the Cache config to use for storing the session"}},"throws":{"\\InvalidArgumentException":"if the 'config' key is not provided"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Network\\Session\\DatabaseSession":{"class":{"descriptions":{"short":"DatabaseSession provides methods to be used with Session.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"The configuration for this engine. It requires the 'model' key to be present corresponding to the Table to use for managing the sessions."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Looks at Session configuration information and\nsets up the session model.","long":""},"deprecated":false}}}},"Cake\\Network\\Socket":{"class":{"descriptions":{"short":"CakePHP network socket connection class.","long":"Core base class for network communication."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Socket configuration, which will be merged with the base configuration"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\ORM\\Association":{"class":{"descriptions":{"short":"An Association is a relationship established between two tables and is used\nto configure and customize the way interconnected records are retrieved.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$alias"],"optionals":["$options"],"docParameters":{"$alias":{"type":"string","description":"The name given to the association"},"$options":{"type":"array","description":"A list of properties to be set on this object"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Subclasses can override _options function to get the original\nlist of passed options if expecting any other special key","long":""},"deprecated":false}}}},"Cake\\ORM\\AssociationCollection":{"class":{"descriptions":{"short":"A container\/collection for association classes.","long":"Contains methods for managing associations, and\nordering operations around saving and deleting."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Association\\BelongsTo":{"class":{"descriptions":{"short":"Represents an 1 - N relationship where the source side of the relation is\nrelated to only one record in the target table.","long":"An example of a BelongsTo association would be Article belongs to Author."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$alias"],"optionals":["$options"],"docParameters":{"$alias":{"type":"string","description":"The name given to the association"},"$options":{"type":"array","description":"A list of properties to be set on this object"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Subclasses can override _options function to get the original\nlist of passed options if expecting any other special key","long":""},"deprecated":false}}}},"Cake\\ORM\\Association\\BelongsToMany":{"class":{"descriptions":{"short":"Represents an M - N relationship where there exists a junction - or join - table\nthat contains the association fields between the source and the target table.","long":"An example of a BelongsToMany association would be Article belongs to many Tags."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$alias"],"optionals":["$options"],"docParameters":{"$alias":{"type":"string","description":"The name given to the association"},"$options":{"type":"array","description":"A list of properties to be set on this object"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Subclasses can override _options function to get the original\nlist of passed options if expecting any other special key","long":""},"deprecated":false}}}},"Cake\\ORM\\Association\\DependentDeleteTrait":{"class":{"descriptions":{"short":"Implements cascading deletes for dependent associations.","long":"Included by HasOne and HasMany association classes."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Association\\ExternalAssociationTrait":{"class":{"descriptions":{"short":"Represents a type of association that that needs to be recovered by performing\nan extra query.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Association\\HasMany":{"class":{"descriptions":{"short":"Represents an N - 1 relationship where the target side of the relationship\nwill have one or multiple records per each one in the source side.","long":"An example of a HasMany association would be Author has many Articles."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$alias"],"optionals":["$options"],"docParameters":{"$alias":{"type":"string","description":"The name given to the association"},"$options":{"type":"array","description":"A list of properties to be set on this object"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Subclasses can override _options function to get the original\nlist of passed options if expecting any other special key","long":""},"deprecated":false}}}},"Cake\\ORM\\Association\\HasOne":{"class":{"descriptions":{"short":"Represents an 1 - 1 relationship where the source side of the relation is\nrelated to only one record in the target table and vice versa.","long":"An example of a HasOne association would be User has one Profile."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$alias"],"optionals":["$options"],"docParameters":{"$alias":{"type":"string","description":"The name given to the association"},"$options":{"type":"array","description":"A list of properties to be set on this object"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Subclasses can override _options function to get the original\nlist of passed options if expecting any other special key","long":""},"deprecated":false}}}},"Cake\\ORM\\Association\\SelectableAssociationTrait":{"class":{"descriptions":{"short":"Represents a type of association that that can be fetched using another query","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\AssociationsNormalizerTrait":{"class":{"descriptions":{"short":"Contains methods for parsing the associated tables array that is typically\npassed to  a save operation","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Behavior":{"class":{"descriptions":{"short":"Base class for behaviors.","long":"Behaviors allow you to simulate mixins, and create\nreusable blocks of application logic, that can be reused across\nseveral models. Behaviors also provide a way to hook into model\ncallbacks and augment their behavior.\n\n### Mixin methods\n\nBehaviors can provide mixin like features by declaring public\nmethods. These methods will be accessible on the tables the\nbehavior has been added to.\n\n```\nfunction doSomething($arg1, $arg2) {\n\/\/ do something\n}\n```\n\nWould be called like `$table->doSomething($arg1, $arg2);`.\n\n### Callback methods\n\nBehaviors can listen to any events fired on a Table. By default\nCakePHP provides a number of lifecycle events your behaviors can\nlisten to:\n\n- `beforeFind(Event $event, Query $query, ArrayObject $options, boolean $primary)`\nFired before each find operation. By stopping the event and supplying a\nreturn value you can bypass the find operation entirely. Any changes done\nto the $query instance will be retained for the rest of the find. The\n$primary parameter indicates whether or not this is the root query,\nor an associated query.\n\n- `buildValidator(Event $event, Validator $validator, string $name)`\nFired when the validator object identified by $name is being built. You can use this\ncallback to add validation rules or add validation providers.\n\n- `buildRules(Event $event, RulesChecker $rules)`\nFired when the rules checking object for the table is being built. You can use this\ncallback to add more rules to the set.\n\n- `beforeRules(Event $event, EntityInterface $entity, ArrayObject $options, $operation)`\nFired before an entity is validated using by a rules checker. By stopping this event,\nyou can return the final value of the rules checking operation.\n\n- `afterRules(Event $event, EntityInterface $entity, ArrayObject $options, bool $result, $operation)`\nFired after the rules have been checked on the entity. By stopping this event,\nyou can return the final value of the rules checking operation.\n\n- `beforeSave(Event $event, EntityInterface $entity, ArrayObject $options)`\nFired before each entity is saved. Stopping this event will abort the save\noperation. When the event is stopped the result of the event will be returned.\n\n- `afterSave(Event $event, EntityInterface $entity, ArrayObject $options)`\nFired after an entity is saved.\n\n- `beforeDelete(Event $event, EntityInterface $entity, ArrayObject $options)`\nFired before an entity is deleted. By stopping this event you will abort\nthe delete operation.\n\n- `afterDelete(Event $event, EntityInterface $entity, ArrayObject $options)`\nFired after an entity has been deleted.\n\nIn addition to the core events, behaviors can respond to any\nevent fired from your Table classes including custom application\nspecific ones.\n\nYou can set the priority of a behaviors callbacks by using the\n`priority` setting when attaching a behavior. This will set the\npriority for all the callbacks a behavior provides.\n\n### Finder methods\n\nBehaviors can provide finder methods that hook into a Table's\nfind() method. Custom finders are a great way to provide preset\nqueries that relate to your behavior. For example a SluggableBehavior\ncould provide a find('slugged') finder. Behavior finders\nare implemented the same as other finders. Any method\nstarting with `find` will be setup as a finder. Your finder\nmethods should expect the following arguments:\n\n```\nfindSlugged(Query $query, array $options)\n```"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$table"],"optionals":["$config"],"docParameters":{"$table":{"type":"\\Cake\\ORM\\Table","description":"The table this behavior is attached to."},"$config":{"type":"array","description":"The config for this behavior."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"Merges config with the default and store in the config property"},"deprecated":false}}}},"Cake\\ORM\\BehaviorRegistry":{"class":{"descriptions":{"short":"BehaviorRegistry is used as a registry for loaded behaviors and handles loading\nand constructing behavior objects.","long":"This class also provides method for checking and dispatching behavior methods."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$table"],"docParameters":{"$table":{"type":"\\Cake\\ORM\\Table|null","description":"The table this registry is attached to."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\ORM\\Behavior\\CounterCacheBehavior":{"class":{"descriptions":{"short":"CounterCache behavior","long":"Enables models to cache the amount of connections in a given relation.\n\nExamples with Post model belonging to User model\n\nRegular counter cache\n```\n[\n'Users' => [\n'post_count'\n]\n]\n```\n\nCounter cache with scope\n```\n[\n'Users' => [\n'posts_published' => [\n'conditions' => [\n'published' => true\n]\n]\n]\n]\n```\n\nCounter cache using custom find\n```\n[\n'Users' => [\n'posts_published' => [\n'finder' => 'published' \/\/ Will be using findPublished()\n]\n]\n]\n```\n\nCounter cache using lambda function returning the count\nThis is equivalent to example #2\n```\n[\n'Users' => [\n'posts_published' => function (Event $event, EntityInterface $entity, Table $table) {\n$query = $table->find('all')->where([\n'published' => true,\n'user_id' => $entity->get('user_id')\n]);\nreturn $query->count();\n}\n]\n]\n```\n\nIgnore updating the field if it is dirty\n```\n[\n'Users' => [\n'posts_published' => [\n'ignoreDirty' => true\n]\n]\n]\n```"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$table"],"optionals":["$config"],"docParameters":{"$table":{"type":"\\Cake\\ORM\\Table","description":"The table this behavior is attached to."},"$config":{"type":"array","description":"The config for this behavior."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"Merges config with the default and store in the config property"},"deprecated":false}}}},"Cake\\ORM\\Behavior\\TimestampBehavior":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$table"],"optionals":["$config"],"docParameters":{"$table":{"type":"\\Cake\\ORM\\Table","description":"The table this behavior is attached to."},"$config":{"type":"array","description":"The config for this behavior."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"Merges config with the default and store in the config property"},"deprecated":false}}}},"Cake\\ORM\\Behavior\\TranslateBehavior":{"class":{"descriptions":{"short":"This behavior provides a way to translate dynamic data by keeping translations\nin a separate table linked to the original record from another one. Translated\nfields can be configured to override those in the main table when fetched or\nput aside into another property for the same entity.","long":"If you wish to override fields, you need to call the `locale` method in this\nbehavior for setting the language you want to fetch from the translations table.\n\nIf you want to bring all or certain languages for each of the fetched records,\nyou can use the custom `translations` finders that is exposed to the table."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$table"],"optionals":["$config"],"docParameters":{"$table":{"type":"\\Cake\\ORM\\Table","description":"The table this behavior is attached to."},"$config":{"type":"array","description":"The config for this behavior."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\ORM\\Behavior\\Translate\\TranslateTrait":{"class":{"descriptions":{"short":"Contains a translation method aimed to help managing multiple translations\nfor an entity.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Behavior\\TreeBehavior":{"class":{"descriptions":{"short":"Makes the table to which this is attached to behave like a nested set and\nprovides methods for managing and retrieving information out of the derived\nhierarchical structure.","long":"Tables attaching this behavior are required to have a column referencing the\nparent row, and two other numeric columns (lft and rght) where the implicit\norder will be cached.\n\nFor more information on what is a nested set and a how it works refer to\nhttp:\/\/www.sitepoint.com\/hierarchical-data-database-2\/"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$table"],"optionals":["$config"],"docParameters":{"$table":{"type":"\\Cake\\ORM\\Table","description":"The table this behavior is attached to."},"$config":{"type":"array","description":"The config for this behavior."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"Merges config with the default and store in the config property"},"deprecated":false}}}},"Cake\\ORM\\EagerLoadable":{"class":{"descriptions":{"short":"Represents a single level in the associations tree to be eagerly loaded\nfor a specific query. This contains all the information required to\nfetch the results from the database from an associations and all its children\nlevels.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$config"],"docParameters":{"$name":{"type":"string","description":"The Association name."},"$config":{"type":"array","description":"The list of properties to set."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. The $config parameter accepts the following array\nkeys:","long":"- associations\n- instance\n- config\n- canBeJoined\n- aliasPath\n- propertyPath\n- forMatching\n- targetProperty\n\nThe keys maps to the settable properties in this class."},"deprecated":false}}}},"Cake\\ORM\\EagerLoader":{"class":{"descriptions":{"short":"Exposes the methods for storing the associations that should be eager loaded\nfor a table once a query is provided and delegates the job of creating the\nrequired joins and decorating the results so that those associations can be\npart of the result set.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Entity":{"class":{"descriptions":{"short":"An entity represents a single result row from a repository. It exposes the\nmethods for retrieving and storing properties associated in this row.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$properties","$options"],"docParameters":{"$properties":{"type":"array","description":"hash of properties to set in this entity"},"$options":{"type":"array","description":"list of options to use when creating this entity"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes the internal properties of this entity out of the\nkeys in an array. The following list of options can be used:","long":"- useSetters: whether use internal setters for properties or not\n- markClean: whether to mark all properties as clean after setting them\n- markNew: whether this instance has not yet been persisted\n- guard: whether to prevent inaccessible properties from being set (default: false)\n- source: A string representing the alias of the repository this entity came from\n\n### Example:\n\n```\n$entity = new Entity(['id' => 1, 'name' => 'Andrew'])\n```"},"deprecated":false}}}},"Cake\\ORM\\Exception\\MissingBehaviorException":{"class":{"descriptions":{"short":"Used when a behavior cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\ORM\\Exception\\MissingEntityException":{"class":{"descriptions":{"short":"Exception raised when an Entity could not be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\ORM\\Exception\\MissingTableClassException":{"class":{"descriptions":{"short":"Exception raised when a Table could not be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\ORM\\Exception\\RolledbackTransactionException":{"class":{"descriptions":{"short":"Used when a transaction was rolled back from a callback event.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\ORM\\LazyEagerLoader":{"class":{"descriptions":{"short":"Contains methods that are capable of injecting eagerly loaded associations into\nentities or lists of entities by using the same syntax as the EagerLoader.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Locator\\LocatorAwareTrait":{"class":{"descriptions":{"short":"Contains method for setting and accessing LocatorInterface instance","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Locator\\LocatorInterface":{"class":{"descriptions":{"short":"Registries for Table objects should implement this interface.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Locator\\TableLocator":{"class":{"descriptions":{"short":"Provides a default registry\/factory for Table objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Marshaller":{"class":{"descriptions":{"short":"Contains logic to convert array data into entities.","long":"Useful when converting request data into entities."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$table"],"optionals":[],"docParameters":{"$table":{"type":"\\Cake\\ORM\\Table","description":"The table this marshaller is for."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\ORM\\PropertyMarshalInterface":{"class":{"descriptions":{"short":"Behaviors implementing this interface can participate in entity marshalling.","long":"This enables behaviors to define behavior for how the properties they provide\/manage\nshould be marshalled."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\ORM\\Query":{"class":{"descriptions":{"short":"Extends the base Query class to provide new methods related to association\nloading, automatic fields selection, automatic type casting and to wrap results\ninto a specific iterator that will be responsible for hydrating results if\nrequired.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection","$table"],"optionals":[],"docParameters":{"$connection":{"type":"\\Cake\\Datasource\\ConnectionInterface","description":"The connection object"},"$table":{"type":"\\Cake\\ORM\\Table","description":"The table this query is starting on"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\ORM\\ResultSet":{"class":{"descriptions":{"short":"Represents the results obtained after executing a query for a specific table\nThis object is responsible for correctly nesting result keys reported from\nthe query, casting each field to the correct type and executing the extra\nqueries required for eager loading external associations.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$statement"],"optionals":[],"docParameters":{"$query":{"type":"\\Cake\\ORM\\Query","description":"Query from where results come"},"$statement":{"type":"\\Cake\\Database\\StatementInterface","description":"The statement to fetch from"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\ORM\\Rule\\ExistsIn":{"class":{"descriptions":{"short":"Checks that the value provided in a field exists as the primary key of another\ntable.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fields","$repository"],"optionals":["$options"],"docParameters":{"$fields":{"type":"string|array","description":"The field or fields to check existence as primary key."},"$repository":{"type":"object|string","description":"The repository where the field will be looked for, or the association name for the repository."},"$options":{"type":"array","description":"The options that modify the rules behavior."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Available option for $options is 'allowNullableNulls' flag.\nSet to true to accept composite foreign keys where one or more nullable columns are null."},"deprecated":false}}}},"Cake\\ORM\\Rule\\IsUnique":{"class":{"descriptions":{"short":"Checks that a list of fields from an entity are unique in the table","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fields"],"optionals":["$options"],"docParameters":{"$fields":{"type":"array","description":"The list of fields to check uniqueness for"},"$options":{"type":"array","description":"The additional options for this rule."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"### Options\n\n- `allowMultipleNulls` Set to false to disallow multiple null values in\nmulti-column unique rules. By default this is `true` to emulate how SQL UNIQUE\nkeys work."},"deprecated":false}}}},"Cake\\ORM\\Rule\\ValidCount":{"class":{"descriptions":{"short":"Validates the count of associated records.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field"],"optionals":[],"docParameters":{"$field":{"type":"string","description":"The field to check the count on."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\ORM\\RulesChecker":{"class":{"descriptions":{"short":"ORM flavoured rules checker.","long":"Adds ORM related features to the RulesChecker class."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":"The options to pass to every rule"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Takes the options to be passed to all rules.","long":""},"deprecated":false}}}},"Cake\\ORM\\SaveOptionsBuilder":{"class":{"descriptions":{"short":"OOP style Save Option Builder.","long":"This allows you to build options to save entities in a OOP style and helps\nyou to avoid mistakes by validating the options as you build them."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$table"],"optionals":["$options"],"docParameters":{"$table":{"type":"\\Cake\\ORM\\Table","description":"A table instance."},"$options":{"type":"array","description":"Options to parse when instantiating."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\ORM\\Table":{"class":{"descriptions":{"short":"Represents a single database table.","long":"Exposes methods for retrieving data out of it, and manages the associations\nthis table has to other tables. Multiple instances of this class can be created\nfor the same database table with different aliases, this allows you to address\nyour database structure in a richer and more expressive way.\n\n### Retrieving data\n\nThe primary way to retrieve data is using Table::find(). See that method\nfor more information.\n\n### Dynamic finders\n\nIn addition to the standard find($type) finder methods, CakePHP provides dynamic\nfinder methods. These methods allow you to easily set basic conditions up. For example\nto filter users by username you would call\n\n```\n$query = $users->findByUsername('mark');\n```\n\nYou can also combine conditions on multiple fields using either `Or` or `And`:\n\n```\n$query = $users->findByUsernameOrEmail('mark', 'mark@example.org');\n```\n\n### Bulk updates\/deletes\n\nYou can use Table::updateAll() and Table::deleteAll() to do bulk updates\/deletes.\nYou should be aware that events will *not* be fired for bulk updates\/deletes.\n\n### Callbacks\/events\n\nTable objects provide a few callbacks\/events you can hook into to augment\/replace\nfind operations. Each event uses the standard event subsystem in CakePHP\n\n- `beforeFind(Event $event, Query $query, ArrayObject $options, boolean $primary)`\nFired before each find operation. By stopping the event and supplying a\nreturn value you can bypass the find operation entirely. Any changes done\nto the $query instance will be retained for the rest of the find. The\n$primary parameter indicates whether or not this is the root query,\nor an associated query.\n\n- `buildValidator(Event $event, Validator $validator, string $name)`\nAllows listeners to modify validation rules for the provided named validator.\n\n- `buildRules(Event $event, RulesChecker $rules)`\nAllows listeners to modify the rules checker by adding more rules.\n\n- `beforeRules(Event $event, EntityInterface $entity, ArrayObject $options, string $operation)`\nFired before an entity is validated using the rules checker. By stopping this event,\nyou can return the final value of the rules checking operation.\n\n- `afterRules(Event $event, EntityInterface $entity, ArrayObject $options, bool $result, string $operation)`\nFired after the rules have been checked on the entity. By stopping this event,\nyou can return the final value of the rules checking operation.\n\n- `beforeSave(Event $event, EntityInterface $entity, ArrayObject $options)`\nFired before each entity is saved. Stopping this event will abort the save\noperation. When the event is stopped the result of the event will be returned.\n\n- `afterSave(Event $event, EntityInterface $entity, ArrayObject $options)`\nFired after an entity is saved.\n\n- `afterSaveCommit(Event $event, EntityInterface $entity, ArrayObject $options)`\nFired after the transaction in which the save operation is wrapped has been committed.\nIt\u2019s also triggered for non atomic saves where database operations are implicitly committed.\nThe event is triggered only for the primary table on which save() is directly called.\nThe event is not triggered if a transaction is started before calling save.\n\n- `beforeDelete(Event $event, EntityInterface $entity, ArrayObject $options)`\nFired before an entity is deleted. By stopping this event you will abort\nthe delete operation.\n\n- `afterDelete(Event $event, EntityInterface $entity, ArrayObject $options)`\nFired after an entity has been deleted."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"List of options for this table"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance","long":"The $config array understands the following keys:\n\n- table: Name of the database table to represent\n- alias: Alias to be assigned to this table (default to table name)\n- connection: The connection instance to use\n- entityClass: The fully namespaced class name of the entity class that will\nrepresent rows in this table.\n- schema: A \\Cake\\Database\\Schema\\Table object or an array that can be\npassed to it.\n- eventManager: An instance of an event manager to use for internal events\n- behaviors: A BehaviorRegistry. Generally not used outside of tests.\n- associations: An AssociationCollection instance.\n- validator: A Validator instance which is assigned as the \"default\"\nvalidation set, or an associative array, where key is the name of the\nvalidation set and value the Validator instance."},"deprecated":false}}}},"Cake\\ORM\\TableRegistry":{"class":{"descriptions":{"short":"Provides a registry\/factory for Table objects.","long":"This registry allows you to centralize the configuration for tables\ntheir connections and other meta-data.\n\n### Configuring instances\n\nYou may need to configure your table objects, using TableRegistry you can\ncentralize configuration. Any configuration set before instances are created\nwill be used when creating instances. If you modify configuration after\nan instance is made, the instances *will not* be updated.\n\n```\nTableRegistry::config('Users', ['table' => 'my_users']);\n```\n\nConfiguration data is stored *per alias* if you use the same table with\nmultiple aliases you will need to set configuration multiple times.\n\n### Getting instances\n\nYou can fetch instances out of the registry using get(). One instance is stored\nper alias. Once an alias is populated the same instance will always be returned.\nThis is used to make the ORM use less memory and help make cyclic references easier\nto solve.\n\n```\n$table = TableRegistry::get('Users', $config);\n```"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Routing\\Dispatcher":{"class":{"descriptions":{"short":"Dispatcher converts Requests into controller actions. It uses the dispatched Request\nto locate and load the correct controller. If found, the requested action is called on\nthe controller","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Routing\\DispatcherFactory":{"class":{"descriptions":{"short":"A factory for creating dispatchers with all the desired middleware\nconnected.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Routing\\DispatcherFilter":{"class":{"descriptions":{"short":"This abstract class represents a filter to be applied to a dispatcher cycle. It acts as an\nevent listener with the ability to alter the request or response as needed before it is handled\nby a controller or after the response body has already been built.","long":"Subclasses of this class use a class naming convention having a `Filter` suffix.\n\n### Limiting filters to specific paths\n\nBy using the `for` option you can limit with request paths a filter is applied to.\nBoth the before and after event will have the same conditions applied to them. For\nexample, if you only wanted a filter applied to blog requests you could do:\n\n```\n$filter = new BlogFilter(['for' => '\/blog']);\n```\n\nWhen the above filter is connected to a dispatcher it will only fire\nits `beforeDispatch` and `afterDispatch` methods on requests that start with `\/blog`.\n\nThe for condition can also be a regular expression by using the `preg:` prefix:\n\n```\n$filter = new BlogFilter(['for' => 'preg:#^\/blog\/\\d+$#']);\n```\n\n### Limiting filters based on conditions\n\nIn addition to simple path based matching you can use a closure to match on arbitrary request\nor response conditions. For example:\n\n```\n$cookieMonster = new CookieFilter([\n'when' => function ($req, $res) {\n\/\/ Custom code goes here.\n}\n]);\n```\n\nIf your when condition returns `true` the before\/after methods will be called.\n\nWhen using the `for` or `when` matchers, conditions will be re-checked on the before and after\ncallback as the conditions could change during the dispatch cycle."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Settings for the filter."}},"throws":{"\\InvalidArgumentException":"When 'when' conditions are not callable."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Routing\\Exception\\DuplicateNamedRouteException":{"class":{"descriptions":{"short":"Exception raised when a route names used twice.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Routing\\Exception\\MissingControllerException":{"class":{"descriptions":{"short":"Missing Controller exception - used when a controller\ncannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Routing\\Exception\\MissingDispatcherFilterException":{"class":{"descriptions":{"short":"Exception raised when a Dispatcher filter could not be found","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Routing\\Exception\\MissingRouteException":{"class":{"descriptions":{"short":"Exception raised when a URL cannot be reverse routed\nor when a URL cannot be parsed.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\Routing\\Exception\\RedirectException":{"class":{"descriptions":{"short":"An exception subclass used by the routing layer to indicate\nthat a route has resolved to a redirect.","long":"The URL and status code are provided as constructor arguments.\n\n```\nthrow new RedirectException('http:\/\/example.com\/some\/path', 301);\n```"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Cake\\Routing\\Filter\\AssetFilter":{"class":{"descriptions":{"short":"Filters a request and tests whether it is a file in the webroot folder or not and\nserves the file to the client if appropriate.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Array of config."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Routing\\Filter\\ControllerFactoryFilter":{"class":{"descriptions":{"short":"A dispatcher filter that builds the controller to dispatch\nin the request.","long":"This filter resolves the request parameters into a controller\ninstance and attaches it to the event object."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Settings for the filter."}},"throws":{"\\InvalidArgumentException":"When 'when' conditions are not callable."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Routing\\Filter\\LocaleSelectorFilter":{"class":{"descriptions":{"short":"Sets the runtime default locale for the request based on the\nAccept-Language header. The default will only be set if it\nmatches the list of passed valid locales.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Settings for the filter."}},"throws":{"\\Cake\\Core\\Exception\\Exception":"When 'when' conditions are not callable."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Routing\\Filter\\RoutingFilter":{"class":{"descriptions":{"short":"A dispatcher filter that applies routing rules to the request.","long":"This filter will call Router::parse() when the request has no controller\nparameter defined."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"Settings for the filter."}},"throws":{"\\InvalidArgumentException":"When 'when' conditions are not callable."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Routing\\Middleware\\AssetMiddleware":{"class":{"descriptions":{"short":"Handles serving plugin assets in development mode.","long":"This should not be used in production environments as it\nhas sub-optimal performance when compared to serving files\nwith a real webserver."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":"The options to use"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Routing\\Middleware\\RoutingMiddleware":{"class":{"descriptions":{"short":"Applies routing rules to the request and creates the controller\ninstance if possible.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Routing\\RequestActionTrait":{"class":{"descriptions":{"short":"Provides the requestAction() method for doing sub-requests","long":""},"deprecated":true},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Routing\\RouteBuilder":{"class":{"descriptions":{"short":"Provides features for building routes inside scopes.","long":"Gives an easy to use way to build routes and append them\ninto a route collection."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$collection","$path"],"optionals":["$params","$options"],"docParameters":{"$collection":{"type":"\\Cake\\Routing\\RouteCollection","description":"The route collection to append routes into."},"$path":{"type":"string","description":"The path prefix the scope is for."},"$params":{"type":"array","description":"The scope's routing parameters."},"$options":{"type":"array","description":"Options list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"### Options\n\n- `routeClass` - The default route class to use when adding routes.\n- `extensions` - The extensions to connect when adding routes.\n- `namePrefix` - The prefix to prepend to all route names."},"deprecated":false}}}},"Cake\\Routing\\RouteCollection":{"class":{"descriptions":{"short":"Contains a collection of routes.","long":"Provides an interface for adding\/removing routes\nand parsing\/generating URLs with the routes it contains."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Routing\\Route\\DashedRoute":{"class":{"descriptions":{"short":"This route class will transparently inflect the controller, action and plugin\nrouting parameters, so that requesting `\/my-plugin\/my-controller\/my-action`\nis parsed as `['plugin' => 'MyPlugin', 'controller' => 'MyController', 'action' => 'myAction']`","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$template"],"optionals":["$defaults","$options"],"docParameters":{"$template":{"type":"string","description":"Template string with parameter placeholders"},"$defaults":{"type":"array|string","description":"Defaults for the route."},"$options":{"type":"array","description":"Array of additional options for the Route"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor for a Route","long":"### Options\n\n- `_ext` - Defines the extensions used for this route.\n- `pass` - Copies the listed parameters into params['pass']."},"deprecated":false}}}},"Cake\\Routing\\Route\\InflectedRoute":{"class":{"descriptions":{"short":"This route class will transparently inflect the controller and plugin routing\nparameters, so that requesting `\/my_controller` is parsed as `['controller' => 'MyController']`","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$template"],"optionals":["$defaults","$options"],"docParameters":{"$template":{"type":"string","description":"Template string with parameter placeholders"},"$defaults":{"type":"array|string","description":"Defaults for the route."},"$options":{"type":"array","description":"Array of additional options for the Route"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor for a Route","long":"### Options\n\n- `_ext` - Defines the extensions used for this route.\n- `pass` - Copies the listed parameters into params['pass']."},"deprecated":false}}}},"Cake\\Routing\\Route\\PluginShortRoute":{"class":{"descriptions":{"short":"Plugin short route, that copies the plugin param to the controller parameters\nIt is used for supporting \/:plugin routes.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$template"],"optionals":["$defaults","$options"],"docParameters":{"$template":{"type":"string","description":"Template string with parameter placeholders"},"$defaults":{"type":"array|string","description":"Defaults for the route."},"$options":{"type":"array","description":"Array of additional options for the Route"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor for a Route","long":"### Options\n\n- `_ext` - Defines the extensions used for this route.\n- `pass` - Copies the listed parameters into params['pass']."},"deprecated":false}}}},"Cake\\Routing\\Route\\RedirectRoute":{"class":{"descriptions":{"short":"Redirect route will perform an immediate redirect. Redirect routes\nare useful when you want to have Routing layer redirects occur in your\napplication, for when URLs move.","long":"Redirection is signalled by an exception that halts route matching and\ndefines the redirect URL and status code."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$template"],"optionals":["$defaults","$options"],"docParameters":{"$template":{"type":"string","description":"Template string with parameter placeholders"},"$defaults":{"type":"array|string","description":"Defaults for the route."},"$options":{"type":"array","description":"Array of additional options for the Route"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Routing\\Route\\Route":{"class":{"descriptions":{"short":"A single Route used by the Router to connect requests to\nparameter maps.","long":"Not normally created as a standalone. Use Router::connect() to create\nRoutes for your application."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$template"],"optionals":["$defaults","$options"],"docParameters":{"$template":{"type":"string","description":"Template string with parameter placeholders"},"$defaults":{"type":"array|string","description":"Defaults for the route."},"$options":{"type":"array","description":"Array of additional options for the Route"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor for a Route","long":"### Options\n\n- `_ext` - Defines the extensions used for this route.\n- `pass` - Copies the listed parameters into params['pass']."},"deprecated":false}}}},"Cake\\Routing\\Router":{"class":{"descriptions":{"short":"Parses the request URL into controller, action, and parameters. Uses the connected routes\nto match the incoming URL string to parameters that will allow the request to be dispatched. Also\nhandles converting parameter lists into URL strings, using the connected routes. Routing allows you to decouple\nthe way the world interacts with your application (URLs) and the implementation (controllers and actions).","long":"### Connecting routes\n\nConnecting routes is done using Router::connect(). When parsing incoming requests or reverse matching\nparameters, routes are enumerated in the order they were connected. For more information on routes and\nhow to connect them see Router::connect()."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Shell\\CacheShell":{"class":{"descriptions":{"short":"Cache Shell.","long":"Provides a CLI interface to clear caches.\nThis tool can be used in development or by deployment scripts when changes\nare made that require cached data to be removed."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\CommandListShell":{"class":{"descriptions":{"short":"Shows a list of commands available from the console.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\CompletionShell":{"class":{"descriptions":{"short":"Provide command completion shells such as bash.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\Helper\\ProgressHelper":{"class":{"descriptions":{"short":"Create a progress bar using a supplied callback.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$io"],"optionals":["$config"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo","description":"The ConsoleIo instance to use."},"$config":{"type":"array","description":"The settings for this helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Shell\\Helper\\TableHelper":{"class":{"descriptions":{"short":"Create a visually pleasing ASCII art table\nfrom 2 dimensional array data.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$io"],"optionals":["$config"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo","description":"The ConsoleIo instance to use."},"$config":{"type":"array","description":"The settings for this helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\Shell\\I18nShell":{"class":{"descriptions":{"short":"Shell for I18N management.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\OrmCacheShell":{"class":{"descriptions":{"short":"ORM Cache Shell.","long":"Provides a CLI interface to the ORM metadata caching features.\nThis tool is intended to be used by deployment scripts so that you\ncan prevent thundering herd effects on the metadata cache when new\nversions of your application are deployed, or when migrations\nrequiring updated metadata are required."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\PluginShell":{"class":{"descriptions":{"short":"Shell for tasks related to plugins.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\RoutesShell":{"class":{"descriptions":{"short":"Provides interactive CLI tools for routing.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\ServerShell":{"class":{"descriptions":{"short":"built-in Server Shell","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\Task\\AssetsTask":{"class":{"descriptions":{"short":"Task for symlinking \/ copying plugin assets to app's webroot.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\Task\\CommandTask":{"class":{"descriptions":{"short":"Base class for Shell Command reflection.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\Task\\ExtractTask":{"class":{"descriptions":{"short":"Language string extractor","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\Task\\LoadTask":{"class":{"descriptions":{"short":"Task for loading plugins.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\Shell\\Task\\UnloadTask":{"class":{"descriptions":{"short":"Task for unloading plugins.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$io"],"docParameters":{"$io":{"type":"\\Cake\\Console\\ConsoleIo|null","description":"An io instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs this Shell instance.","long":""},"deprecated":false}}}},"Cake\\TestSuite\\EmailAssertTrait":{"class":{"descriptions":{"short":"Email and mailer assertions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\TestSuite\\Fixture\\FixtureManager":{"class":{"descriptions":{"short":"A factory class to manage the life cycle of test fixtures","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\TestSuite\\Fixture\\TestFixture":{"class":{"descriptions":{"short":"Cake TestFixture is responsible for building and destroying tables to be used\nduring testing.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":{"\\Cake\\Core\\Exception\\Exception":"on invalid datasource usage."},"return":{"type":"self","description":null},"descriptions":{"short":"Instantiate the fixture.","long":""},"deprecated":false}}}},"Cake\\TestSuite\\LegacyRequestDispatcher":{"class":{"descriptions":{"short":"Dispatches a request capturing the response for integration testing\npurposes into the Routing\\Dispatcher stack.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$test"],"optionals":[],"docParameters":{"$test":{"type":"\\Cake\\TestSuite\\IntegrationTestCase","description":"The test case to run."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\TestSuite\\MiddlewareDispatcher":{"class":{"descriptions":{"short":"Dispatches a request capturing the response for integration\ntesting purposes into the Cake\\Http stack.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$test"],"optionals":["$class","$constructorArgs"],"docParameters":{"$test":{"type":"\\Cake\\TestSuite\\IntegrationTestCase","description":"The test case to run."},"$class":{"type":"string|null","description":"The application class name. Defaults to App\\Application."},"$constructorArgs":{"type":"array|null","description":"The constructor arguments for your application class. Defaults to `['.\/config']`"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\TestSuite\\StringCompareTrait":{"class":{"descriptions":{"short":"Compare a string to the contents of a file","long":"Implementing objects are expected to modify the `$_compareBasePath` property\nbefore use."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\TestSuite\\Stub\\ConsoleOutput":{"class":{"descriptions":{"short":"StubOutput makes testing shell commands\/shell helpers easier.","long":"You can use this class by injecting it into a ConsoleIo instance\nthat your command\/task\/helper uses:\n\n```\nuse Cake\\Console\\ConsoleIo;\nuse Cake\\TestSuite\\Stub\\ConsoleOutput;\n\n$output = new ConsoleOutput();\n$io = new ConsoleIo($output);\n```"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$stream"],"docParameters":{"$stream":{"type":"string","description":"The identifier of the stream to write output to."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Construct the output object.","long":"Checks for a pretty console environment. Ansicon and ConEmu allows\npretty consoles on windows, and is supported."},"deprecated":false}}}},"Cake\\TestSuite\\Stub\\Response":{"class":{"descriptions":{"short":"A response class intended for test cases.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":"list of parameters to setup the response. Possible values are: - body: the response text that should be sent to the client - statusCodes: additional allowable response codes - status: the HTTP status code to respond with - type: a complete mime-type string or an extension mapped in this class - charset: the charset for the response body"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Utility\\CookieCryptTrait":{"class":{"descriptions":{"short":"Cookie Crypt Trait.","long":"Provides the encrypt\/decrypt logic for the CookieComponent."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Utility\\Crypto\\Mcrypt":{"class":{"descriptions":{"short":"Mcrypt implementation of crypto features for Cake\\Utility\\Security","long":"This class is not intended to be used directly and should only\nbe used in the context of Cake\\Utility\\Security.\n\n@deprecated 3.3.0 It is recommended to use {@see Cake\\Utility\\Crypto\\OpenSsl} instead."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Utility\\Crypto\\OpenSsl":{"class":{"descriptions":{"short":"OpenSSL implementation of crypto features for Cake\\Utility\\Security","long":"OpenSSL should be favored over mcrypt as it is actively maintained and\nmore widely available.\n\nThis class is not intended to be used directly and should only\nbe used in the context of Cake\\Utility\\Security."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Utility\\Exception\\XmlException":{"class":{"descriptions":{"short":"Exception class for Xml.  This exception will be thrown from Xml when it\nencounters an error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Cake\\Utility\\Hash":{"class":{"descriptions":{"short":"Library of array functions for manipulating and extracting data\nfrom arrays or 'sets' of data.","long":"`Hash` provides an improved interface, more consistent and\npredictable set of features over `Set`. While it lacks the spotty\nsupport for pseudo Xpath, its more fully featured dot notation provides\nsimilar features in a more consistent implementation."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Utility\\Inflector":{"class":{"descriptions":{"short":"Pluralize and singularize English words.","long":"Inflector pluralizes and singularizes English nouns.\nUsed by CakePHP's naming conventions throughout the framework."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Utility\\MergeVariablesTrait":{"class":{"descriptions":{"short":"Provides features for merging object properties recursively with\nparent classes.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Utility\\Security":{"class":{"descriptions":{"short":"Security Library contains utility methods related to security","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Utility\\Text":{"class":{"descriptions":{"short":"Text handling methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Utility\\Xml":{"class":{"descriptions":{"short":"XML handling for CakePHP.","long":"The methods in these classes enable the datasources that use XML to work."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Validation\\RulesProvider":{"class":{"descriptions":{"short":"A Proxy class used to remove any extra arguments when the user intended to call\na method in another class that is not aware of validation providers signature","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$class"],"docParameters":{"$class":{"type":"string","description":"the default class to proxy"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor, sets the default class to use for calling methods","long":""},"deprecated":false}}}},"Cake\\Validation\\ValidatableInterface":{"class":{"descriptions":{"short":"Describes objects that can be validated by passing a Validator object.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Validation\\Validation":{"class":{"descriptions":{"short":"Validation Class. Used for validation of model data","long":"Offers different validation methods."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Validation\\ValidationRule":{"class":{"descriptions":{"short":"ValidationRule object. Represents a validation method, error message and\nrules for applying such method to a field.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$validator"],"docParameters":{"$validator":{"type":"array","description":"[optional] The validator properties"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Validation\\ValidationSet":{"class":{"descriptions":{"short":"ValidationSet object. Holds all validation rules for a field and exposes\nmethods to dynamically add or remove validation rules","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\Validation\\Validator":{"class":{"descriptions":{"short":"Validator object encapsulates all methods related to data validations for a model\nIt also provides an API to dynamically change validation rules for each model field.","long":"Implements ArrayAccess to easily modify rules in the set"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\Validation\\ValidatorAwareTrait":{"class":{"descriptions":{"short":"A trait that provides methods for building and\ninteracting with Validators.","long":"This trait is useful when building ORM like features where\nthe implementing class wants to build and customize a variety\nof validator instances.\n\nThis trait expects that classes including it define two constants:\n\n- `DEFAULT_VALIDATOR` - The default validator name.\n- `VALIDATOR_PROVIDER_NAME ` - The provider name the including class is assigned\nin validators.\n\nIf the including class also implements events the `Model.buildValidator` event\nwill be triggered when validators are created."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\View\\AjaxView":{"class":{"descriptions":{"short":"A view class that is used for AJAX responses.\nCurrently only switches the default layout and sets the response type - which just maps to\ntext\/html by default.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$request","$response","$eventManager","$viewOptions"],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request|null","description":"The request object."},"$response":{"type":"\\Cake\\Network\\Response|null","description":"The response object."},"$eventManager":{"type":"\\Cake\\Event\\EventManager|null","description":"Event manager object."},"$viewOptions":{"type":"array","description":"View options."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\View\\Cell":{"class":{"descriptions":{"short":"Cell base.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$request","$response","$eventManager","$cellOptions"],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request|null","description":"The request to use in the cell."},"$response":{"type":"\\Cake\\Network\\Response|null","description":"The response to use in the cell."},"$eventManager":{"type":"\\Cake\\Event\\EventManager|null","description":"The eventManager to bind events to."},"$cellOptions":{"type":"array","description":"Cell options to apply."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\CellTrait":{"class":{"descriptions":{"short":"Provides cell() method for usage in Controller and View classes.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\View\\Exception\\MissingCellException":{"class":{"descriptions":{"short":"Used when a cell class file cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\View\\Exception\\MissingCellViewException":{"class":{"descriptions":{"short":"Used when a view file for a cell cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\View\\Exception\\MissingElementException":{"class":{"descriptions":{"short":"Used when an element file cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\View\\Exception\\MissingHelperException":{"class":{"descriptions":{"short":"Used when a helper cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\View\\Exception\\MissingLayoutException":{"class":{"descriptions":{"short":"Used when a layout file cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\View\\Exception\\MissingTemplateException":{"class":{"descriptions":{"short":"Used when a template file cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\View\\Exception\\MissingViewException":{"class":{"descriptions":{"short":"Used when a view class file cannot be found.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$code","$previous"],"docParameters":{"$message":{"type":"string|array","description":"Either the string of the error message, or an array of attributes that are made available in the view, and sprintf()'d into Exception::$_messageTemplate"},"$code":{"type":"int","description":"The code of the error, is also the HTTP status code for the error."},"$previous":{"type":"\\Exception|null","description":"the previous exception."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Allows you to create exceptions that are treated as framework errors and disabled\nwhen debug = 0."},"deprecated":false}}}},"Cake\\View\\Form\\ArrayContext":{"class":{"descriptions":{"short":"Provides a basic array based context provider for FormHelper.","long":"This adapter is useful in testing or when you have forms backed by\nsimple array data structures.\n\nImportant keys:\n\n- `defaults` The default values for fields. These values\nwill be used when there is no request data set. Data should be nested following\nthe dot separated paths you access your fields with.\n- `required` A nested array of fields, relationships and boolean\nflags to indicate a field is required.\n- `schema` An array of data that emulate the column structures that\nCake\\Database\\Schema\\Table uses. This array allows you to control\nthe inferred type for fields and allows auto generation of attributes\nlike maxlength, step and other HTML attributes. If you want\nprimary key\/id detection to work. Make sure you have provided a `_constraints`\narray that contains `primary`. See below for an example.\n- `errors` An array of validation errors. Errors should be nested following\nthe dot separated paths you access your fields with.\n\n### Example\n\n```\n$data = [\n'schema' => [\n'id' => ['type' => 'integer'],\n'title' => ['type' => 'string', 'length' => 255],\n'_constraints' => [\n'primary' => ['type' => 'primary', 'columns' => ['id']]\n]\n],\n'defaults' => [\n'id' => 1,\n'title' => 'First post!',\n]\n];\n```"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request","$context"],"optionals":[],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request","description":"The request object."},"$context":{"type":"array","description":"Context info."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\Form\\ContextInterface":{"class":{"descriptions":{"short":"Interface for FormHelper context implementations.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\View\\Form\\EntityContext":{"class":{"descriptions":{"short":"Provides a form context around a single entity and its relations.\nIt also can be used as context around an array or iterator of entities.","long":"This class lets FormHelper interface with entities or collections\nof entities.\n\nImportant Keys:\n\n- `entity` The entity this context is operating on.\n- `table` Either the ORM\\Table instance to fetch schema\/validators\nfrom, an array of table instances in the case of a form spanning\nmultiple entities, or the name(s) of the table.\nIf this is null the table name(s) will be determined using naming\nconventions.\n- `validator` Either the Validation\\Validator to use, or the name of the\nvalidation method to call on the table object. For example 'default'.\nDefaults to 'default'. Can be an array of table alias=>validators when\ndealing with associated forms."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request","$context"],"optionals":[],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request","description":"The request object."},"$context":{"type":"array","description":"Context info."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\Form\\FormContext":{"class":{"descriptions":{"short":"Provides a context provider for Cake\\Form\\Form instances.","long":"This context provider simply fulfils the interface requirements\nthat FormHelper has and allows access to the request data."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request","$context"],"optionals":[],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request","description":"The request object."},"$context":{"type":"array","description":"Context info."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\Form\\NullContext":{"class":{"descriptions":{"short":"Provides a context provider that does nothing.","long":"This context provider simply fulfils the interface requirements\nthat FormHelper has and allows access to the request data."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$request","$context"],"optionals":[],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request","description":"The request object."},"$context":{"type":"array","description":"Context info."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\Helper":{"class":{"descriptions":{"short":"Abstract base class for all other Helpers in CakePHP.\nProvides common methods and features.","long":"### Callback methods\n\nHelpers support a number of callback methods. These callbacks allow you to hook into\nthe various view lifecycle events and either modify existing view content or perform\nother application specific logic. The events are not implemented by this base class, as\nimplementing a callback method subscribes a helper to the related event. The callback methods\nare as follows:\n\n- `beforeRender(Event $event, $viewFile)` - beforeRender is called before the view file is rendered.\n- `afterRender(Event $event, $viewFile)` - afterRender is called after the view file is rendered\nbut before the layout has been rendered.\n- beforeLayout(Event $event, $layoutFile)` - beforeLayout is called before the layout is rendered.\n- `afterLayout(Event $event, $layoutFile)` - afterLayout is called after the layout has rendered.\n- `beforeRenderFile(Event $event, $viewFile)` - Called before any view fragment is rendered.\n- `afterRenderFile(Event $event, $viewFile, $content)` - Called after any view fragment is rendered.\nIf a listener returns a non-null value, the output of the rendered file will be set to that."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Default Constructor","long":""},"deprecated":false}}}},"Cake\\View\\HelperRegistry":{"class":{"descriptions":{"short":"HelperRegistry is used as a registry for loaded helpers and handles loading\nand constructing helper class objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$view"],"optionals":[],"docParameters":{"$view":{"type":"\\Cake\\View\\View","description":"View object."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\View\\Helper\\BreadcrumbsHelper":{"class":{"descriptions":{"short":"BreadcrumbsHelper to register and display a breadcrumb trail for your views","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Default Constructor","long":""},"deprecated":false}}}},"Cake\\View\\Helper\\FlashHelper":{"class":{"descriptions":{"short":"FlashHelper class to render flash messages.","long":"After setting messages in your controllers with FlashComponent, you can use\nthis class to output your flash messages in your views."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Default Constructor","long":""},"deprecated":false}}}},"Cake\\View\\Helper\\FormHelper":{"class":{"descriptions":{"short":"Form helper library.","long":"Automatic generation of HTML FORMs from given data."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Construct the widgets and binds the default context providers","long":""},"deprecated":false}}}},"Cake\\View\\Helper\\HtmlHelper":{"class":{"descriptions":{"short":"Html Helper class for easy use of HTML widgets.","long":"HtmlHelper encloses all methods needed while working with HTML pages."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"### Settings\n\n- `templates` Either a filename to a config containing templates.\nOr an array of templates to load. See Cake\\View\\StringTemplate for\ntemplate formatting.\n\n### Customizing tag sets\n\nUsing the `templates` option you can redefine the tag HtmlHelper will use."},"deprecated":false}}}},"Cake\\View\\Helper\\IdGeneratorTrait":{"class":{"descriptions":{"short":"A trait that provides id generating methods to be\nused in various widget classes.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\View\\Helper\\NumberHelper":{"class":{"descriptions":{"short":"Number helper library.","long":"Methods to make numbers more readable."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper"}},"throws":{"\\Cake\\Core\\Exception\\Exception":"When the engine class could not be found."},"return":{"type":"self","description":null},"descriptions":{"short":"Default Constructor","long":"### Settings:\n\n- `engine` Class name to use to replace Cake\\I18n\\Number functionality\nThe class needs to be placed in the `Utility` directory."},"deprecated":false}}}},"Cake\\View\\Helper\\PaginatorHelper":{"class":{"descriptions":{"short":"Pagination Helper class for easy generation of pagination links.","long":"PaginationHelper encloses all methods needed when working with pagination."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Overridden to merge passed args with URL options.","long":""},"deprecated":false}}}},"Cake\\View\\Helper\\RssHelper":{"class":{"descriptions":{"short":"RSS Helper class for easy output RSS structures.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Default Constructor","long":""},"deprecated":false}}}},"Cake\\View\\Helper\\SecureFieldTokenTrait":{"class":{"descriptions":{"short":"Provides methods for building token data that is\ncompatible with SecurityComponent.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\View\\Helper\\SessionHelper":{"class":{"descriptions":{"short":"Session Helper.","long":"Session reading from the view."},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\View\\Helper\\TextHelper":{"class":{"descriptions":{"short":"Text helper library.","long":"Text manipulations: Highlight, excerpt, truncate, strip of links, convert email addresses to mailto: links..."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"the view object the helper is attached to."},"$config":{"type":"array","description":"Settings array Settings array"}},"throws":{"\\Cake\\Core\\Exception\\Exception":"when the engine class could not be found."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"### Settings:\n\n- `engine` Class name to use to replace String functionality.\nThe class needs to be placed in the `Utility` directory."},"deprecated":false}}}},"Cake\\View\\Helper\\TimeHelper":{"class":{"descriptions":{"short":"Time Helper class for easy use of time data.","long":"Manipulation of time data."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Default Constructor","long":""},"deprecated":false}}}},"Cake\\View\\Helper\\UrlHelper":{"class":{"descriptions":{"short":"UrlHelper class for generating urls.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$View"],"optionals":["$config"],"docParameters":{"$View":{"type":"\\Cake\\View\\View","description":"The View this helper is being attached to."},"$config":{"type":"array","description":"Configuration settings for the helper."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Default Constructor","long":""},"deprecated":false}}}},"Cake\\View\\JsonView":{"class":{"descriptions":{"short":"A view class that is used for JSON responses.","long":"It allows you to omit templates if you just need to emit JSON string as response.\n\nIn your controller, you could do the following:\n\n```\n$this->set(['posts' => $posts]);\n$this->set('_serialize', true);\n```\n\nWhen the view is rendered, the `$posts` view variable will be serialized\ninto JSON.\n\nYou can also set multiple view variables for serialization. This will create\na top level object containing all the named view variables:\n\n```\n$this->set(compact('posts', 'users', 'stuff'));\n$this->set('_serialize', true);\n```\n\nThe above would generate a JSON object that looks like:\n\n`{\"posts\": [...], \"users\": [...]}`\n\nYou can also set `'_serialize'` to a string or array to serialize only the\nspecified view variables.\n\nIf you don't use the `_serialize`, you will need a view template. You can use\nextended views to provide layout-like functionality.\n\nYou can also enable JSONP support by setting parameter `_jsonp` to true or a\nstring to specify custom query string parameter name which will contain the\ncallback function name."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$request","$response","$eventManager","$viewOptions"],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request|null","description":"Request instance."},"$response":{"type":"\\Cake\\Network\\Response|null","description":"Response instance."},"$eventManager":{"type":"\\Cake\\Event\\EventManager|null","description":"EventManager instance."},"$viewOptions":{"type":"array","description":"An array of view options"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\View\\SerializedView":{"class":{"descriptions":{"short":"Parent class for view classes generating serialized outputs like JsonView and XmlView.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$request","$response","$eventManager","$viewOptions"],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request|null","description":"Request instance."},"$response":{"type":"\\Cake\\Network\\Response|null","description":"Response instance."},"$eventManager":{"type":"\\Cake\\Event\\EventManager|null","description":"EventManager instance."},"$viewOptions":{"type":"array","description":"An array of view options"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\View\\StringTemplate":{"class":{"descriptions":{"short":"Provides an interface for registering and inserting\ncontent into simple logic-less string templates.","long":"Used by several helpers to provide simple flexible templates\nfor generating HTML and other content."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"A set of templates to add."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\StringTemplateTrait":{"class":{"descriptions":{"short":"Adds string template functionality to any class by providing methods to\nload and parse string templates.","long":"This trait requires the implementing class to provide a `config()`\nmethod for reading\/updating templates. An implementation of this method\nis provided by `Cake\\Core\\InstanceConfigTrait`"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\View\\View":{"class":{"descriptions":{"short":"View, the V in the MVC triad. View interacts with Helpers and view variables passed\nin from the controller to render the results of the controller action. Often this is HTML,\nbut can also take the form of JSON, XML, PDF's or streaming files.","long":"CakePHP uses a two-step-view pattern. This means that the template content is rendered first,\nand then inserted into the selected layout. This also means you can pass data from the template to the\nlayout using `$this->set()`\n\nView class supports using plugins as themes. You can set\n\n```\npublic function beforeRender(\\Cake\\Event\\Event $event)\n{\n$this->viewBuilder()->theme('SuperHot');\n}\n```\n\nin your Controller to use plugin `SuperHot` as a theme. Eg. If current action\nis PostsController::index() then View class will look for template file\n`plugins\/SuperHot\/Template\/Posts\/index.ctp`. If a theme template\nis not found for the current action the default app template file is used."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$request","$response","$eventManager","$viewOptions"],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request|null","description":"Request instance."},"$response":{"type":"\\Cake\\Network\\Response|null","description":"Response instance."},"$eventManager":{"type":"\\Cake\\Event\\EventManager|null","description":"Event manager instance."},"$viewOptions":{"type":"array","description":"View options. See View::$_passedVars for list of options which get set as class properties."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\View\\ViewBlock":{"class":{"descriptions":{"short":"ViewBlock implements the concept of Blocks or Slots in the View layer.\nSlots or blocks are combined with extending views and layouts to afford slots\nof content that are present in a layout or parent view, but are defined by the child\nview or elements used in the view.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\View\\ViewBuilder":{"class":{"descriptions":{"short":"Provides an API for iteratively building a view up.","long":"Once you have configured the view and established all the context\nyou can create a view instance with `build()`."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\View\\ViewVarsTrait":{"class":{"descriptions":{"short":"Provides the set() method for collecting template context.","long":"Once collected context data can be passed to another object.\nThis is done in Controller, TemplateTask and View for example."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\View\\Widget\\BasicWidget":{"class":{"descriptions":{"short":"Basic input class.","long":"This input class can be used to render basic simple\ninput elements like hidden, text, email, tel and other\ntypes."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\Widget\\ButtonWidget":{"class":{"descriptions":{"short":"Button input class","long":"This input class can be used to render button elements.\nIf you need to make basic submit inputs with type=submit,\nuse the Basic input widget."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\Widget\\CheckboxWidget":{"class":{"descriptions":{"short":"Input widget for creating checkbox widgets.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\Widget\\DateTimeWidget":{"class":{"descriptions":{"short":"Input widget class for generating a date time input widget.","long":"This class is intended as an internal implementation detail\nof Cake\\View\\Helper\\FormHelper and is not intended for direct use."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates","$selectBox"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."},"$selectBox":{"type":"\\Cake\\View\\Widget\\SelectBoxWidget","description":"Selectbox widget instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\View\\Widget\\FileWidget":{"class":{"descriptions":{"short":"Input widget class for generating a file upload control.","long":"This class is intended as an internal implementation detail\nof Cake\\View\\Helper\\FormHelper and is not intended for direct use."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\View\\Widget\\LabelWidget":{"class":{"descriptions":{"short":"Form 'widget' for creating labels.","long":"Generally this element is used by other widgets,\nand FormHelper itself."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"This class uses the following template:\n\n- `label` Used to generate the label for a radio button.\nCan use the following variables `attrs`, `text` and `input`."},"deprecated":false}}}},"Cake\\View\\Widget\\MultiCheckboxWidget":{"class":{"descriptions":{"short":"Input widget class for generating multiple checkboxes.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates","$label"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."},"$label":{"type":"\\Cake\\View\\Widget\\LabelWidget","description":"Label widget instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Render multi-checkbox widget.","long":"This class uses the following templates:\n\n- `checkbox` Renders checkbox input controls. Accepts\nthe `name`, `value` and `attrs` variables.\n- `checkboxWrapper` Renders the containing div\/element for\na checkbox and its label. Accepts the `input`, and `label`\nvariables.\n- `multicheckboxWrapper` Renders a wrapper around grouped inputs.\n- `multicheckboxTitle` Renders the title element for grouped inputs."},"deprecated":false}}}},"Cake\\View\\Widget\\NestingLabelWidget":{"class":{"descriptions":{"short":"Form 'widget' for creating labels that contain their input.","long":"Generally this element is used by other widgets,\nand FormHelper itself."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"This class uses the following template:\n\n- `label` Used to generate the label for a radio button.\nCan use the following variables `attrs`, `text` and `input`."},"deprecated":false}}}},"Cake\\View\\Widget\\RadioWidget":{"class":{"descriptions":{"short":"Input widget class for generating a set of radio buttons.","long":"This class is intended as an internal implementation detail\nof Cake\\View\\Helper\\FormHelper and is not intended for direct use."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates","$label"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."},"$label":{"type":"\\Cake\\View\\Widget\\LabelWidget","description":"Label widget instance."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"This class uses a few templates:\n\n- `radio` Used to generate the input for a radio button.\nCan use the following variables `name`, `value`, `attrs`.\n- `radioWrapper` Used to generate the container element for\nthe radio + input element. Can use the `input` and `label`\nvariables."},"deprecated":false}}}},"Cake\\View\\Widget\\SelectBoxWidget":{"class":{"descriptions":{"short":"Input widget class for generating a selectbox.","long":"This class is intended as an internal implementation detail\nof Cake\\View\\Helper\\FormHelper and is not intended for direct use."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\Widget\\TextareaWidget":{"class":{"descriptions":{"short":"Input widget class for generating a textarea control.","long":"This class is intended as an internal implementation detail\nof Cake\\View\\Helper\\FormHelper and is not intended for direct use."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates"],"optionals":[],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates list."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Cake\\View\\Widget\\WidgetInterface":{"class":{"descriptions":{"short":"Interface for input widgets.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Cake\\View\\Widget\\WidgetRegistry":{"class":{"descriptions":{"short":"A registry\/factory for input widgets.","long":"Can be used by helpers\/view logic to build form widgets\nand other HTML widgets.\n\nThis class handles the mapping between names and concrete classes.\nIt also has a basic name based dependency resolver that allows\nwidgets to depend on each other.\n\nEach widget should expect a StringTemplate instance as their first\nargument. All other dependencies will be included after.\n\nWidgets can ask for the current view by using the `_view` widget."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templates","$view"],"optionals":["$widgets"],"docParameters":{"$templates":{"type":"\\Cake\\View\\StringTemplate","description":"Templates instance to use."},"$view":{"type":"\\Cake\\View\\View","description":"The view instance to set as a widget."},"$widgets":{"type":"string|array","description":"See add() method for more information."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Cake\\View\\XmlView":{"class":{"descriptions":{"short":"A view class that is used for creating XML responses.","long":"By setting the '_serialize' key in your controller, you can specify a view variable\nthat should be serialized to XML and used as the response for the request.\nThis allows you to omit views + layouts, if your just need to emit a single view\nvariable as the XML response.\n\nIn your controller, you could do the following:\n\n```\n$this->set(['posts' => $posts, '_serialize' => true]);\n```\n\nWhen the view is rendered, the `$posts` view variable will be serialized\ninto XML.\n\n**Note** The view variable you specify must be compatible with Xml::fromArray().\n\nYou can also define `'_serialize'` as an array. This will create an additional\ntop level element named `<response>` containing all the named view variables:\n\n```\n$this->set(compact('posts', 'users', 'stuff'));\n$this->set('_serialize', true);\n```\n\nThe above would generate a XML object that looks like:\n\n`<response><posts>...<\/posts><users>...<\/users><\/response>`\n\nYou can also set `'_serialize'` to a string or array to serialize only the\nspecified view variables.\n\nIf you don't use the `_serialize` key, you will need a view. You can use extended\nviews to provide layout like functionality."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$request","$response","$eventManager","$viewOptions"],"docParameters":{"$request":{"type":"\\Cake\\Network\\Request|null","description":"Request instance."},"$response":{"type":"\\Cake\\Network\\Response|null","description":"Response instance."},"$eventManager":{"type":"\\Cake\\Event\\EventManager|null","description":"EventManager instance."},"$viewOptions":{"type":"array","description":"An array of view options"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Composer\\Installers\\AglInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\AimeosInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\AnnotateCmsInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\AsgardInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\AttogramInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\BaseInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\BitrixInstaller":{"class":{"descriptions":{"short":"Installer for Bitrix Framework. Supported types of extensions:\n- `bitrix-d7-module` \u2014 copy the module to directory `bitrix\/modules\/<vendor>.<name>`.\n- `bitrix-d7-component` \u2014 copy the component to directory `bitrix\/components\/<vendor>\/<name>`.\n- `bitrix-d7-template` \u2014 copy the template to directory `bitrix\/templates\/<vendor>_<name>`.","long":"You can set custom path to directory with Bitrix kernel in `composer.json`:\n\n```json\n{\n\"extra\": {\n\"bitrix-dir\": \"s1\/bitrix\"\n}\n}\n```\n\n@author Nik Samokhvalov <nik@samokhvalov.info>\n@author Denis Kulichkin <onexhovia@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\BonefishInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\CakePHPInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\ChefInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\ClanCatsFrameworkInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\CockpitInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\CodeIgniterInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\Concrete5Installer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\CraftInstaller":{"class":{"descriptions":{"short":"Installer for Craft Plugins","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\CroogoInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\DecibelInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\DokuWikiInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\DolibarrInstaller":{"class":{"descriptions":{"short":"Class DolibarrInstaller","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\DrupalInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\ElggInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\ExpressionEngineInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\FuelInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\FuelphpInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\GravInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\HuradInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\ImageCMSInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\JoomlaInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\KirbyInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\KodiCMSInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\KohanaInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\LaravelInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\LithiumInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\MODULEWorkInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\MODXEvoInstaller":{"class":{"descriptions":{"short":"An installer to handle MODX Evolution specifics when installing packages.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\MagentoInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\MakoInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\MauticInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\MediaWikiInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\MicroweberInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\MoodleInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\OctoberInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\OxidInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\PPIInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\PhiftyInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\PhpBBInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\PimcoreInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\PiwikInstaller":{"class":{"descriptions":{"short":"Class PiwikInstaller","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\PlentymarketsInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\PrestashopInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\PuppetInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\RadPHPInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\ReIndexInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\RedaxoInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\RoundcubeInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\SMFInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\ShopwareInstaller":{"class":{"descriptions":{"short":"Plugin\/theme installer for shopware","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\SilverStripeInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\Symfony1Installer":{"class":{"descriptions":{"short":"Plugin installer for symfony 1.x","long":"@author J\u00e9r\u00f4me Tamarelle <jerome@tamarelle.net>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\TYPO3CmsInstaller":{"class":{"descriptions":{"short":"Extension installer for TYPO3 CMS","long":""},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\TYPO3FlowInstaller":{"class":{"descriptions":{"short":"An installer to handle TYPO3 Flow specifics when installing packages.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\TheliaInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\TuskInstaller":{"class":{"descriptions":{"short":"Composer installer for 3rd party Tusk utilities\n@author Drew Ewing <drew@phenocode.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\VanillaInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\WHMCSInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\WolfCMSInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\WordPressInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\YawikInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\ZendInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"Composer\\Installers\\ZikulaInstaller":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$package","$composer","$io"],"docParameters":{"$package":{"type":"PackageInterface","description":null},"$composer":{"type":"Composer","description":null},"$io":{"type":"IOInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes base installer.","long":""},"deprecated":false}}}},"CurrencyConverter\\Controller\\Component\\CurrencyConverterComponent":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$registry"],"optionals":["$config"],"docParameters":{"$registry":{"type":"\\Cake\\Controller\\ComponentRegistry","description":"A ComponentRegistry this component can use to lazy load its components"},"$config":{"type":"array","description":"Array of configuration settings."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"CurrencyConverter\\Model\\Entity\\CurrencyConverter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$properties","$options"],"docParameters":{"$properties":{"type":"array","description":"hash of properties to set in this entity"},"$options":{"type":"array","description":"list of options to use when creating this entity"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes the internal properties of this entity out of the\nkeys in an array. The following list of options can be used:","long":"- useSetters: whether use internal setters for properties or not\n- markClean: whether to mark all properties as clean after setting them\n- markNew: whether this instance has not yet been persisted\n- guard: whether to prevent inaccessible properties from being set (default: false)\n- source: A string representing the alias of the repository this entity came from\n\n### Example:\n\n```\n$entity = new Entity(['id' => 1, 'name' => 'Andrew'])\n```"},"deprecated":false}}}},"CurrencyConverter\\Model\\Table\\CurrencyConvertersTable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$config"],"docParameters":{"$config":{"type":"array","description":"List of options for this table"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance","long":"The $config array understands the following keys:\n\n- table: Name of the database table to represent\n- alias: Alias to be assigned to this table (default to table name)\n- connection: The connection instance to use\n- entityClass: The fully namespaced class name of the entity class that will\nrepresent rows in this table.\n- schema: A \\Cake\\Database\\Schema\\Table object or an array that can be\npassed to it.\n- eventManager: An instance of an event manager to use for internal events\n- behaviors: A BehaviorRegistry. Generally not used outside of tests.\n- associations: An AssociationCollection instance.\n- validator: A Validator instance which is assigned as the \"default\"\nvalidation set, or an associative array, where key is the name of the\nvalidation set and value the Validator instance."},"deprecated":false}}}},"DeepCopy\\DeepCopy":{"class":{"descriptions":{"short":"DeepCopy","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$useCloneMethod"],"docParameters":{"$useCloneMethod":{"type":"bool","description":"If set to true, when an object implements the __clone() function, it will be used instead of the regular deep cloning."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Exception\\CloneException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Filter\\Doctrine\\DoctrineCollectionFilter":{"class":{"descriptions":{"short":"Set a null value for a property","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Filter\\Doctrine\\DoctrineEmptyCollectionFilter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Filter\\Doctrine\\DoctrineProxyFilter":{"class":{"descriptions":{"short":"Trigger the magic method __load() on a Doctrine Proxy class to load the\nactual entity from the database.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Filter\\Filter":{"class":{"descriptions":{"short":"Filter to apply to a property while copying an object","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Filter\\KeepFilter":{"class":{"descriptions":{"short":"Keep the value of a property","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Filter\\ReplaceFilter":{"class":{"descriptions":{"short":"Replace the value of a property","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callable"],"optionals":[],"docParameters":{"$callable":{"type":"callable","description":"Will be called to get the new value for each property to replace"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Filter\\SetNullFilter":{"class":{"descriptions":{"short":"Set a null value for a property","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Matcher\\Doctrine\\DoctrineProxyMatcher":{"class":{"descriptions":{"short":"Match a Doctrine Proxy class.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Matcher\\Matcher":{"class":{"descriptions":{"short":"Matcher interface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\Matcher\\PropertyMatcher":{"class":{"descriptions":{"short":"Match a specific property of a specific class","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class","$property"],"optionals":[],"docParameters":{"$class":{"type":"string","description":"Class name"},"$property":{"type":"string","description":"Property name"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Matcher\\PropertyNameMatcher":{"class":{"descriptions":{"short":"Match a property by its name","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$property"],"optionals":[],"docParameters":{"$property":{"type":"string","description":"Property name"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Matcher\\PropertyTypeMatcher":{"class":{"descriptions":{"short":"Match a property by its type","long":"@deprecated It is recommended to use {@see DeepCopy\\TypeFilter\\TypeFilter} instead, as it applies on all occurrences\nof given type in copied context (eg. array elements), not just on object properties."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$propertyType"],"optionals":[],"docParameters":{"$propertyType":{"type":"string","description":"Property type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\Reflection\\ReflectionHelper":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\TypeFilter\\ReplaceFilter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callable"],"optionals":[],"docParameters":{"$callable":{"type":"callable","description":"Will be called to get the new value for each element to replace"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\TypeFilter\\ShallowCopyFilter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\TypeFilter\\Spl\\SplDoublyLinkedList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$deepCopy"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DeepCopy\\TypeFilter\\TypeFilter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DeepCopy\\TypeMatcher\\TypeMatcher":{"class":{"descriptions":{"short":"TypeMatcher class","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":[],"docParameters":{"$type":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Instantiator\\Exception\\ExceptionInterface":{"class":{"descriptions":{"short":"Base exception marker interface for the instantiator component","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Instantiator\\Exception\\InvalidArgumentException":{"class":{"descriptions":{"short":"Exception for invalid arguments provided to the instantiator","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Instantiator\\Exception\\UnexpectedValueException":{"class":{"descriptions":{"short":"Exception for given parameters causing invalid\/unexpected state on instantiation","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Instantiator\\Instantiator":{"class":{"descriptions":{"short":"{@inheritDoc}","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Instantiator\\InstantiatorInterface":{"class":{"descriptions":{"short":"Instantiator provides utility methods to build objects without invoking their constructors","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"File_Iterator":{"class":{"descriptions":{"short":"FilterIterator implementation that filters files based on prefix(es) and\/or\nsuffix(es). Hidden files and files from hidden directories are also filtered.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$suffixes","$prefixes","$exclude","$basepath"],"docParameters":{"$iterator":{"type":"Iterator","description":null},"$suffixes":{"type":"array","description":null},"$prefixes":{"type":"array","description":null},"$exclude":{"type":"array","description":null},"$basepath":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"File_Iterator_Facade":{"class":{"descriptions":{"short":"Fa\u00e7ade implementation that uses File_Iterator_Factory to create a\nFile_Iterator that operates on an AppendIterator that contains an\nRecursiveDirectoryIterator for each given path. The list of unique\nfiles is returned as an array.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"File_Iterator_Factory":{"class":{"descriptions":{"short":"Factory Method implementation that creates a File_Iterator that operates on\nan AppendIterator that contains an RecursiveDirectoryIterator for each given\npath.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Arrays_DisallowLongArraySyntaxSniff":{"class":{"descriptions":{"short":"Bans the use of the PHP long array syntax.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Arrays_DisallowShortArraySyntaxSniff":{"class":{"descriptions":{"short":"Bans the use of the PHP short array syntax.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Classes_DuplicateClassNameSniff":{"class":{"descriptions":{"short":"Reports errors if the same class or interface name is used in multiple files.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Classes_OpeningBraceSameLineSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Classes_OpeningBraceSameLineSniff.","long":"Checks that the opening brace of a class or interface is on the same line\nas the class declaration.\n\nAlso checks that the brace is the last thing on that line and has precisely one space before it."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_CodeAnalysis_EmptyStatementSniff":{"class":{"descriptions":{"short":"This sniff class detected empty statement.","long":"This sniff implements the common algorithm for empty statement body detection.\nA body is considered as empty if it is completely empty or it only contains\nwhitespace characters and\/or comments.\n\n<code>\nstmt {\n\/\/ foo\n}\nstmt (conditions) {\n\/\/ foo\n}\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_CodeAnalysis_ForLoopShouldBeWhileLoopSniff":{"class":{"descriptions":{"short":"Detects for-loops that can be simplified to a while-loop.","long":"This rule is based on the PMD rule catalog. Detects for-loops that can be\nsimplified as a while-loop.\n\n<code>\nclass Foo\n{\npublic function bar($x)\n{\nfor (;true;) true; \/\/ No Init or Update part, may as well be: while (true)\n}\n}\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_CodeAnalysis_ForLoopWithTestFunctionCallSniff":{"class":{"descriptions":{"short":"Detects for-loops that use a function call in the test expression.","long":"This rule is based on the PMD rule catalog. Detects for-loops that use a\nfunction call in the test expression.\n\n<code>\nclass Foo\n{\npublic function bar($x)\n{\n$a = array(1, 2, 3, 4);\nfor ($i = 0; $i < count($a); $i++) {\n$a[$i] *= $i;\n}\n}\n}\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_CodeAnalysis_JumbledIncrementerSniff":{"class":{"descriptions":{"short":"Detects incrementer jumbling in for loops.","long":"This rule is based on the PMD rule catalog. The jumbling incrementer sniff\ndetects the usage of one and the same incrementer into an outer and an inner\nloop. Even it is intended this is confusing code.\n\n<code>\nclass Foo\n{\npublic function bar($x)\n{\nfor ($i = 0; $i < 10; $i++)\n{\nfor ($k = 0; $k < 20; $i++)\n{\necho 'Hello';\n}\n}\n}\n}\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_CodeAnalysis_UnconditionalIfStatementSniff":{"class":{"descriptions":{"short":"Detects unconditional if- and elseif-statements.","long":"This rule is based on the PMD rule catalog. The Unconditional If Statement\nsniff detects statement conditions that are only set to one of the constant\nvalues <b>true<\/b> or <b>false<\/b>\n\n<code>\nclass Foo\n{\npublic function close()\n{\nif (true)\n{\n\/\/ ...\n}\n}\n}\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_CodeAnalysis_UnnecessaryFinalModifierSniff":{"class":{"descriptions":{"short":"Detects unnecessary final modifiers inside of final classes.","long":"This rule is based on the PMD rule catalog. The Unnecessary Final Modifier\nsniff detects the use of the final modifier inside of a final class which\nis unnecessary.\n\n<code>\nfinal class Foo\n{\npublic final function bar()\n{\n}\n}\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_CodeAnalysis_UnusedFunctionParameterSniff":{"class":{"descriptions":{"short":"Checks the for unused function parameters.","long":"This sniff checks that all function parameters are used in the function body.\nOne exception is made for empty function bodies or function bodies that only\ncontain comments. This could be useful for the classes that implement an\ninterface that defines multiple methods but the implementation only needs some\nof them."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_CodeAnalysis_UselessOverridingMethodSniff":{"class":{"descriptions":{"short":"Detects unnecessary overridden methods that simply call their parent.","long":"This rule is based on the PMD rule catalog. The Useless Overriding Method\nsniff detects the use of methods that only call their parent classes's method\nwith the same name and arguments. These methods are not required.\n\n<code>\nclass FooBar {\npublic function __construct($a, $b) {\nparent::__construct($a, $b);\n}\n}\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Commenting_DocCommentSniff":{"class":{"descriptions":{"short":"Ensures doc blocks follow basic formatting.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Commenting_FixmeSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Commenting_FixmeSniff.","long":"Warns about FIXME comments."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Commenting_TodoSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Commenting_TodoSniff.","long":"Warns about TODO comments."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_ControlStructures_InlineControlStructureSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_ControlStructures_InlineControlStructureSniff.","long":"Verifies that inline control statements are not present."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Debug_CSSLintSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Debug_CSSLintSniff.","long":"Runs csslint on the file."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Debug_ClosureLinterSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Debug_ClosureLinterSniff.","long":"Runs gjslint on the file."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Debug_JSHintSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Debug_JSHintSniff.","long":"Runs jshint.js on the file."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Files_ByteOrderMarkSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Files_ByteOrderMarkSniff.","long":"A simple sniff for detecting BOMs that may corrupt application work."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Files_EndFileNewlineSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Files_EndFileNewlineSniff.","long":"Ensures the file ends with a newline character."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Files_EndFileNoNewlineSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Files_EndFileNoNewlineSniff.","long":"Ensures the file does not end with a newline character."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Files_InlineHTMLSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Files_InlineHTMLSniff.","long":"Ensures the whole file is PHP only, with no whitespace or inline HTML anywhere\nin the file."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Files_LineEndingsSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Files_LineEndingsSniff.","long":"Checks that end of line characters are correct."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Files_LineLengthSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Files_LineLengthSniff.","long":"Checks all lines in the file, and throws warnings if they are over 80\ncharacters in length and errors if they are over 100. Both these\nfigures can be changed by extending this sniff in your own standard."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Files_LowercasedFilenameSniff":{"class":{"descriptions":{"short":"Checks that all file names are lowercased.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Files_OneClassPerFileSniff":{"class":{"descriptions":{"short":"Checks that only one class is declared per file.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Files_OneInterfacePerFileSniff":{"class":{"descriptions":{"short":"Checks that only one interface is declared per file.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Files_OneTraitPerFileSniff":{"class":{"descriptions":{"short":"Checks that only one trait is declared per file.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Formatting_DisallowMultipleStatementsSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Formatting_DisallowMultipleStatementsSniff.","long":"Ensures each statement is on a line by itself."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Formatting_MultipleStatementAlignmentSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Formatting_MultipleStatementAlignmentSniff.","long":"Checks alignment of assignments. If there are multiple adjacent assignments,\nit will check that the equals signs of each assignment are aligned. It will\ndisplay a warning to advise that the signs should be aligned."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Formatting_NoSpaceAfterCastSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Formatting_NoSpaceAfterCastSniff.","long":"Ensures there is no space after cast tokens."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Formatting_SpaceAfterCastSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Formatting_SpaceAfterCastSniff.","long":"Ensures there is a single space after cast tokens."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Formatting_SpaceAfterNotSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Formatting_SpaceAfterNotSniff.","long":"Ensures there is a single space after a NOT operator."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Functions_CallTimePassByReferenceSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Functions_CallTimePassByReferenceSniff.","long":"Ensures that variables are not passed by reference when calling a function."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Functions_FunctionCallArgumentSpacingSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Functions_FunctionCallArgumentSpacingSniff.","long":"Checks that calls to methods and functions are spaced correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Functions_OpeningFunctionBraceBsdAllmanSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Functions_OpeningFunctionBraceBsdAllmanSniff.","long":"Checks that the opening brace of a function is on the line after the\nfunction declaration."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Functions_OpeningFunctionBraceKernighanRitchieSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Functions_OpeningFunctionBraceKernighanRitchieSniff.","long":"Checks that the opening brace of a function is on the same line\nas the function declaration."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Metrics_CyclomaticComplexitySniff":{"class":{"descriptions":{"short":"Checks the cyclomatic complexity (McCabe) for functions.","long":"The cyclomatic complexity (also called McCabe code metrics)\nindicates the complexity within a function by counting\nthe different paths the function includes."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Metrics_NestingLevelSniff":{"class":{"descriptions":{"short":"Checks the nesting level for methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_NamingConventions_CamelCapsFunctionNameSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_NamingConventions_CamelCapsFunctionNameSniff.","long":"Ensures method names are correct depending on whether they are public\nor private, and that functions are named correctly."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a Generic_Sniffs_NamingConventions_CamelCapsFunctionNameSniff.","long":""},"deprecated":false}}}},"Generic_Sniffs_NamingConventions_ConstructorNameSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_NamingConventions_ConstructorNameSniff.","long":"Favor PHP 5 constructor syntax, which uses \"function __construct()\".\nAvoid PHP 4 constructor syntax, which uses \"function ClassName()\"."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs the test with the tokens it wishes to listen for.","long":""},"deprecated":false}}}},"Generic_Sniffs_NamingConventions_UpperCaseConstantNameSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_NamingConventions_UpperCaseConstantNameSniff.","long":"Ensures that constant names are all uppercase."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_BacktickOperatorSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_BacktickOperatorSniff.","long":"Checks for the use of the backtick execution operator."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_CharacterBeforePHPOpeningTagSniff":{"class":{"descriptions":{"short":"Checks that the opening PHP tag is the first content in a file.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_ClosingPHPTagSniff":{"class":{"descriptions":{"short":"Checks that open PHP tags are paired with closing tags.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_DeprecatedFunctionsSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_DeprecatedFunctionsSniff.","long":"Discourages the use of deprecated functions that are kept in PHP for\ncompatibility with older versions."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Uses the Reflection API to get a list of deprecated functions."},"deprecated":false}}}},"Generic_Sniffs_PHP_DisallowAlternativePHPTagsSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_DisallowAlternativePHPTagsSniff.","long":"Verifies that no alternative PHP tags are used.\n\nIf alternative PHP open tags are found, this sniff can fix both the open and close tags."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_DisallowShortOpenTagSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_DisallowShortOpenTagSniff.","long":"Makes sure that shorthand PHP open tags are not used."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_ForbiddenFunctionsSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_ForbiddenFunctionsSniff.","long":"Discourages the use of alias functions that are kept in PHP for compatibility\nwith older versions. Can be used to forbid the use of any function."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_LowerCaseConstantSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_LowerCaseConstantSniff.","long":"Checks that all uses of true, false and null are lowercase."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_LowerCaseKeywordSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_LowerCaseKeywordSniff.","long":"Checks that all PHP keywords are lowercase."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_NoSilencedErrorsSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_NoSilencedErrorsSniff.","long":"Throws an error or warning when any code prefixed with an asperand is encountered.\n\n<code>\nif (@in_array($array, $needle))\n{\ndoSomething();\n}\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_SAPIUsageSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_SAPIUsageSniff.","long":"Ensures the PHP_SAPI constant is used instead of php_sapi_name()."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_SyntaxSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_SyntaxSniff.","long":"Ensures PHP believes the syntax is clean."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_PHP_UpperCaseConstantSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_PHP_UpperCaseConstantSniff.","long":"Checks that all uses of TRUE, FALSE and NULL are uppercase."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_Strings_UnnecessaryStringConcatSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Strings_UnnecessaryStringConcatSniff.","long":"Checks that two strings are not concatenated together; suggests\nusing one string instead."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_VersionControl_SubversionPropertiesSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_VersionControl_SubversionPropertiesSniff.","long":"Tests that the correct Subversion properties are set."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_WhiteSpace_DisallowSpaceIndentSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_WhiteSpace_DisallowSpaceIndentSniff.","long":"Throws errors if spaces are used for indentation."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_WhiteSpace_DisallowTabIndentSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_WhiteSpace_DisallowTabIndentSniff.","long":"Throws errors if tabs are used for indentation."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Generic_Sniffs_WhiteSpace_ScopeIndentSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Whitespace_ScopeIndentSniff.","long":"Checks that control structures are structured correctly, and their content\nis indented correctly. This sniff will throw errors if tabs are used\nfor indentation rather than spaces."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_CSS_BrowserSpecificStylesSniff":{"class":{"descriptions":{"short":"MySource_Sniffs_CSS_BrowserSpecificStylesSniff.","long":"Ensure that browser-specific styles are not used."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_Channels_DisallowSelfActionsSniff":{"class":{"descriptions":{"short":"Ensures that self and static are not used to call public methods in action classes.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_Channels_IncludeOwnSystemSniff":{"class":{"descriptions":{"short":"Ensures that a system does not include itself.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_Channels_IncludeSystemSniff":{"class":{"descriptions":{"short":"Ensures that systems, asset types and libs are included before they are used.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a Squiz_Sniffs_Scope_MethodScopeSniff.","long":""},"deprecated":false}}}},"MySource_Sniffs_Channels_UnusedSystemSniff":{"class":{"descriptions":{"short":"Ensures that systems and asset types are used if they are included.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_Commenting_FunctionCommentSniff":{"class":{"descriptions":{"short":"Parses and verifies the doc comments for functions.","long":"Same as the Squiz standard, but adds support for API tags."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_Debug_DebugCodeSniff":{"class":{"descriptions":{"short":"Warns about the use of debug code.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_Debug_FirebugConsoleSniff":{"class":{"descriptions":{"short":"Ensures that console is not used for function or var names.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_Objects_AssignThisSniff":{"class":{"descriptions":{"short":"Ensures this is not assigned to any other var but self.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_Objects_CreateWidgetTypeCallbackSniff":{"class":{"descriptions":{"short":"Ensures the create() method of widget types properly uses callbacks.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_Objects_DisallowNewWidgetSniff":{"class":{"descriptions":{"short":"Ensures that widgets are not manually created.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_PHP_AjaxNullComparisonSniff":{"class":{"descriptions":{"short":"Ensures that values submitted via JS are not compared to NULL.","long":"With jQuery 1.8, the behaviour of ajax requests changed so that null values are\nsubmitted as null= instead of null=null."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_PHP_EvalObjectFactorySniff":{"class":{"descriptions":{"short":"Ensures that eval() is not used to create objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_PHP_GetRequestDataSniff":{"class":{"descriptions":{"short":"Ensures that getRequestData() is used to access super globals.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_PHP_ReturnFunctionValueSniff":{"class":{"descriptions":{"short":"Warns when function values are returned directly.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MySource_Sniffs_Strings_JoinStringsSniff":{"class":{"descriptions":{"short":"Ensures that strings are not joined using array.join().","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_Classes_ClassDeclarationSniff":{"class":{"descriptions":{"short":"Class Declaration Test.","long":"Checks the declaration of the class is correct."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_Commenting_ClassCommentSniff":{"class":{"descriptions":{"short":"Parses and verifies the doc comments for classes.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_Commenting_FileCommentSniff":{"class":{"descriptions":{"short":"Parses and verifies the doc comments for files.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_Commenting_FunctionCommentSniff":{"class":{"descriptions":{"short":"Parses and verifies the doc comments for functions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_Commenting_InlineCommentSniff":{"class":{"descriptions":{"short":"PHP_CodeSniffer_Sniffs_PEAR_Commenting_InlineCommentSniff.","long":"Checks that no perl-style comments are used."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_ControlStructures_ControlSignatureSniff":{"class":{"descriptions":{"short":"Verifies that control statements conform to their coding standards.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$ignoreComments"],"docParameters":{"$ignoreComments":{"type":"boolean","description":"If true, comments will be ignored."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PHP_CodeSniffer_Standards_AbstractPatternSniff.","long":""},"deprecated":false}}}},"PEAR_Sniffs_ControlStructures_MultiLineConditionSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_ControlStructures_MultiLineConditionSniff.","long":"Ensure multi-line IF conditions are defined correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_Files_IncludingFileSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_Files_IncludingFileSniff.","long":"Checks that the include_once is used in conditional situations, and\nrequire_once is used elsewhere. Also checks that brackets do not surround\nthe file being included."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_Formatting_MultiLineAssignmentSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_Formatting_MultiLineAssignmentSniff.","long":"If an assignment goes over two lines, ensure the equal sign is indented."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_Functions_FunctionCallSignatureSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_Functions_FunctionCallSignatureSniff.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_Functions_FunctionDeclarationSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_Functions_FunctionDeclarationSniff.","long":"Ensure single and multi-line function declarations are defined correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_Functions_ValidDefaultValueSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_Functions_ValidDefaultValueSniff.","long":"A Sniff to ensure that parameters defined for a function that have a default\nvalue come at the end of the function signature."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_NamingConventions_ValidClassNameSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_NamingConventions_ValidClassNameSniff.","long":"Ensures class and interface names start with a capital letter\nand use _ separators."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_NamingConventions_ValidFunctionNameSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_NamingConventions_ValidFunctionNameSniff.","long":"Ensures method names are correct depending on whether they are public\nor private, and that functions are named correctly."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PEAR_Sniffs_NamingConventions_ValidFunctionNameSniff.","long":""},"deprecated":false}}}},"PEAR_Sniffs_NamingConventions_ValidVariableNameSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_NamingConventions_ValidVariableNameSniff.","long":"Checks the naming of member variables."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs an AbstractVariableTest.","long":""},"deprecated":false}}}},"PEAR_Sniffs_WhiteSpace_ObjectOperatorIndentSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_WhiteSpace_ObjectOperatorIndentSniff.","long":"Checks that object operators are indented 4 spaces if they are the first\nthing on a line."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_WhiteSpace_ScopeClosingBraceSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_Whitespace_ScopeClosingBraceSniff.","long":"Checks that the closing braces of scopes are aligned correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PEAR_Sniffs_WhiteSpace_ScopeIndentSniff":{"class":{"descriptions":{"short":"PEAR_Sniffs_Whitespace_ScopeIndentSniff.","long":"Checks that control structures are structured correctly, and their content\nis indented correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Exception":{"class":{"descriptions":{"short":"Marker interface for PHPUnit exceptions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\Assert":{"class":{"descriptions":{"short":"A set of assertion methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\AssertionFailedError":{"class":{"descriptions":{"short":"Thrown when an assertion failed.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\BaseTestListener":{"class":{"descriptions":{"short":"An empty Listener that can be extended to implement TestListener\nwith just a few lines of code.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\CodeCoverageException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\ArrayHasKey":{"class":{"descriptions":{"short":"Constraint that asserts that the array it is evaluated for has a given key.","long":"Uses array_key_exists() to check if the key is found in the input array, if\nnot found the evaluation fails.\n\nThe array key is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key"],"optionals":[],"docParameters":{"$key":{"type":"int|string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\ArraySubset":{"class":{"descriptions":{"short":"Constraint that asserts that the array it is evaluated for has a specified subset.","long":"Uses array_replace_recursive() to check if a key value subset is part of the\nsubject array."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$subset"],"optionals":["$strict"],"docParameters":{"$subset":{"type":"array|ArrayAccess","description":null},"$strict":{"type":"bool","description":"Check for object identity"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\Attribute":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$constraint","$attributeName"],"optionals":[],"docParameters":{"$constraint":{"type":"Constraint","description":null},"$attributeName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\Callback":{"class":{"descriptions":{"short":"Constraint that evaluates against a specified closure.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":null}},"throws":{"\\PHPUnit\\Framework\\Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\ClassHasAttribute":{"class":{"descriptions":{"short":"Constraint that asserts that the class it is evaluated for has a given\nattribute.","long":"The attribute name is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$attributeName"],"optionals":[],"docParameters":{"$attributeName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\ClassHasStaticAttribute":{"class":{"descriptions":{"short":"Constraint that asserts that the class it is evaluated for has a given\nstatic attribute.","long":"The attribute name is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$attributeName"],"optionals":[],"docParameters":{"$attributeName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\Composite":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$innerConstraint"],"optionals":[],"docParameters":{"$innerConstraint":{"type":"Constraint","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\Constraint":{"class":{"descriptions":{"short":"Abstract base class for constraints which can be applied to any value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\Count":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected"],"optionals":[],"docParameters":{"$expected":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\DirectoryExists":{"class":{"descriptions":{"short":"Constraint that checks if the directory(name) that it is evaluated for exists.","long":"The file path to check is passed as $other in evaluate()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className"],"optionals":[],"docParameters":{"$className":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\ExceptionCode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected"],"optionals":[],"docParameters":{"$expected":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\ExceptionMessage":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected"],"optionals":[],"docParameters":{"$expected":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected"],"optionals":[],"docParameters":{"$expected":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\FileExists":{"class":{"descriptions":{"short":"Constraint that checks if the file(name) that it is evaluated for exists.","long":"The file path to check is passed as $other in evaluate()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\GreaterThan":{"class":{"descriptions":{"short":"Constraint that asserts that the value it is evaluated for is greater\nthan a given value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"numeric","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsAnything":{"class":{"descriptions":{"short":"Constraint that accepts any input value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsEmpty":{"class":{"descriptions":{"short":"Constraint that checks whether a variable is empty().","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsEqual":{"class":{"descriptions":{"short":"Constraint that checks if one value is equal to another.","long":"Equality is checked with PHP's == operator, the operator is explained in\ndetail at {@url http:\/\/www.php.net\/manual\/en\/types.comparisons.php}.\nTwo values are equal if they have the same value disregarding type.\n\nThe expected value is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$delta","$maxDepth","$canonicalize","$ignoreCase"],"docParameters":{"$value":{"type":"mixed","description":null},"$delta":{"type":"float","description":null},"$maxDepth":{"type":"int","description":null},"$canonicalize":{"type":"bool","description":null},"$ignoreCase":{"type":"bool","description":null}},"throws":{"\\PHPUnit\\Framework\\Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsFalse":{"class":{"descriptions":{"short":"Constraint that accepts false.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsFinite":{"class":{"descriptions":{"short":"Constraint that accepts finite.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsIdentical":{"class":{"descriptions":{"short":"Constraint that asserts that one value is identical to another.","long":"Identical check is performed with PHP's === operator, the operator is\nexplained in detail at\n{@url http:\/\/www.php.net\/manual\/en\/types.comparisons.php}.\nTwo values are identical if they have the same value and are of the same\ntype.\n\nThe expected value is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsInfinite":{"class":{"descriptions":{"short":"Constraint that accepts infinite.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsInstanceOf":{"class":{"descriptions":{"short":"Constraint that asserts that the object it is evaluated for is an instance\nof a given class.","long":"The expected class name is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className"],"optionals":[],"docParameters":{"$className":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsJson":{"class":{"descriptions":{"short":"Constraint that asserts that a string is valid JSON.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsNan":{"class":{"descriptions":{"short":"Constraint that accepts nan.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsNull":{"class":{"descriptions":{"short":"Constraint that accepts null.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsReadable":{"class":{"descriptions":{"short":"Constraint that checks if the file\/dir(name) that it is evaluated for is readable.","long":"The file path to check is passed as $other in evaluate()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsTrue":{"class":{"descriptions":{"short":"Constraint that accepts true.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsType":{"class":{"descriptions":{"short":"Constraint that asserts that the value it is evaluated for is of a\nspecified type.","long":"The expected value is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":[],"docParameters":{"$type":{"type":"string","description":null}},"throws":{"\\PHPUnit\\Framework\\Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\IsWritable":{"class":{"descriptions":{"short":"Constraint that checks if the file\/dir(name) that it is evaluated for is writable.","long":"The file path to check is passed as $other in evaluate()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\JsonMatches":{"class":{"descriptions":{"short":"Asserts whether or not two JSON objects are equal.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a new constraint.","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\JsonMatchesErrorMessageProvider":{"class":{"descriptions":{"short":"Provides human readable messages for each JSON error.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\Constraint\\LessThan":{"class":{"descriptions":{"short":"Constraint that asserts that the value it is evaluated for is less than\na given value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"numeric","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\LogicalAnd":{"class":{"descriptions":{"short":"Logical AND.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\LogicalNot":{"class":{"descriptions":{"short":"Logical NOT.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$constraint"],"optionals":[],"docParameters":{"$constraint":{"type":"Constraint","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\LogicalOr":{"class":{"descriptions":{"short":"Logical OR.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\LogicalXor":{"class":{"descriptions":{"short":"Logical XOR.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\ObjectHasAttribute":{"class":{"descriptions":{"short":"Constraint that asserts that the object it is evaluated for has a given\nattribute.","long":"The attribute name is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$attributeName"],"optionals":[],"docParameters":{"$attributeName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\RegularExpression":{"class":{"descriptions":{"short":"Constraint that asserts that the string it is evaluated for matches\na regular expression.","long":"Checks a given value using the Perl Compatible Regular Expression extension\nin PHP. The pattern is matched by executing preg_match().\n\nThe pattern string passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$pattern"],"optionals":[],"docParameters":{"$pattern":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\SameSize":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected"],"optionals":[],"docParameters":{"$expected":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\StringContains":{"class":{"descriptions":{"short":"Constraint that asserts that the string it is evaluated for contains\na given string.","long":"Uses mb_strpos() to find the position of the string in the input, if not\nfound the evaluation fails.\n\nThe sub-string is passed in the constructor."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$string"],"optionals":["$ignoreCase"],"docParameters":{"$string":{"type":"string","description":null},"$ignoreCase":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\StringEndsWith":{"class":{"descriptions":{"short":"Constraint that asserts that the string it is evaluated for ends with a given\nsuffix.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$suffix"],"optionals":[],"docParameters":{"$suffix":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription":{"class":{"descriptions":{"short":"...","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$string"],"optionals":[],"docParameters":{"$string":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\StringStartsWith":{"class":{"descriptions":{"short":"Constraint that asserts that the string it is evaluated for begins with a\ngiven prefix.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$prefix"],"optionals":[],"docParameters":{"$prefix":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\TraversableContains":{"class":{"descriptions":{"short":"Constraint that asserts that the Traversable it is applied to contains\na given value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$checkForObjectIdentity","$checkForNonObjectIdentity"],"docParameters":{"$value":{"type":"mixed","description":null},"$checkForObjectIdentity":{"type":"bool","description":null},"$checkForNonObjectIdentity":{"type":"bool","description":null}},"throws":{"\\PHPUnit\\Framework\\Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Constraint\\TraversableContainsOnly":{"class":{"descriptions":{"short":"Constraint that asserts that the Traversable it is applied to contains\nonly values of a given type.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":["$isNativeType"],"docParameters":{"$type":{"type":"string","description":null},"$isNativeType":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\CoveredCodeNotExecutedException":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a test that does not execute the code it wants to cover.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\DataProviderTestSuite":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$theClass","$name"],"docParameters":{"$theClass":{"type":"mixed","description":null},"$name":{"type":"string","description":null}},"throws":{"Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a new TestSuite:","long":"- PHPUnit_Framework_TestSuite() constructs an empty TestSuite.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass) constructs a\nTestSuite from the given class.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass, String)\nconstructs a TestSuite from the given class with the given\nname.\n\n- PHPUnit_Framework_TestSuite(String) either constructs a\nTestSuite from the given class (if the passed string is the\nname of an existing class) or constructs an empty TestSuite\nwith the given name."},"deprecated":false}}}},"PHPUnit\\Framework\\Error\\Deprecated":{"class":{"descriptions":{"short":"Wrapper for PHP deprecated errors.\nYou can disable deprecated-to-exception conversion by setting","long":"<code>\nPHPUnit_Framework_Error_Deprecated::$enabled = false;\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$file","$line"],"optionals":["$previous"],"docParameters":{"$message":{"type":"string","description":null},"$code":{"type":"int","description":null},"$file":{"type":"string","description":null},"$line":{"type":"int","description":null},"$previous":{"type":"\\Exception","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Error\\Error":{"class":{"descriptions":{"short":"Wrapper for PHP errors.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$file","$line"],"optionals":["$previous"],"docParameters":{"$message":{"type":"string","description":null},"$code":{"type":"int","description":null},"$file":{"type":"string","description":null},"$line":{"type":"int","description":null},"$previous":{"type":"\\Exception","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Error\\Notice":{"class":{"descriptions":{"short":"Wrapper for PHP notices.\nYou can disable notice-to-exception conversion by setting","long":"<code>\nPHPUnit_Framework_Error_Notice::$enabled = false;\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$file","$line"],"optionals":["$previous"],"docParameters":{"$message":{"type":"string","description":null},"$code":{"type":"int","description":null},"$file":{"type":"string","description":null},"$line":{"type":"int","description":null},"$previous":{"type":"\\Exception","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Error\\Warning":{"class":{"descriptions":{"short":"Wrapper for PHP warnings.\nYou can disable notice-to-exception conversion by setting","long":"<code>\nPHPUnit_Framework_Error_Warning::$enabled = false;\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$file","$line"],"optionals":["$previous"],"docParameters":{"$message":{"type":"string","description":null},"$code":{"type":"int","description":null},"$file":{"type":"string","description":null},"$line":{"type":"int","description":null},"$previous":{"type":"\\Exception","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Exception":{"class":{"descriptions":{"short":"Base class for all PHPUnit Framework exceptions.","long":"Ensures that exceptions thrown during a test run do not leave stray\nreferences behind.\n\nEvery Exception contains a stack trace. Each stack frame contains the 'args'\nof the called function. The function arguments can contain references to\ninstantiated objects. The references prevent the objects from being\ndestructed (until test results are eventually printed), so memory cannot be\nfreed up.\n\nWith enabled process isolation, test results are serialized in the child\nprocess and unserialized in the parent process. The stack trace of Exceptions\nmay contain objects that cannot be serialized or unserialized (e.g., PDO\nconnections). Unserializing user-space objects from the child process into\nthe parent would break the intended encapsulation of process isolation."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\ExceptionWrapper":{"class":{"descriptions":{"short":"Wraps Exceptions thrown by code under test.","long":"Re-instantiates Exceptions thrown by user-space code to retain their original\nclass names, properties, and stack traces (but without arguments).\n\nUnlike PHPUnit_Framework_Exception, the complete stack of previous Exceptions\nis processed."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$t"],"optionals":[],"docParameters":{"$t":{"type":"Throwable","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\ExpectationFailedException":{"class":{"descriptions":{"short":"Exception for expectations which failed their check.","long":"The exception contains the error message and optionally a\nSebastianBergmann\\Comparator\\ComparisonFailure which is used to\ngenerate diff output of the failed expectations."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$comparisonFailure","$previous"],"docParameters":{"$message":{"type":"string","description":null},"$comparisonFailure":{"type":"ComparisonFailure|null","description":null},"$previous":{"type":"\\Exception|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\IncompleteTest":{"class":{"descriptions":{"short":"A marker interface for marking any exception\/error as result of an unit\ntest as incomplete implementation or currently not implemented.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\IncompleteTestCase":{"class":{"descriptions":{"short":"An incomplete test case","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className","$methodName"],"optionals":["$message"],"docParameters":{"$className":{"type":"string","description":null},"$methodName":{"type":"string","description":null},"$message":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\IncompleteTestError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of an incomplete test.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\InvalidCoversTargetException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\MissingCoversAnnotationException":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark a test as risky\nwhen it does not have a @covers annotation but is expected to have one.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\OutputError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a test that printed output.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\RiskyTest":{"class":{"descriptions":{"short":"A marker interface for marking any exception\/error as result of an unit\ntest as risky.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\RiskyTestError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a risky test.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\SelfDescribing":{"class":{"descriptions":{"short":"Interface for classes that can return a description of itself.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\SkippedTest":{"class":{"descriptions":{"short":"A marker interface for marking a unit test as being skipped.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\SkippedTestCase":{"class":{"descriptions":{"short":"A skipped test case","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className","$methodName"],"optionals":["$message"],"docParameters":{"$message":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\SkippedTestError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a skipped test.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\SkippedTestSuiteError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a skipped test suite.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\SyntheticError":{"class":{"descriptions":{"short":"Creates a synthetic failed assertion.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$file","$line","$trace"],"optionals":[],"docParameters":{"$message":{"type":"string","description":null},"$code":{"type":"int","description":null},"$file":{"type":"string","description":null},"$line":{"type":"int","description":null},"$trace":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Test":{"class":{"descriptions":{"short":"A Test can be run and collect its results.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\TestCase":{"class":{"descriptions":{"short":"A TestCase defines the fixture to run multiple tests.","long":"To define a TestCase\n\n1) Implement a subclass of PHPUnit\\Framework\\TestCase.\n2) Define instance variables that store the state of the fixture.\n3) Initialize the fixture state by overriding setUp().\n4) Clean-up after a test by overriding tearDown().\n\nEach test runs in its own fixture so there can be no side effects\namong test runs.\n\nHere is an example:\n\n<code>\n<?php\nclass MathTest extends PHPUnit\\Framework\\TestCase\n{\npublic $value1;\npublic $value2;\n\nprotected function setUp()\n{\n$this->value1 = 2;\n$this->value2 = 3;\n}\n}\n?>\n<\/code>\n\nFor each test implement a method which interacts with the fixture.\nVerify the expected results with assertions specified by calling\nassert with a boolean.\n\n<code>\n<?php\npublic function testPass()\n{\n$this->assertTrue($this->value1 + $this->value2 == 5);\n}\n?>\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name","$data","$dataName"],"docParameters":{"$name":{"type":"string","description":null},"$data":{"type":"array","description":null},"$dataName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a test case with the given name.","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\TestFailure":{"class":{"descriptions":{"short":"A TestFailure collects a failed test together with the caught exception.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$failedTest","$t"],"optionals":[],"docParameters":{"$failedTest":{"type":"Test","description":null},"$t":{"type":"Throwable","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a TestFailure with the given test and exception.","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\TestListener":{"class":{"descriptions":{"short":"A Listener for test progress.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\TestResult":{"class":{"descriptions":{"short":"A TestResult collects the results of executing a test case.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Framework\\TestSuite":{"class":{"descriptions":{"short":"A TestSuite is a composite of Tests. It runs a collection of test cases.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$theClass","$name"],"docParameters":{"$theClass":{"type":"mixed","description":null},"$name":{"type":"string","description":null}},"throws":{"Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a new TestSuite:","long":"- PHPUnit_Framework_TestSuite() constructs an empty TestSuite.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass) constructs a\nTestSuite from the given class.\n\n- PHPUnit_Framework_TestSuite(ReflectionClass, String)\nconstructs a TestSuite from the given class with the given\nname.\n\n- PHPUnit_Framework_TestSuite(String) either constructs a\nTestSuite from the given class (if the passed string is the\nname of an existing class) or constructs an empty TestSuite\nwith the given name."},"deprecated":false}}}},"PHPUnit\\Framework\\TestSuiteIterator":{"class":{"descriptions":{"short":"Iterator for test suites.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$testSuite"],"optionals":[],"docParameters":{"$testSuite":{"type":"TestSuite","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\UnintentionallyCoveredCodeError":{"class":{"descriptions":{"short":"Extension to PHPUnit_Framework_AssertionFailedError to mark the special\ncase of a test that unintentionally covers code.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\Warning":{"class":{"descriptions":{"short":"Thrown when an there is a warning.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Framework\\WarningTestCase":{"class":{"descriptions":{"short":"A warning.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message"],"docParameters":{"$message":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Runner\\BaseTestRunner":{"class":{"descriptions":{"short":"Base class for all test runners.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Runner\\Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Runner\\Filter\\ExcludeGroupFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$groups","$suite"],"optionals":[],"docParameters":{"$iterator":{"type":"RecursiveIterator","description":null},"$groups":{"type":"array","description":null},"$suite":{"type":"TestSuite","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Runner\\Filter\\Factory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Runner\\Filter\\GroupFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$groups","$suite"],"optionals":[],"docParameters":{"$iterator":{"type":"RecursiveIterator","description":null},"$groups":{"type":"array","description":null},"$suite":{"type":"TestSuite","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Runner\\Filter\\IncludeGroupFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$groups","$suite"],"optionals":[],"docParameters":{"$iterator":{"type":"RecursiveIterator","description":null},"$groups":{"type":"array","description":null},"$suite":{"type":"TestSuite","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Runner\\Filter\\NameFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$filter"],"optionals":[],"docParameters":{"$iterator":{"type":"RecursiveIterator","description":null},"$filter":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Runner\\PhptTestCase":{"class":{"descriptions":{"short":"Runner for PHPT test cases.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$phpUtil"],"docParameters":{"$filename":{"type":"string","description":null},"$phpUtil":{"type":"AbstractPhpProcess","description":null}},"throws":{"Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a test case with the given filename.","long":""},"deprecated":false}}}},"PHPUnit\\Runner\\StandardTestSuiteLoader":{"class":{"descriptions":{"short":"The standard test suite loader.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Runner\\TestSuiteLoader":{"class":{"descriptions":{"short":"An interface to define how a test suite should be loaded.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Runner\\Version":{"class":{"descriptions":{"short":"This class defines the current version of PHPUnit.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\TextUI\\Command":{"class":{"descriptions":{"short":"A TestRunner for the Command Line Interface (CLI)\nPHP SAPI Module.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\TextUI\\ResultPrinter":{"class":{"descriptions":{"short":"Prints the result of a TextUI TestRunner run.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$verbose","$colors","$debug","$numberOfColumns","$reverse"],"docParameters":{"$out":{"type":"mixed","description":null},"$verbose":{"type":"bool","description":null},"$colors":{"type":"string","description":null},"$debug":{"type":"bool","description":null},"$numberOfColumns":{"type":"int|string","description":null},"$reverse":{"type":"bool","description":null}},"throws":{"Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit\\TextUI\\TestRunner":{"class":{"descriptions":{"short":"A TestRunner for the Command Line Interface (CLI)\nPHP SAPI Module.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$loader","$filter"],"docParameters":{"$loader":{"type":"TestSuiteLoader","description":null},"$filter":{"type":"CodeCoverageFilter","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Util\\Blacklist":{"class":{"descriptions":{"short":"Utility class for blacklisting PHPUnit's own source code files.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\Configuration":{"class":{"descriptions":{"short":"Wrapper for the PHPUnit XML configuration file.","long":"Example XML configuration file:\n<code>\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n\n<phpunit backupGlobals=\"false\"\nbackupStaticAttributes=\"false\"\nbootstrap=\"\/path\/to\/bootstrap.php\"\ncacheTokens=\"false\"\ncolumns=\"80\"\ncolors=\"false\"\nstderr=\"false\"\nconvertErrorsToExceptions=\"true\"\nconvertNoticesToExceptions=\"true\"\nconvertWarningsToExceptions=\"true\"\nforceCoversAnnotation=\"false\"\nprocessIsolation=\"false\"\nstopOnError=\"false\"\nstopOnFailure=\"false\"\nstopOnWarning=\"false\"\nstopOnIncomplete=\"false\"\nstopOnRisky=\"false\"\nstopOnSkipped=\"false\"\nfailOnWarning=\"false\"\nfailOnRisky=\"false\"\nextensionsDirectory=\"tools\/phpunit.d\"\nprinterClass=\"PHPUnit\\TextUI\\ResultPrinter\"\ntestSuiteLoaderClass=\"PHPUnit\\Runner\\StandardTestSuiteLoader\"\nbeStrictAboutChangesToGlobalState=\"false\"\nbeStrictAboutCoversAnnotation=\"false\"\nbeStrictAboutOutputDuringTests=\"false\"\nbeStrictAboutResourceUsageDuringSmallTests=\"false\"\nbeStrictAboutTestsThatDoNotTestAnything=\"false\"\nbeStrictAboutTodoAnnotatedTests=\"false\"\nenforceTimeLimit=\"false\"\ntimeoutForSmallTests=\"1\"\ntimeoutForMediumTests=\"10\"\ntimeoutForLargeTests=\"60\"\nverbose=\"false\"\nreverseDefectList=\"false\"\nregisterMockObjectsFromTestArgumentsRecursively=\"false\">\n<testsuites>\n<testsuite name=\"My Test Suite\">\n<directory suffix=\"Test.php\" phpVersion=\"5.3.0\" phpVersionOperator=\">=\">\/path\/to\/files<\/directory>\n<file phpVersion=\"5.3.0\" phpVersionOperator=\">=\">\/path\/to\/MyTest.php<\/file>\n<exclude>\/path\/to\/files\/exclude<\/exclude>\n<\/testsuite>\n<\/testsuites>\n\n<groups>\n<include>\n<group>name<\/group>\n<\/include>\n<exclude>\n<group>name<\/group>\n<\/exclude>\n<\/groups>\n\n<testdoxGroups>\n<include>\n<group>name<\/group>\n<\/include>\n<exclude>\n<group>name<\/group>\n<\/exclude>\n<\/testdoxGroups>\n\n<filter>\n<whitelist addUncoveredFilesFromWhitelist=\"true\"\nprocessUncoveredFilesFromWhitelist=\"false\">\n<directory suffix=\".php\">\/path\/to\/files<\/directory>\n<file>\/path\/to\/file<\/file>\n<exclude>\n<directory suffix=\".php\">\/path\/to\/files<\/directory>\n<file>\/path\/to\/file<\/file>\n<\/exclude>\n<\/whitelist>\n<\/filter>\n\n<listeners>\n<listener class=\"MyListener\" file=\"\/optional\/path\/to\/MyListener.php\">\n<arguments>\n<array>\n<element key=\"0\">\n<string>Sebastian<\/string>\n<\/element>\n<\/array>\n<integer>22<\/integer>\n<string>April<\/string>\n<double>19.78<\/double>\n<null\/>\n<object class=\"stdClass\"\/>\n<file>MyRelativeFile.php<\/file>\n<directory>MyRelativeDir<\/directory>\n<\/arguments>\n<\/listener>\n<\/listeners>\n\n<logging>\n<log type=\"coverage-html\" target=\"\/tmp\/report\" lowUpperBound=\"50\" highLowerBound=\"90\"\/>\n<log type=\"coverage-clover\" target=\"\/tmp\/clover.xml\"\/>\n<log type=\"coverage-crap4j\" target=\"\/tmp\/crap.xml\" threshold=\"30\"\/>\n<log type=\"json\" target=\"\/tmp\/logfile.json\"\/>\n<log type=\"plain\" target=\"\/tmp\/logfile.txt\"\/>\n<log type=\"teamcity\" target=\"\/tmp\/logfile.txt\"\/>\n<log type=\"junit\" target=\"\/tmp\/logfile.xml\"\/>\n<log type=\"testdox-html\" target=\"\/tmp\/testdox.html\"\/>\n<log type=\"testdox-text\" target=\"\/tmp\/testdox.txt\"\/>\n<log type=\"testdox-xml\" target=\"\/tmp\/testdox.xml\"\/>\n<\/logging>\n\n<php>\n<includePath>.<\/includePath>\n<ini name=\"foo\" value=\"bar\"\/>\n<const name=\"foo\" value=\"bar\"\/>\n<var name=\"foo\" value=\"bar\"\/>\n<env name=\"foo\" value=\"bar\"\/>\n<post name=\"foo\" value=\"bar\"\/>\n<get name=\"foo\" value=\"bar\"\/>\n<cookie name=\"foo\" value=\"bar\"\/>\n<server name=\"foo\" value=\"bar\"\/>\n<files name=\"foo\" value=\"bar\"\/>\n<request name=\"foo\" value=\"bar\"\/>\n<\/php>\n<\/phpunit>\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":[],"docParameters":{"$filename":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Loads a PHPUnit configuration file.","long":""},"deprecated":false}}}},"PHPUnit\\Util\\ConfigurationGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\ErrorHandler":{"class":{"descriptions":{"short":"Error handler that converts PHP errors and warnings to exceptions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\Fileloader":{"class":{"descriptions":{"short":"Utility methods to load PHP sourcefiles.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\Filesystem":{"class":{"descriptions":{"short":"Filesystem helpers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\Filter":{"class":{"descriptions":{"short":"Utility class for code filtering.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\Getopt":{"class":{"descriptions":{"short":"Command-line options parsing class.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\GlobalState":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\InvalidArgumentHelper":{"class":{"descriptions":{"short":"Factory for PHPUnit_Framework_Exception objects that are used to describe\ninvalid arguments passed to a function or method.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\Log\\JUnit":{"class":{"descriptions":{"short":"A TestListener that generates a logfile of the test execution in XML markup.","long":"The XML markup used is the same as the one that is used by the JUnit Ant task."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$reportUselessTests"],"docParameters":{"$out":{"type":"mixed","description":null},"$reportUselessTests":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit\\Util\\Log\\TeamCity":{"class":{"descriptions":{"short":"A TestListener that generates a logfile of the test execution using the\nTeamCity format (for use with PhpStorm, for instance).","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$verbose","$colors","$debug","$numberOfColumns","$reverse"],"docParameters":{"$out":{"type":"mixed","description":null},"$verbose":{"type":"bool","description":null},"$colors":{"type":"string","description":null},"$debug":{"type":"bool","description":null},"$numberOfColumns":{"type":"int|string","description":null},"$reverse":{"type":"bool","description":null}},"throws":{"Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit\\Util\\PHP\\AbstractPhpProcess":{"class":{"descriptions":{"short":"Utility methods for PHP sub-processes.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates internal Runtime instance.","long":""},"deprecated":false}}}},"PHPUnit\\Util\\PHP\\DefaultPhpProcess":{"class":{"descriptions":{"short":"Default utility for PHP sub-processes.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates internal Runtime instance.","long":""},"deprecated":false}}}},"PHPUnit\\Util\\PHP\\WindowsPhpProcess":{"class":{"descriptions":{"short":"Windows utility for PHP sub-processes.","long":"Reading from STDOUT or STDERR hangs forever on Windows if the output is\ntoo large."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates internal Runtime instance.","long":""},"deprecated":false}}}},"PHPUnit\\Util\\Printer":{"class":{"descriptions":{"short":"Utility class that can print to STDOUT or write to a file.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out"],"docParameters":{"$out":{"type":"mixed","description":null}},"throws":{"Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHPUnit\\Util\\RegularExpression":{"class":{"descriptions":{"short":"Error handler that converts PHP errors and warnings to exceptions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\Test":{"class":{"descriptions":{"short":"Test helpers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\TestDox\\HtmlResultPrinter":{"class":{"descriptions":{"short":"Prints TestDox documentation in HTML format.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$groups","$excludeGroups"],"docParameters":{"$out":{"type":"resource","description":null},"$groups":{"type":"array","description":null},"$excludeGroups":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Util\\TestDox\\NamePrettifier":{"class":{"descriptions":{"short":"Prettifies class and method names for use in TestDox documentation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\TestDox\\ResultPrinter":{"class":{"descriptions":{"short":"Base class for printers of TestDox documentation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$groups","$excludeGroups"],"docParameters":{"$out":{"type":"resource","description":null},"$groups":{"type":"array","description":null},"$excludeGroups":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Util\\TestDox\\TextResultPrinter":{"class":{"descriptions":{"short":"Prints TestDox documentation in text format.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out","$groups","$excludeGroups"],"docParameters":{"$out":{"type":"resource","description":null},"$groups":{"type":"array","description":null},"$excludeGroups":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Util\\TestDox\\XmlResultPrinter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$out"],"docParameters":{"$out":{"type":"string|resource","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit\\Util\\Type":{"class":{"descriptions":{"short":"Utility class for textual type (and value) representation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit\\Util\\Xml":{"class":{"descriptions":{"short":"XML helpers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_BadMethodCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Builder_Identity":{"class":{"descriptions":{"short":"Builder interface for unique identifiers.","long":"Defines the interface for recording unique identifiers. The identifiers\ncan be used to define the invocation order of expectations. The expectation\nis recorded using id() and then defined in order using\nPHPUnit_Framework_MockObject_Builder_Match::after()."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Builder_InvocationMocker":{"class":{"descriptions":{"short":"Builder for mocked or stubbed invocations.","long":"Provides methods for building expectations without having to resort to\ninstantiating the various matchers manually. These methods also form a\nmore natural way of reading the expectation. This class should be together\nwith the test case PHPUnit_Framework_MockObject_TestCase."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$collection","$invocationMatcher","$configurableMethods"],"optionals":[],"docParameters":{"$collection":{"type":"PHPUnit_Framework_MockObject_Stub_MatcherCollection","description":null},"$invocationMatcher":{"type":"PHPUnit_Framework_MockObject_Matcher_Invocation","description":null},"$configurableMethods":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Builder_Match":{"class":{"descriptions":{"short":"Builder interface for invocation order matches.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Builder_MethodNameMatch":{"class":{"descriptions":{"short":"Builder interface for matcher of method names.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Builder_Namespace":{"class":{"descriptions":{"short":"Interface for builders which can register builders with a given identification.","long":"This interface relates to PHPUnit_Framework_MockObject_Builder_Identity."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Builder_ParametersMatch":{"class":{"descriptions":{"short":"Builder interface for parameter matchers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Builder_Stub":{"class":{"descriptions":{"short":"Builder interface for stubs which are actions replacing an invocation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Exception":{"class":{"descriptions":{"short":"Interface for exceptions used by PHPUnit_MockObject.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Generator":{"class":{"descriptions":{"short":"Mock Object Code Generator","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Invocation":{"class":{"descriptions":{"short":"Interface for invocations.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_InvocationMocker":{"class":{"descriptions":{"short":"Mocker for invocations which are sent from\nPHPUnit_Framework_MockObject_MockObject objects.","long":"Keeps track of all expectations and stubs as well as registering\nidentifications for builders."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$configurableMethods"],"optionals":[],"docParameters":{"$configurableMethods":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Invocation_Object":{"class":{"descriptions":{"short":"Represents a non-static invocation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className","$methodName","$parameters","$returnType","$object"],"optionals":["$cloneObjects"],"docParameters":{"$className":{"type":"string","description":null},"$methodName":{"type":"string","description":null},"$parameters":{"type":"array","description":null},"$returnType":{"type":"string","description":null},"$object":{"type":"object","description":null},"$cloneObjects":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Invocation_Static":{"class":{"descriptions":{"short":"Represents a static invocation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className","$methodName","$parameters","$returnType"],"optionals":["$cloneObjects"],"docParameters":{"$className":{"type":"string","description":null},"$methodName":{"type":"string","description":null},"$parameters":{"type":"array","description":null},"$returnType":{"type":"string","description":null},"$cloneObjects":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Invokable":{"class":{"descriptions":{"short":"Interface for classes which can be invoked.","long":"The invocation will be taken from a mock object and passed to an object\nof this class."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher":{"class":{"descriptions":{"short":"Main matcher which defines a full expectation using method, parameter and\ninvocation matchers.\nThis matcher encapsulates all the other matchers and allows the builder to\nset the specific matchers when the appropriate methods are called (once(),\nwhere() etc.).","long":"All properties are public so that they can easily be accessed by the builder."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$invocationMatcher"],"optionals":[],"docParameters":{"$invocationMatcher":{"type":"PHPUnit_Framework_MockObject_Matcher_Invocation","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method has been invoked zero or more\ntimes. This matcher will always match.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher_AnyParameters":{"class":{"descriptions":{"short":"Invocation matcher which allows any parameters to a method.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters":{"class":{"descriptions":{"short":"Invocation matcher which looks for sets of specific parameters in the invocations.","long":"Checks the parameters of the incoming invocations, the parameter list is\nchecked against the defined constraints in $parameters. If the constraint\nis met it will return true in matches().\n\nIt takes a list of match groups and and increases a call index after each invocation.\nSo the first invocation uses the first group of constraints, the second the next and so on."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parameterGroups"],"optionals":[],"docParameters":{"$parameterGroups":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_Invocation":{"class":{"descriptions":{"short":"Interface for classes which matches an invocation based on its\nmethod name, argument, order or call count.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method was invoked at a certain index.","long":"If the expected index number does not match the current invocation index it\nwill not match which means it skips all method and parameter matching. Only\nonce the index is reached will the method and parameter start matching and\nverifying.\n\nIf the index is never reached it will throw an exception in index."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sequenceIndex"],"optionals":[],"docParameters":{"$sequenceIndex":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method has been invoked at least\nN times.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$requiredInvocations"],"optionals":[],"docParameters":{"$requiredInvocations":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method has been invoked at least one\ntime.","long":"If the number of invocations is 0 it will throw an exception in verify."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method has been invoked at least\nN times.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$allowedInvocations"],"optionals":[],"docParameters":{"$allowedInvocations":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_InvokedCount":{"class":{"descriptions":{"short":"Invocation matcher which checks if a method has been invoked a certain amount\nof times.\nIf the number of invocations exceeds the value it will immediately throw an\nexception,\nIf the number is less it will later be checked in verify() and also throw an\nexception.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectedCount"],"optionals":[],"docParameters":{"$expectedCount":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_InvokedRecorder":{"class":{"descriptions":{"short":"Records invocations and provides convenience methods for checking them later\non.\nThis abstract class can be implemented by matchers which needs to check the\nnumber of times an invocation has occurred.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Matcher_MethodName":{"class":{"descriptions":{"short":"Invocation matcher which looks for a specific method name in the invocations.","long":"Checks the method name all incoming invocations, the name is checked against\nthe defined constraint $constraint. If the constraint is met it will return\ntrue in matches()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$constraint"],"optionals":[],"docParameters":{"":{"type":"Constraint|string","description":null}},"throws":{"Constraint":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_Parameters":{"class":{"descriptions":{"short":"Invocation matcher which looks for specific parameters in the invocations.","long":"Checks the parameters of all incoming invocations, the parameter list is\nchecked against the defined constraints in $parameters. If the constraint\nis met it will return true in matches()."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parameters"],"optionals":[],"docParameters":{"$parameters":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Matcher_StatelessInvocation":{"class":{"descriptions":{"short":"Invocation matcher which does not care about previous state from earlier\ninvocations.","long":"This abstract class can be implemented by matchers which does not care about\nstate but only the current run-time value of the invocation itself."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_MockBuilder":{"class":{"descriptions":{"short":"Implementation of the Builder pattern for Mock objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$testCase","$type"],"optionals":[],"docParameters":{"$testCase":{"type":"TestCase","description":null},"$type":{"type":"array|string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_MockObject":{"class":{"descriptions":{"short":"Interface for all mock objects which are generated by\nPHPUnit_Framework_MockObject_MockBuilder.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub":{"class":{"descriptions":{"short":"An object that stubs the process of a normal method for a mock object.","long":"The stub object will replace the code for the stubbed method and return a\nspecific value instead of the original value."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls":{"class":{"descriptions":{"short":"Stubs a method by returning a user-defined stack of values.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stack"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_Exception":{"class":{"descriptions":{"short":"Stubs a method by raising a user-defined exception.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$exception"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_MatcherCollection":{"class":{"descriptions":{"short":"Stubs a method by returning a user-defined value.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Stub_Return":{"class":{"descriptions":{"short":"Stubs a method by returning a user-defined value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_ReturnArgument":{"class":{"descriptions":{"short":"Stubs a method by returning an argument that was passed to the mocked method.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argumentIndex"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_ReturnCallback":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_ReturnReference":{"class":{"descriptions":{"short":"Stubs a method by returning a user-defined reference to a value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["&$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Stub_ReturnSelf":{"class":{"descriptions":{"short":"Stubs a method by returning the current object.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHPUnit_Framework_MockObject_Stub_ReturnValueMap":{"class":{"descriptions":{"short":"Stubs a method by returning a value from a map.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$valueMap"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHPUnit_Framework_MockObject_Verifiable":{"class":{"descriptions":{"short":"Interface for classes which must verify a given expectation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer":{"class":{"descriptions":{"short":"PHP_CodeSniffer tokenizes PHP code and detects violations of a\ndefined set of coding standards.","long":"Standards are specified by classes that implement the PHP_CodeSniffer_Sniff\ninterface. A sniff registers what token types it wishes to listen for, then\nPHP_CodeSniffer encounters that token, the sniff is invoked and passed\ninformation about where the token was found in the stack, and the token stack\nitself.\n\nSniff files and their containing class must be prefixed with Sniff, and\nhave an extension of .php.\n\nMultiple PHP_CodeSniffer operations can be performed by re-calling the\nprocess function with different parameters."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$verbosity","$tabWidth","$encoding","$interactive"],"docParameters":{"$verbosity":{"type":"int","description":"The verbosity level. 1: Print progress information. 2: Print tokenizer debug information. 3: Print sniff debug information."},"$tabWidth":{"type":"int","description":"The number of spaces each tab represents. If greater than zero, tabs will be replaced by spaces before testing each file."},"$encoding":{"type":"string","description":"The charset of the sniffed files. This is important for some reports that output with utf-8 encoding as you don't want it double encoding messages."},"$interactive":{"type":"bool","description":"If TRUE, will stop after each file with errors and wait for user input."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PHP_CodeSniffer object.","long":""},"deprecated":false}}}},"PHP_CodeSniffer_CLI":{"class":{"descriptions":{"short":"A class to process command line phpcs scripts.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_DocGenerators_Generator":{"class":{"descriptions":{"short":"The base class for all PHP_CodeSniffer documentation generators.","long":"Documentation generators are used to print documentation about code sniffs\nin a standard."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$standard"],"optionals":["$sniffs"],"docParameters":{"$standard":{"type":"string","description":"The name of the coding standard to generate docs for."},"$sniffs":{"type":"array","description":"An array of sniffs that we are limiting the generated docs to."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PHP_CodeSniffer_DocGenerators_Generator object.","long":""},"deprecated":false}}}},"PHP_CodeSniffer_DocGenerators_HTML":{"class":{"descriptions":{"short":"A doc generator that outputs documentation in one big HTML file.","long":"Output is in one large HTML file and is designed for you to style with\nyour own stylesheet. It contains a table of contents at the top with anchors\nto each sniff."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$standard"],"optionals":["$sniffs"],"docParameters":{"$standard":{"type":"string","description":"The name of the coding standard to generate docs for."},"$sniffs":{"type":"array","description":"An array of sniffs that we are limiting the generated docs to."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PHP_CodeSniffer_DocGenerators_Generator object.","long":""},"deprecated":false}}}},"PHP_CodeSniffer_DocGenerators_Markdown":{"class":{"descriptions":{"short":"A doc generator that outputs documentation in Markdown format.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$standard"],"optionals":["$sniffs"],"docParameters":{"$standard":{"type":"string","description":"The name of the coding standard to generate docs for."},"$sniffs":{"type":"array","description":"An array of sniffs that we are limiting the generated docs to."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PHP_CodeSniffer_DocGenerators_Generator object.","long":""},"deprecated":false}}}},"PHP_CodeSniffer_DocGenerators_Text":{"class":{"descriptions":{"short":"A doc generator that outputs text-based documentation.","long":"Output is designed to be displayed in a terminal and is wrapped to 100 characters."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$standard"],"optionals":["$sniffs"],"docParameters":{"$standard":{"type":"string","description":"The name of the coding standard to generate docs for."},"$sniffs":{"type":"array","description":"An array of sniffs that we are limiting the generated docs to."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PHP_CodeSniffer_DocGenerators_Generator object.","long":""},"deprecated":false}}}},"PHP_CodeSniffer_Exception":{"class":{"descriptions":{"short":"An exception thrown by PHP_CodeSniffer when it encounters an unrecoverable error.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHP_CodeSniffer_File":{"class":{"descriptions":{"short":"A PHP_CodeSniffer_File object represents a PHP source file and the tokens\nassociated with it.","long":"It provides a means for traversing the token stack, along with\nother token related operations. If a PHP_CodeSniffer_Sniff finds and error or\nwarning within a PHP_CodeSniffer_File, you can raise an error using the\naddError() or addWarning() methods.\n\n<b>Token Information<\/b>\n\nEach token within the stack contains information about itself:\n\n<code>\narray(\n'code'       => 301,       \/\/ the token type code (see token_get_all())\n'content'    => 'if',      \/\/ the token content\n'type'       => 'T_IF',    \/\/ the token name\n'line'       => 56,        \/\/ the line number when the token is located\n'column'     => 12,        \/\/ the column in the line where this token\n\/\/ starts (starts from 1)\n'level'      => 2          \/\/ the depth a token is within the scopes open\n'conditions' => array(     \/\/ a list of scope condition token\n\/\/ positions => codes that\n2 => 50,  \/\/ opened the scopes that this token exists\n9 => 353, \/\/ in (see conditional tokens section below)\n),\n);\n<\/code>\n\n<b>Conditional Tokens<\/b>\n\nIn addition to the standard token fields, conditions contain information to\ndetermine where their scope begins and ends:\n\n<code>\narray(\n'scope_condition' => 38, \/\/ the token position of the condition\n'scope_opener'    => 41, \/\/ the token position that started the scope\n'scope_closer'    => 70, \/\/ the token position that ended the scope\n);\n<\/code>\n\nThe condition, the scope opener and the scope closer each contain this\ninformation.\n\n<b>Parenthesis Tokens<\/b>\n\nEach parenthesis token (T_OPEN_PARENTHESIS and T_CLOSE_PARENTHESIS) has a\nreference to their opening and closing parenthesis, one being itself, the\nother being its opposite.\n\n<code>\narray(\n'parenthesis_opener' => 34,\n'parenthesis_closer' => 40,\n);\n<\/code>\n\nSome tokens can \"own\" a set of parenthesis. For example a T_FUNCTION token\nhas parenthesis around its argument list. These tokens also have the\nparenthesis_opener and and parenthesis_closer indices. Not all parenthesis\nhave owners, for example parenthesis used for arithmetic operations and\nfunction calls. The parenthesis tokens that have an owner have the following\nauxiliary array indices.\n\n<code>\narray(\n'parenthesis_opener' => 34,\n'parenthesis_closer' => 40,\n'parenthesis_owner'  => 33,\n);\n<\/code>\n\nEach token within a set of parenthesis also has an array index\n'nested_parenthesis' which is an array of the\nleft parenthesis => right parenthesis token positions.\n\n<code>\n'nested_parenthesis' => array(\n12 => 15\n11 => 14\n);\n<\/code>\n\n<b>Extended Tokens<\/b>\n\nPHP_CodeSniffer extends and augments some of the tokens created by\n<i>token_get_all()<\/i>. A full list of these tokens can be seen in the\n<i>Tokens.php<\/i> file."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file","$listeners","$ruleset","$phpcs"],"optionals":[],"docParameters":{"$file":{"type":"string","description":"The absolute path to the file to process."},"$listeners":{"type":"array(string)","description":"The initial listeners listening to processing of this file. to processing of this file."},"$ruleset":{"type":"array","description":"An array of rules from the ruleset.xml file. ruleset.xml file."},"$phpcs":{"type":"PHP_CodeSniffer","description":"The PHP_CodeSniffer object controlling this run. this run."}},"throws":{"PHP_CodeSniffer_Exception":"If the register() method does not return an array."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PHP_CodeSniffer_File.","long":""},"deprecated":false}}}},"PHP_CodeSniffer_Fixer":{"class":{"descriptions":{"short":"A helper class for fixing errors.","long":"Provides helper functions that act upon a token array and modify the file\ncontent."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Report":{"class":{"descriptions":{"short":"Represents a PHP_CodeSniffer report.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reporting":{"class":{"descriptions":{"short":"A class to manage reporting.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Cbf":{"class":{"descriptions":{"short":"CBF report for PHP_CodeSniffer.","long":"This report implements the various auto-fixing features of the\nPHPCBF script and is not intended (or allowed) to be selected as a\nreport from the command line.\n\nPHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Checkstyle":{"class":{"descriptions":{"short":"Checkstyle report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Csv":{"class":{"descriptions":{"short":"Csv report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Diff":{"class":{"descriptions":{"short":"Diff report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Emacs":{"class":{"descriptions":{"short":"Emacs report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Full":{"class":{"descriptions":{"short":"Full report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Gitblame":{"class":{"descriptions":{"short":"Gitblame report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Hgblame":{"class":{"descriptions":{"short":"Mercurial report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Info":{"class":{"descriptions":{"short":"Info report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Json":{"class":{"descriptions":{"short":"Json report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Junit":{"class":{"descriptions":{"short":"JUnit report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Notifysend":{"class":{"descriptions":{"short":"Notify-send report for PHP_CodeSniffer.","long":"Supported configuration parameters:\n- notifysend_path    - Full path to notify-send cli command\n- notifysend_timeout - Timeout in milliseconds\n- notifysend_showok  - Show \"ok, all fine\" messages (0\/1)"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Load configuration data.","long":""},"deprecated":false}}}},"PHP_CodeSniffer_Reports_Source":{"class":{"descriptions":{"short":"Source report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Summary":{"class":{"descriptions":{"short":"Summary report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Svnblame":{"class":{"descriptions":{"short":"Svnblame report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_VersionControl":{"class":{"descriptions":{"short":"Version control report base class for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Reports_Xml":{"class":{"descriptions":{"short":"Xml report for PHP_CodeSniffer.","long":"PHP version 5"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Sniff":{"class":{"descriptions":{"short":"Represents a PHP_CodeSniffer sniff for sniffing coding standards.","long":"A sniff registers what token types it wishes to listen for, then, when\nPHP_CodeSniffer encounters that token, the sniff is invoked and passed\ninformation about where the token was found in the stack, and the\nPHP_CodeSniffer file in which the token was found."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Standards_AbstractPatternSniff":{"class":{"descriptions":{"short":"Processes pattern strings and checks that the code conforms to the pattern.","long":"This test essentially checks that code is correctly formatted with whitespace."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$ignoreComments"],"docParameters":{"$ignoreComments":{"type":"boolean","description":"If true, comments will be ignored."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PHP_CodeSniffer_Standards_AbstractPatternSniff.","long":""},"deprecated":false}}}},"PHP_CodeSniffer_Standards_AbstractScopeSniff":{"class":{"descriptions":{"short":"An AbstractScopeTest allows for tests that extend from this class to\nlisten for tokens within a particular scope.","long":"Below is a test that listens to methods that exist only within classes:\n<code>\nclass ClassScopeTest extends PHP_CodeSniffer_Standards_AbstractScopeSniff\n{\npublic function __construct()\n{\nparent::__construct(array(T_CLASS), array(T_FUNCTION));\n}\n\nprotected function processTokenWithinScope(PHP_CodeSniffer_File $phpcsFile, $)\n{\n$className = $phpcsFile->getDeclarationName($currScope);\necho 'encountered a method within class '.$className;\n}\n}\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$scopeTokens","$tokens"],"optionals":["$listenOutside"],"docParameters":{"$scopeTokens":{"type":"array","description":"The type of scope the test wishes to listen to."},"$tokens":{"type":"array","description":"The tokens that the test wishes to listen to within the scope."},"$listenOutside":{"type":"boolean","description":"If true this test will also alert the extending class when a token is found outside the scope, by calling the processTokenOutsideScope method."}},"throws":{"PHP_CodeSniffer_Exception":"If the specified tokens array is empty."},"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a new AbstractScopeTest.","long":""},"deprecated":false}}}},"PHP_CodeSniffer_Standards_AbstractVariableSniff":{"class":{"descriptions":{"short":"A class to find T_VARIABLE tokens.","long":"This class can distinguish between normal T_VARIABLE tokens, and those tokens\nthat represent class members. If a class member is encountered, then the\nprocessMemberVar method is called so the extending class can process it. If\nthe token is found to be a normal T_VARIABLE token, then processVariable is\ncalled."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs an AbstractVariableTest.","long":""},"deprecated":false}}}},"PHP_CodeSniffer_Standards_IncorrectPatternException":{"class":{"descriptions":{"short":"An exception thrown if the pattern being processed is not supposed to be\nvalidating the code in question.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PHP_CodeSniffer_Tokenizers_CSS":{"class":{"descriptions":{"short":"Tokenizes CSS code.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Tokenizers_Comment":{"class":{"descriptions":{"short":"Tokenizes doc block comments.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Tokenizers_JS":{"class":{"descriptions":{"short":"Tokenizes JS code.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Tokenizers_PHP":{"class":{"descriptions":{"short":"Tokenizes PHP code.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_CodeSniffer_Tokens":{"class":{"descriptions":{"short":"The Tokens class contains weightings for tokens based on their\nprobability of occurrence in a file.","long":"The less the chance of a high occurrence of an arbitrary token, the higher\nthe weighting."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"A PHP_CodeSniffer_Tokens class cannot be constructed.","long":"Only static calls are allowed."},"deprecated":false}}}},"PHP_Timer":{"class":{"descriptions":{"short":"Utility class for timing.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_Token":{"class":{"descriptions":{"short":"A PHP token.","long":"@author    Sebastian Bergmann <sebastian@phpunit.de>\n@copyright Sebastian Bergmann <sebastian@phpunit.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_TokenWithScope":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_TokenWithScopeAndVisibility":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ABSTRACT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_AMPERSAND":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_AND_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ARRAY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ARRAY_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_AS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ASYNC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_AT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_AWAIT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BACKTICK":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BAD_CHARACTER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BOOLEAN_AND":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BOOLEAN_OR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BOOL_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_BREAK":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CALLABLE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CARET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CASE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CATCH":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CHARACTER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLASS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLASS_C":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLASS_NAME_CONSTANT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLONE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLOSE_BRACKET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLOSE_CURLY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLOSE_SQUARE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CLOSE_TAG":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_COALESCE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_COLON":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_COMMA":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_COMMENT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_COMPILER_HALT_OFFSET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CONCAT_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CONST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CONSTANT_ENCAPSED_STRING":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CONTINUE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_CURLY_OPEN":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DEC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DECLARE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DEFAULT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DIR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DIV":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DIV_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DNUMBER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOC_COMMENT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOLLAR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOLLAR_OPEN_CURLY_BRACES":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOUBLE_ARROW":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOUBLE_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOUBLE_COLON":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_DOUBLE_QUOTES":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ECHO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ELLIPSIS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ELSE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ELSEIF":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EMPTY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENCAPSED_AND_WHITESPACE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDDECLARE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDFOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDFOREACH":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDIF":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDSWITCH":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENDWHILE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_END_HEREDOC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ENUM":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EQUALS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EVAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EXCLAMATION_MARK":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EXIT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_EXTENDS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FILE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FINAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FINALLY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FOREACH":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FUNCTION":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_FUNC_C":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_GLOBAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_GOTO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_GT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_HALT_COMPILER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IF":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IMPLEMENTS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IN":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INCLUDE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INCLUDE_ONCE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INLINE_HTML":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INSTANCEOF":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INSTEADOF":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INTERFACE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_INT_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ISSET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_GREATER_OR_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_IDENTICAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_NOT_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_NOT_IDENTICAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_IS_SMALLER_OR_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_Includes":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_JOIN":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LAMBDA_ARROW":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LAMBDA_CP":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LAMBDA_OP":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LINE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LIST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LNUMBER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LOGICAL_AND":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LOGICAL_OR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LOGICAL_XOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_LT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_METHOD_C":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_MINUS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_MINUS_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_MOD_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_MULT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_MUL_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NAMESPACE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NEW":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NS_C":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NS_SEPARATOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_NUM_STRING":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OBJECT_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OBJECT_OPERATOR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_ONUMBER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OPEN_BRACKET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OPEN_CURLY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OPEN_SQUARE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OPEN_TAG":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OPEN_TAG_WITH_ECHO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_OR_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PAAMAYIM_NEKUDOTAYIM":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PERCENT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PIPE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PLUS":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PLUS_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_POW":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_POW_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PRINT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PRIVATE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PROTECTED":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_PUBLIC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_QUESTION_MARK":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_REQUIRE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_REQUIRE_ONCE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_RETURN":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SEMICOLON":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SHAPE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SL_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SPACESHIP":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SR_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_START_HEREDOC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_STATIC":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_STRING":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_STRING_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_STRING_VARNAME":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SUPER":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_SWITCH":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_Stream":{"class":{"descriptions":{"short":"A stream of PHP tokens.","long":"@author    Sebastian Bergmann <sebastian@phpunit.de>\n@copyright Sebastian Bergmann <sebastian@phpunit.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sourceCode"],"optionals":[],"docParameters":{"$sourceCode":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_Stream_CachingFactory":{"class":{"descriptions":{"short":"A caching factory for token stream objects.","long":"@author    Sebastian Bergmann <sebastian@phpunit.de>\n@copyright Sebastian Bergmann <sebastian@phpunit.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PHP_Token_THROW":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TILDE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TRAIT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TRAIT_C":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TRY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TYPE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TYPELIST_GT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_TYPELIST_LT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_UNSET":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_UNSET_CAST":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_USE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_USE_FUNCTION":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_VAR":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_VARIABLE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_WHERE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_WHILE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_WHITESPACE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_ATTRIBUTE":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_CATEGORY":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_CATEGORY_LABEL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_CHILDREN":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_LABEL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_REQUIRED":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_TAG_GT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_TAG_LT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XHP_TEXT":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_XOR_EQUAL":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_YIELD":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PHP_Token_YIELD_FROM":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text","$line","$tokenStream","$id"],"optionals":[],"docParameters":{"$text":{"type":"string","description":null},"$line":{"type":"integer","description":null},"$tokenStream":{"type":"PHP_Token_Stream","description":null},"$id":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"PSR1_Sniffs_Classes_ClassDeclarationSniff":{"class":{"descriptions":{"short":"Class Declaration Test.","long":"Checks the declaration of the class is correct."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR1_Sniffs_Files_SideEffectsSniff":{"class":{"descriptions":{"short":"PSR1_Sniffs_Files_SideEffectsSniff.","long":"Ensures a file declare new symbols and causes no other side effects, or executes\nlogic with side effects, but not both."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR1_Sniffs_Methods_CamelCapsMethodNameSniff":{"class":{"descriptions":{"short":"PSR1_Sniffs_Methods_CamelCapsMethodNameSniff.","long":"Ensures method names are defined using camel case."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a Generic_Sniffs_NamingConventions_CamelCapsFunctionNameSniff.","long":""},"deprecated":false}}}},"PSR2_Sniffs_Classes_ClassDeclarationSniff":{"class":{"descriptions":{"short":"Class Declaration Test.","long":"Checks the declaration of the class and its inheritance is correct."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR2_Sniffs_Classes_PropertyDeclarationSniff":{"class":{"descriptions":{"short":"Verifies that properties are declared correctly.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs an AbstractVariableTest.","long":""},"deprecated":false}}}},"PSR2_Sniffs_ControlStructures_ControlStructureSpacingSniff":{"class":{"descriptions":{"short":"PSR2_Sniffs_WhiteSpace_ControlStructureSpacingSniff.","long":"Checks that control structures have the correct spacing around brackets."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR2_Sniffs_ControlStructures_ElseIfDeclarationSniff":{"class":{"descriptions":{"short":"PSR2_Sniffs_ControlStructures_ElseIfDeclarationSniff.","long":"Verifies that there are no else if statements. Elseif should be used instead."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR2_Sniffs_ControlStructures_SwitchDeclarationSniff":{"class":{"descriptions":{"short":"PSR2_Sniffs_ControlStructures_SwitchDeclarationSniff.","long":"Ensures all switch statements are defined correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR2_Sniffs_Files_ClosingTagSniff":{"class":{"descriptions":{"short":"PSR2_Sniffs_Files_LineEndingsSniff.","long":"Checks that the file does not end with a closing tag."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR2_Sniffs_Files_EndFileNewlineSniff":{"class":{"descriptions":{"short":"Generic_Sniffs_Files_EndFileNewlineSniff.","long":"Ensures the file ends with a newline character."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR2_Sniffs_Methods_FunctionCallSignatureSniff":{"class":{"descriptions":{"short":"PSR2_Sniffs_Methods_FunctionCallSignatureSniff.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR2_Sniffs_Methods_FunctionClosingBraceSniff":{"class":{"descriptions":{"short":"PSR2_Sniffs_Methods_FunctionClosingBraceSniff.","long":"Checks that the closing brace of a function goes directly after the body."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR2_Sniffs_Methods_MethodDeclarationSniff":{"class":{"descriptions":{"short":"PSR2_Sniffs_Methods_MethodDeclarationSniff.","long":"Checks that the method declaration is correct."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a Squiz_Sniffs_Scope_MethodScopeSniff.","long":""},"deprecated":false}}}},"PSR2_Sniffs_Namespaces_NamespaceDeclarationSniff":{"class":{"descriptions":{"short":"PSR2_Sniffs_Namespaces_NamespaceDeclarationSniff.","long":"Ensures namespaces are declared correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PSR2_Sniffs_Namespaces_UseDeclarationSniff":{"class":{"descriptions":{"short":"PSR2_Sniffs_Namespaces_UseDeclarationSniff.","long":"Ensures USE blocks are declared correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Argument":{"class":{"descriptions":{"short":"Argument tokens shortcuts.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Argument\\ArgumentsWildcard":{"class":{"descriptions":{"short":"Arguments wildcarding.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$arguments"],"optionals":[],"docParameters":{"$arguments":{"type":"array","description":"Array of argument tokens or values"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes wildcard.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\AnyValueToken":{"class":{"descriptions":{"short":"Any single value token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Argument\\Token\\AnyValuesToken":{"class":{"descriptions":{"short":"Any values token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Argument\\Token\\ApproximateValueToken":{"class":{"descriptions":{"short":"Approximate value token","long":"@author Daniel Leech <daniel@dantleech.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$precision"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\ArrayCountToken":{"class":{"descriptions":{"short":"Array elements count token.","long":"@author Boris Mikhaylov <kaguxmail@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\ArrayEntryToken":{"class":{"descriptions":{"short":"Array entry token.","long":"@author Boris Mikhaylov <kaguxmail@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$key","$value"],"optionals":[],"docParameters":{"$key":{"type":"mixed","description":"exact value or token"},"$value":{"type":"mixed","description":"exact value or token"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\ArrayEveryEntryToken":{"class":{"descriptions":{"short":"Array every entry token.","long":"@author Adrien Brault <adrien.brault@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"mixed","description":"exact value or token"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\CallbackToken":{"class":{"descriptions":{"short":"Callback-verified token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":null}},"throws":{"\\Prophecy\\Exception\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Initializes token.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\ExactValueToken":{"class":{"descriptions":{"short":"Exact value token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$util","$comparatorFactory"],"docParameters":{"$value":{"type":"mixed","description":null},"$util":{"type":"StringUtil","description":null},"$comparatorFactory":{"type":"ComparatorFactory","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes token.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\IdenticalValueToken":{"class":{"descriptions":{"short":"Identical value token.","long":"@author Florian Voutzinos <florian@voutzinos.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":["$util"],"docParameters":{"$value":{"type":"mixed","description":null},"$util":{"type":"StringUtil","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes token.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\LogicalAndToken":{"class":{"descriptions":{"short":"Logical AND token.","long":"@author Boris Mikhaylov <kaguxmail@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$arguments"],"optionals":[],"docParameters":{"$arguments":{"type":"array","description":"exact values or tokens"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\LogicalNotToken":{"class":{"descriptions":{"short":"Logical NOT token.","long":"@author Boris Mikhaylov <kaguxmail@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"mixed","description":"exact value or token"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\ObjectStateToken":{"class":{"descriptions":{"short":"Object state-checker token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$methodName","$value"],"optionals":["$util","$comparatorFactory"],"docParameters":{"$methodName":{"type":"string","description":null},"$value":{"type":"mixed","description":"Expected return value"},"$util":{"type":"null|StringUtil","description":null},"$comparatorFactory":{"type":"ComparatorFactory","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes token.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\StringContainsToken":{"class":{"descriptions":{"short":"String contains token.","long":"@author Peter Mitchell <pete@peterjmit.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes token.","long":""},"deprecated":false}}}},"Prophecy\\Argument\\Token\\TokenInterface":{"class":{"descriptions":{"short":"Argument token interface.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Argument\\Token\\TypeToken":{"class":{"descriptions":{"short":"Value type token.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":[],"docParameters":{"$type":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Call\\Call":{"class":{"descriptions":{"short":"Call object.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$methodName","$arguments","$returnValue","$exception","$file","$line"],"optionals":[],"docParameters":{"$methodName":{"type":"string","description":null},"$arguments":{"type":"array","description":null},"$returnValue":{"type":"mixed","description":null},"$exception":{"type":"Exception","description":null},"$file":{"type":"null|string","description":null},"$line":{"type":"null|int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes call.","long":""},"deprecated":false}}}},"Prophecy\\Call\\CallCenter":{"class":{"descriptions":{"short":"Calls receiver & manager.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$util"],"docParameters":{"$util":{"type":"StringUtil","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes call center.","long":""},"deprecated":false}}}},"Prophecy\\Comparator\\ClosureComparator":{"class":{"descriptions":{"short":"Closure comparator.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Comparator\\Factory":{"class":{"descriptions":{"short":"Prophecy comparator factory.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a new factory.","long":""},"deprecated":false}}}},"Prophecy\\Comparator\\ProphecyComparator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\CachedDoubler":{"class":{"descriptions":{"short":"Cached class doubler.\nPrevents mirroring\/creation of the same structure twice.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$mirror","$creator","$namer"],"docParameters":{"$mirror":{"type":"ClassMirror","description":null},"$creator":{"type":"ClassCreator","description":null},"$namer":{"type":"NameGenerator","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes doubler.","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\ClassPatch\\ClassPatchInterface":{"class":{"descriptions":{"short":"Class patch interface.\nClass patches extend doubles functionality or help\nProphecy to avoid some internal PHP bugs.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\DisableConstructorPatch":{"class":{"descriptions":{"short":"Disable constructor.\nMakes all constructor arguments optional.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\HhvmExceptionPatch":{"class":{"descriptions":{"short":"Exception patch for HHVM to remove the stubs from special methods","long":"@author Christophe Coevoet <stof@notk.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\KeywordPatch":{"class":{"descriptions":{"short":"Remove method functionality from the double which will clash with php keywords.","long":"@author Milan Magudia <milan@magudia.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\MagicCallPatch":{"class":{"descriptions":{"short":"Discover Magical API using \"@method\" PHPDoc format.","long":"@author Thomas Tourlourat <thomas@tourlourat.com>\n@author K\u00e9vin Dunglas <dunglas@gmail.com>\n@author Th\u00e9o FIDRY <theo.fidry@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$tagRetriever"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\ClassPatch\\ProphecySubjectPatch":{"class":{"descriptions":{"short":"Add Prophecy functionality to the double.\nThis is a core class patch for Prophecy.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\ReflectionClassNewInstancePatch":{"class":{"descriptions":{"short":"ReflectionClass::newInstance patch.\nMakes first argument of newInstance optional, since it works but signature is misleading","long":"@author Florian Klein <florian.klein@free.fr>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\SplFileInfoPatch":{"class":{"descriptions":{"short":"SplFileInfo patch.\nMakes SplFileInfo and derivative classes usable with Prophecy.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\ClassPatch\\TraversablePatch":{"class":{"descriptions":{"short":"Traversable interface patch.\nForces classes that implement interfaces, that extend Traversable to also implement Iterator.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\DoubleInterface":{"class":{"descriptions":{"short":"Core double interface.\nAll doubled classes will implement this one.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\Doubler":{"class":{"descriptions":{"short":"Cached class doubler.\nPrevents mirroring\/creation of the same structure twice.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$mirror","$creator","$namer"],"docParameters":{"$mirror":{"type":"ClassMirror","description":null},"$creator":{"type":"ClassCreator","description":null},"$namer":{"type":"NameGenerator","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes doubler.","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\Generator\\ClassCodeGenerator":{"class":{"descriptions":{"short":"Class code creator.\nGenerates PHP code for specific class node tree.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\Generator\\ClassCreator":{"class":{"descriptions":{"short":"Class creator.\nCreates specific class in current environment.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$generator"],"docParameters":{"$generator":{"type":"ClassCodeGenerator","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes creator.","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\Generator\\ClassMirror":{"class":{"descriptions":{"short":"Class mirror.\nCore doubler class. Mirrors specific class and\/or interfaces into class node tree.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\Generator\\Node\\ArgumentNode":{"class":{"descriptions":{"short":"Argument node.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\Generator\\Node\\ClassNode":{"class":{"descriptions":{"short":"Class node.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\Generator\\Node\\MethodNode":{"class":{"descriptions":{"short":"Method node.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$code"],"docParameters":{"$name":{"type":"string","description":null},"$code":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\Generator\\ReflectionInterface":{"class":{"descriptions":{"short":"Reflection interface.\nAll reflected classes implement this interface.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Doubler\\LazyDouble":{"class":{"descriptions":{"short":"Lazy double.\nGives simple interface to describe double before creating it.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$doubler"],"optionals":[],"docParameters":{"$doubler":{"type":"Doubler","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes lazy double.","long":""},"deprecated":false}}}},"Prophecy\\Doubler\\NameGenerator":{"class":{"descriptions":{"short":"Name generator.\nGenerates classname for double.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Exception\\Call\\UnexpectedCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$objectProphecy","$methodName","$arguments"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\ClassCreatorException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$node"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\ClassMirrorException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$class"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\ClassNotFoundException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$classname"],"optionals":[],"docParameters":{"$message":{"type":"string","description":null},"$classname":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\DoubleException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\DoublerException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Exception\\Doubler\\InterfaceNotFoundException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$classname"],"optionals":[],"docParameters":{"$message":{"type":"string","description":null},"$classname":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\MethodNotExtendableException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$className","$methodName"],"optionals":[],"docParameters":{"$message":{"type":"string","description":null},"$className":{"type":"string","description":null},"$methodName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\MethodNotFoundException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$classname","$methodName"],"optionals":["$arguments"],"docParameters":{"$message":{"type":"string","description":null},"$classname":{"type":"string","description":null},"$methodName":{"type":"string","description":null},"$arguments":{"type":"null|Argument\\ArgumentsWildcard|array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Doubler\\ReturnByReferenceException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$classname","$methodName"],"optionals":[],"docParameters":{"$message":{"type":"string","description":null},"$classname":{"type":"string","description":null},"$methodName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Exception":{"class":{"descriptions":{"short":"Core Prophecy exception interface.\nAll Prophecy exceptions implement it.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Exception\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prediction\\AggregateException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prediction\\FailedPredictionException":{"class":{"descriptions":{"short":"Basic failed prediction exception.\nUse it for custom prediction failures.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prediction\\NoCallsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$methodProphecy"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prediction\\PredictionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Exception\\Prediction\\UnexpectedCallsCountException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$methodProphecy","$count","$calls"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prediction\\UnexpectedCallsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$methodProphecy","$calls"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prophecy\\MethodProphecyException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$methodProphecy"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prophecy\\ObjectProphecyException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$objectProphecy"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\Exception\\Prophecy\\ProphecyException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\PhpDocumentor\\ClassAndInterfaceTagRetriever":{"class":{"descriptions":{"short":"@author Th\u00e9o FIDRY <theo.fidry@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$classRetriever"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\PhpDocumentor\\ClassTagRetriever":{"class":{"descriptions":{"short":"@author Th\u00e9o FIDRY <theo.fidry@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Prophecy\\PhpDocumentor\\LegacyClassTagRetriever":{"class":{"descriptions":{"short":"@author Th\u00e9o FIDRY <theo.fidry@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\PhpDocumentor\\MethodTagRetrieverInterface":{"class":{"descriptions":{"short":"@author Th\u00e9o FIDRY <theo.fidry@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Prediction\\CallPrediction":{"class":{"descriptions":{"short":"Call prediction.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$util"],"docParameters":{"$util":{"type":"StringUtil","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes prediction.","long":""},"deprecated":false}}}},"Prophecy\\Prediction\\CallTimesPrediction":{"class":{"descriptions":{"short":"Prediction interface.\nPredictions are logical test blocks, tied to `should...` keyword.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$times"],"optionals":["$util"],"docParameters":{"$times":{"type":"int","description":null},"$util":{"type":"StringUtil","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes prediction.","long":""},"deprecated":false}}}},"Prophecy\\Prediction\\CallbackPrediction":{"class":{"descriptions":{"short":"Callback prediction.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":"Custom callback"}},"throws":{"\\Prophecy\\Exception\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Initializes callback prediction.","long":""},"deprecated":false}}}},"Prophecy\\Prediction\\NoCallsPrediction":{"class":{"descriptions":{"short":"No calls prediction.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$util"],"docParameters":{"$util":{"type":"null|StringUtil","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes prediction.","long":""},"deprecated":false}}}},"Prophecy\\Prediction\\PredictionInterface":{"class":{"descriptions":{"short":"Prediction interface.\nPredictions are logical test blocks, tied to `should...` keyword.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Promise\\CallbackPromise":{"class":{"descriptions":{"short":"Callback promise.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":"Custom callback"}},"throws":{"\\Prophecy\\Exception\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Initializes callback promise.","long":""},"deprecated":false}}}},"Prophecy\\Promise\\PromiseInterface":{"class":{"descriptions":{"short":"Promise interface.\nPromises are logical blocks, tied to `will...` keyword.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Promise\\ReturnArgumentPromise":{"class":{"descriptions":{"short":"Return argument promise.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$index"],"docParameters":{"$index":{"type":"int","description":"The zero-indexed number of the argument to return"}},"throws":{"\\Prophecy\\Exception\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Initializes callback promise.","long":""},"deprecated":false}}}},"Prophecy\\Promise\\ReturnPromise":{"class":{"descriptions":{"short":"Return promise.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$returnValues"],"optionals":[],"docParameters":{"$returnValues":{"type":"array","description":"Array of values"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes promise.","long":""},"deprecated":false}}}},"Prophecy\\Promise\\ThrowPromise":{"class":{"descriptions":{"short":"Throw promise.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$exception"],"optionals":[],"docParameters":{"$exception":{"type":"string|\\Exception","description":"Exception class name or instance"}},"throws":{"\\Prophecy\\Exception\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Initializes promise.","long":""},"deprecated":false}}}},"Prophecy\\Prophecy\\MethodProphecy":{"class":{"descriptions":{"short":"Method prophecy.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$objectProphecy","$methodName"],"optionals":["$arguments"],"docParameters":{"$objectProphecy":{"type":"ObjectProphecy","description":null},"$methodName":{"type":"string","description":null},"$arguments":{"type":"null|Argument\\ArgumentsWildcard|array","description":null}},"throws":{"\\Prophecy\\Exception\\Doubler\\MethodNotFoundException":"If method not found"},"return":{"type":"self","description":null},"descriptions":{"short":"Initializes method prophecy.","long":""},"deprecated":false}}}},"Prophecy\\Prophecy\\ObjectProphecy":{"class":{"descriptions":{"short":"Object prophecy.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$lazyDouble"],"optionals":["$callCenter","$revealer","$comparatorFactory"],"docParameters":{"$lazyDouble":{"type":"LazyDouble","description":null},"$callCenter":{"type":"CallCenter","description":null},"$revealer":{"type":"RevealerInterface","description":null},"$comparatorFactory":{"type":"ComparatorFactory","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes object prophecy.","long":""},"deprecated":false}}}},"Prophecy\\Prophecy\\ProphecyInterface":{"class":{"descriptions":{"short":"Core Prophecy interface.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Prophecy\\ProphecySubjectInterface":{"class":{"descriptions":{"short":"Controllable doubles interface.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Prophecy\\Revealer":{"class":{"descriptions":{"short":"Basic prophecies revealer.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Prophecy\\RevealerInterface":{"class":{"descriptions":{"short":"Prophecies revealer interface.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Prophet":{"class":{"descriptions":{"short":"Prophet creates prophecies.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$doubler","$revealer","$util"],"docParameters":{"$doubler":{"type":"null|Doubler","description":null},"$revealer":{"type":"null|RevealerInterface","description":null},"$util":{"type":"null|StringUtil","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes Prophet.","long":""},"deprecated":false}}}},"Prophecy\\Util\\ExportUtil":{"class":{"descriptions":{"short":"This class is a modification from sebastianbergmann\/exporter","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Prophecy\\Util\\StringUtil":{"class":{"descriptions":{"short":"String utility.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\MessageInterface":{"class":{"descriptions":{"short":"HTTP messages consist of requests from a client to a server and responses\nfrom a server to a client. This interface defines the methods common to\neach.","long":"Messages are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\RequestInterface":{"class":{"descriptions":{"short":"Representation of an outgoing, client-side request.","long":"Per the HTTP specification, this interface includes properties for\neach of the following:\n\n- Protocol version\n- HTTP method\n- URI\n- Headers\n- Message body\n\nDuring construction, implementations MUST attempt to set the Host header from\na provided URI if no Host header is provided.\n\nRequests are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\ResponseInterface":{"class":{"descriptions":{"short":"Representation of an outgoing, server-side response.","long":"Per the HTTP specification, this interface includes properties for\neach of the following:\n\n- Protocol version\n- Status code and reason phrase\n- Headers\n- Message body\n\nResponses are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\ServerRequestInterface":{"class":{"descriptions":{"short":"Representation of an incoming, server-side HTTP request.","long":"Per the HTTP specification, this interface includes properties for\neach of the following:\n\n- Protocol version\n- HTTP method\n- URI\n- Headers\n- Message body\n\nAdditionally, it encapsulates all data as it has arrived to the\napplication from the CGI and\/or PHP environment, including:\n\n- The values represented in $_SERVER.\n- Any cookies provided (generally via $_COOKIE)\n- Query string arguments (generally via $_GET, or as parsed via parse_str())\n- Upload files, if any (as represented by $_FILES)\n- Deserialized body parameters (generally from $_POST)\n\n$_SERVER values MUST be treated as immutable, as they represent application\nstate at the time of request; as such, no methods are provided to allow\nmodification of those values. The other values provide such methods, as they\ncan be restored from $_SERVER or the request body, and may need treatment\nduring the application (e.g., body parameters may be deserialized based on\ncontent type).\n\nAdditionally, this interface recognizes the utility of introspecting a\nrequest to derive and match additional parameters (e.g., via URI path\nmatching, decrypting cookie values, deserializing non-form-encoded body\ncontent, matching authorization headers to users, etc). These parameters\nare stored in an \"attributes\" property.\n\nRequests are considered immutable; all methods that might change state MUST\nbe implemented such that they retain the internal state of the current\nmessage and return an instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\StreamInterface":{"class":{"descriptions":{"short":"Describes a data stream.","long":"Typically, an instance will wrap a PHP stream; this interface provides\na wrapper around the most common operations, including serialization of\nthe entire stream to a string."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\UploadedFileInterface":{"class":{"descriptions":{"short":"Value object representing a file uploaded through an HTTP request.","long":"Instances of this interface are considered immutable; all methods that\nmight change state MUST be implemented such that they retain the internal\nstate of the current instance and return an instance that contains the\nchanged state."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Http\\Message\\UriInterface":{"class":{"descriptions":{"short":"Value object representing a URI.","long":"This interface is meant to represent URIs according to RFC 3986 and to\nprovide methods for most common operations. Additional functionality for\nworking with URIs can be provided on top of the interface or externally.\nIts primary use is for HTTP requests, but may also be used in other\ncontexts.\n\nInstances of this interface are considered immutable; all methods that\nmight change state MUST be implemented such that they retain the internal\nstate of the current instance and return an instance that contains the\nchanged state.\n\nTypically the Host header will be also be present in the request message.\nFor server-side requests, the scheme will typically be discoverable in the\nserver parameters."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\AbstractLogger":{"class":{"descriptions":{"short":"This is a simple Logger implementation that other Loggers can inherit from.","long":"It simply delegates all log-level-specific methods to the `log` method to\nreduce boilerplate code that a simple Logger that does the same thing with\nmessages regardless of the error level has to implement."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Psr\\Log\\LogLevel":{"class":{"descriptions":{"short":"Describes log levels.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerAwareInterface":{"class":{"descriptions":{"short":"Describes a logger-aware instance.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerAwareTrait":{"class":{"descriptions":{"short":"Basic Implementation of LoggerAwareInterface.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerInterface":{"class":{"descriptions":{"short":"Describes a logger instance.","long":"The message MUST be a string or object implementing __toString().\n\nThe message MAY contain placeholders in the form: {foo} where foo\nwill be replaced by the context data in key \"foo\".\n\nThe context array can contain arbitrary data. The only assumption that\ncan be made by implementors is that if an Exception instance is given\nto produce a stack trace, it MUST be in a key named \"exception\".\n\nSee https:\/\/github.com\/php-fig\/fig-standards\/blob\/master\/accepted\/PSR-3-logger-interface.md\nfor the full interface specification."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerTrait":{"class":{"descriptions":{"short":"This is a simple Logger trait that classes unable to extend AbstractLogger\n(because they extend another class, etc) can include.","long":"It simply delegates all log-level-specific methods to the `log` method to\nreduce boilerplate code that a simple Logger that does the same thing with\nmessages regardless of the error level has to implement."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\NullLogger":{"class":{"descriptions":{"short":"This Logger can be used to avoid conditional log calls.","long":"Logging should always be optional, and if no logger is provided to your\nlibrary creating a NullLogger instance to have something to throw logs at\nis a good way to avoid littering your code with `if ($this->logger) { }`\nblocks."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\CodeCoverage":{"class":{"descriptions":{"short":"Provides collection functionality for PHP code coverage information.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$driver","$filter"],"docParameters":{"$driver":{"type":"Driver","description":null},"$filter":{"type":"Filter","description":null}},"throws":{"RuntimeException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\CoveredCodeNotExecutedException":{"class":{"descriptions":{"short":"Exception that is raised when covered code is not executed.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Driver\\Driver":{"class":{"descriptions":{"short":"Interface for code coverage drivers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Driver\\HHVM":{"class":{"descriptions":{"short":"Driver for HHVM's code coverage functionality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Driver\\PHPDBG":{"class":{"descriptions":{"short":"Driver for PHPDBG's code coverage functionality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Driver\\Xdebug":{"class":{"descriptions":{"short":"Driver for Xdebug's code coverage functionality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Exception":{"class":{"descriptions":{"short":"Exception interface for php-code-coverage component.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Filter":{"class":{"descriptions":{"short":"Filter for whitelisting of code coverage information.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\MissingCoversAnnotationException":{"class":{"descriptions":{"short":"Exception that is raised when @covers must be used but is not.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Node\\AbstractNode":{"class":{"descriptions":{"short":"Base class for nodes in the code coverage information tree.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$parent"],"docParameters":{"$name":{"type":"string","description":null},"$parent":{"type":"AbstractNode","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Node\\Builder":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Node\\Directory":{"class":{"descriptions":{"short":"Represents a directory in the code coverage information tree.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$parent"],"docParameters":{"$name":{"type":"string","description":null},"$parent":{"type":"AbstractNode","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Node\\File":{"class":{"descriptions":{"short":"Represents a file in the code coverage information tree.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$parent","$coverageData","$testData","$cacheTokens"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null},"$parent":{"type":"AbstractNode","description":null},"$coverageData":{"type":"array","description":null},"$testData":{"type":"array","description":null},"$cacheTokens":{"type":"bool","description":null}},"throws":{"InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Node\\Iterator":{"class":{"descriptions":{"short":"Recursive iterator for node object graphs.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$node"],"optionals":[],"docParameters":{"$node":{"type":"Directory","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Clover":{"class":{"descriptions":{"short":"Generates a Clover XML logfile from a code coverage object.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Report\\Crap4j":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$threshold"],"docParameters":{"$threshold":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Html\\Dashboard":{"class":{"descriptions":{"short":"Renders the dashboard for a directory node.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templatePath","$generator","$date","$lowUpperBound","$highLowerBound"],"optionals":[],"docParameters":{"$templatePath":{"type":"string","description":null},"$generator":{"type":"string","description":null},"$date":{"type":"string","description":null},"$lowUpperBound":{"type":"int","description":null},"$highLowerBound":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Html\\Directory":{"class":{"descriptions":{"short":"Renders a directory node.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templatePath","$generator","$date","$lowUpperBound","$highLowerBound"],"optionals":[],"docParameters":{"$templatePath":{"type":"string","description":null},"$generator":{"type":"string","description":null},"$date":{"type":"string","description":null},"$lowUpperBound":{"type":"int","description":null},"$highLowerBound":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Html\\Facade":{"class":{"descriptions":{"short":"Generates an HTML report from a code coverage object.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$lowUpperBound","$highLowerBound","$generator"],"docParameters":{"$lowUpperBound":{"type":"int","description":null},"$highLowerBound":{"type":"int","description":null},"$generator":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Html\\File":{"class":{"descriptions":{"short":"Renders a file node.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templatePath","$generator","$date","$lowUpperBound","$highLowerBound"],"optionals":[],"docParameters":{"$templatePath":{"type":"string","description":null},"$generator":{"type":"string","description":null},"$date":{"type":"string","description":null},"$lowUpperBound":{"type":"int","description":null},"$highLowerBound":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Html\\Renderer":{"class":{"descriptions":{"short":"Base class for node renderers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$templatePath","$generator","$date","$lowUpperBound","$highLowerBound"],"optionals":[],"docParameters":{"$templatePath":{"type":"string","description":null},"$generator":{"type":"string","description":null},"$date":{"type":"string","description":null},"$lowUpperBound":{"type":"int","description":null},"$highLowerBound":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\PHP":{"class":{"descriptions":{"short":"Uses var_export() to write a SebastianBergmann\\CodeCoverage\\CodeCoverage object to a file.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Report\\Text":{"class":{"descriptions":{"short":"Generates human readable output from a code coverage object.","long":"The output gets put into a text file our written to the CLI."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$lowUpperBound","$highLowerBound","$showUncoveredFiles","$showOnlySummary"],"docParameters":{"$lowUpperBound":{"type":"int","description":null},"$highLowerBound":{"type":"int","description":null},"$showUncoveredFiles":{"type":"bool","description":null},"$showOnlySummary":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Coverage":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context","$line"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Directory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Facade":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\File":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Method":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Node":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Project":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Report":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Tests":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Totals":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$container"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Report\\Xml\\Unit":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$context","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\UnintentionallyCoveredCodeException":{"class":{"descriptions":{"short":"Exception that is raised when code is unintentionally covered.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$unintentionallyCoveredUnits"],"optionals":[],"docParameters":{"$unintentionallyCoveredUnits":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\CodeCoverage\\Util":{"class":{"descriptions":{"short":"Utility methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\CodeUnitReverseLookup\\Wizard":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Comparator\\ArrayComparator":{"class":{"descriptions":{"short":"Compares arrays for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\Comparator":{"class":{"descriptions":{"short":"Abstract base class for comparators which compare values for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\ComparisonFailure":{"class":{"descriptions":{"short":"Thrown when an assertion for string equality failed.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expected","$actual","$expectedAsString","$actualAsString"],"optionals":["$identical","$message"],"docParameters":{"$expected":{"type":"mixed","description":"Expected value retrieved."},"$actual":{"type":"mixed","description":"Actual value retrieved."},"$expectedAsString":{"type":"string","description":null},"$actualAsString":{"type":"string","description":null},"$identical":{"type":"bool","description":null},"$message":{"type":"string","description":"A string which is prefixed on all returned lines in the difference output."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initialises with the expected value and the actual value.","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\DOMNodeComparator":{"class":{"descriptions":{"short":"Compares DOMNode instances for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\DateTimeComparator":{"class":{"descriptions":{"short":"Compares DateTimeInterface instances for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\DoubleComparator":{"class":{"descriptions":{"short":"Compares doubles for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\ExceptionComparator":{"class":{"descriptions":{"short":"Compares Exception instances for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\Factory":{"class":{"descriptions":{"short":"Factory for comparators which compare values for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a new factory.","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\MockObjectComparator":{"class":{"descriptions":{"short":"Compares PHPUnit_Framework_MockObject_MockObject instances for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\NumericComparator":{"class":{"descriptions":{"short":"Compares numerical values for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\ObjectComparator":{"class":{"descriptions":{"short":"Compares objects for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\ResourceComparator":{"class":{"descriptions":{"short":"Compares resources for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\ScalarComparator":{"class":{"descriptions":{"short":"Compares scalar or NULL values for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\SplObjectStorageComparator":{"class":{"descriptions":{"short":"Compares \\SplObjectStorage instances for equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Comparator\\TypeComparator":{"class":{"descriptions":{"short":"Compares values for type equality.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Diff\\Chunk":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$start","$startRange","$end","$endRange","$lines"],"docParameters":{"$start":{"type":"int","description":null},"$startRange":{"type":"int","description":null},"$end":{"type":"int","description":null},"$endRange":{"type":"int","description":null},"$lines":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Diff\\Diff":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$from","$to"],"optionals":["$chunks"],"docParameters":{"$from":{"type":"string","description":null},"$to":{"type":"string","description":null},"$chunks":{"type":"Chunk[]","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Diff\\Differ":{"class":{"descriptions":{"short":"Diff implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$header","$showNonDiffLines"],"docParameters":{"$header":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Diff\\LCS\\LongestCommonSubsequence":{"class":{"descriptions":{"short":"Interface for implementations of longest common subsequence calculation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Diff\\LCS\\MemoryEfficientImplementation":{"class":{"descriptions":{"short":"Memory-efficient implementation of longest common subsequence calculation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Diff\\LCS\\TimeEfficientImplementation":{"class":{"descriptions":{"short":"Time-efficient implementation of longest common subsequence calculation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Diff\\Line":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$type","$content"],"docParameters":{"$type":{"type":"int","description":null},"$content":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\Diff\\Parser":{"class":{"descriptions":{"short":"Unified diff parser.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Environment\\Console":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Environment\\Runtime":{"class":{"descriptions":{"short":"Utility class for HHVM\/PHP environment handling.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Exporter\\Exporter":{"class":{"descriptions":{"short":"A nifty utility for visualizing PHP variables.","long":"<code>\n<?php\nuse SebastianBergmann\\Exporter\\Exporter;\n\n$exporter = new Exporter;\nprint $exporter->export(new Exception);\n<\/code>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\GlobalState\\Blacklist":{"class":{"descriptions":{"short":"A blacklist for global state elements that should not be snapshotted.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\GlobalState\\CodeExporter":{"class":{"descriptions":{"short":"Exports parts of a Snapshot as PHP code.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\GlobalState\\Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\GlobalState\\Restorer":{"class":{"descriptions":{"short":"Restorer of snapshots of global state.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\GlobalState\\RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\GlobalState\\Snapshot":{"class":{"descriptions":{"short":"A snapshot of global state.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$blacklist","$includeGlobalVariables","$includeStaticAttributes","$includeConstants","$includeFunctions","$includeClasses","$includeInterfaces","$includeTraits","$includeIniSettings","$includeIncludedFiles"],"docParameters":{"$blacklist":{"type":"Blacklist","description":null},"$includeGlobalVariables":{"type":"bool","description":null},"$includeStaticAttributes":{"type":"bool","description":null},"$includeConstants":{"type":"bool","description":null},"$includeFunctions":{"type":"bool","description":null},"$includeClasses":{"type":"bool","description":null},"$includeInterfaces":{"type":"bool","description":null},"$includeTraits":{"type":"bool","description":null},"$includeIniSettings":{"type":"bool","description":null},"$includeIncludedFiles":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a snapshot of the current global state.","long":""},"deprecated":false}}}},"SebastianBergmann\\ObjectEnumerator\\Enumerator":{"class":{"descriptions":{"short":"Traverses array structures and object graphs\nto enumerate all referenced objects.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\ObjectEnumerator\\Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\ObjectEnumerator\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\RecursionContext\\Context":{"class":{"descriptions":{"short":"A context containing previously processed arrays and objects\nwhen recursively processing a value.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initialises the context","long":""},"deprecated":false}}}},"SebastianBergmann\\RecursionContext\\Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\RecursionContext\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SebastianBergmann\\ResourceOperations\\ResourceOperations":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SebastianBergmann\\Version":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$release","$path"],"optionals":[],"docParameters":{"$release":{"type":"string","description":null},"$path":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Squiz_Sniffs_Arrays_ArrayBracketSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Arrays_ArrayBracketSpacingSniff.","long":"Ensure that there are no spaces around square brackets."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Arrays_ArrayDeclarationSniff":{"class":{"descriptions":{"short":"A test to ensure that arrays conform to the array coding standard.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_ClassDefinitionClosingBraceSpaceSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_ClassDefinitionClosingBraceSpaceSniff.","long":"Ensure there is a single blank line after the closing brace of a class definition."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_ClassDefinitionNameSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_ClassDefinitionNameSpacingSniff.","long":"Ensure there are no blank lines between the names of classes\/IDs."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_ClassDefinitionOpeningBraceSpaceSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_ClassDefinitionOpeningBraceSpaceSniff.","long":"Ensure there is a single space before the opening brace in a class definition\nand the content starts on the next line."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_ColonSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_ColonSpacingSniff.","long":"Ensure there is no space before a colon and one space after it."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_ColourDefinitionSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_ColourDefinitionSniff.","long":"Ensure colours are defined in upper-case and use shortcuts where possible."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_DisallowMultipleStyleDefinitionsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_DisallowMultipleStyleDefinitionsSniff.","long":"Ensure that each style definition is on a line by itself."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_DuplicateClassDefinitionSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_DuplicateClassDefinitionSniff.","long":"Check for duplicate class definitions that can be merged into one."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_DuplicateStyleDefinitionSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_DuplicateStyleDefinitionSniff.","long":"Check for duplicate style definitions in the same class."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_EmptyClassDefinitionSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_EmptyClassDefinitionSniff.","long":"Ensure that class definitions are not empty."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_EmptyStyleDefinitionSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_EmptyStyleDefinitionSniff.","long":"Ensure that style definitions are not empty."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_ForbiddenStylesSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_ForbiddenStylesSniff.","long":"Bans the use of some styles, such as deprecated or browser-specific styles."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_IndentationSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_IndentationSniff.","long":"Ensures styles are indented 4 spaces."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_LowercaseStyleDefinitionSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_LowercaseStyleDefinitionSniff.","long":"Ensure that all style definitions are in lowercase."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_MissingColonSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_MissingColonSniff.","long":"Ensure that all style definitions have a colon."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_NamedColoursSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_NamedColoursSniff.","long":"Ensure colour names are not used."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_OpacitySniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_OpacitySniff.","long":"Ensure that opacity values start with a 0 if it is not a whole number."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_SemicolonSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_SemicolonSpacingSniff.","long":"Ensure each style definition has a semi-colon and it is spaced correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_CSS_ShorthandSizeSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_CSS_ShorthandSizeSniff.","long":"Ensure sizes are defined using shorthand notation where possible, except in the\ncase where shorthand becomes 3 values."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Classes_ClassDeclarationSniff":{"class":{"descriptions":{"short":"Class Declaration Test.","long":"Checks the declaration of the class and its inheritance is correct."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Classes_ClassFileNameSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Classes_ClassFileNameSniff.","long":"Tests that the file name and the name of the class contained within the file\nmatch."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Classes_DuplicatePropertySniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Classes_DuplicatePropertySniff.","long":"Ensures JS classes don't contain duplicate property names."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Classes_LowercaseClassKeywordsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Classes_LowercaseClassKeywordsSniff.","long":"Ensures all class keywords are lowercase."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Classes_SelfMemberReferenceSniff":{"class":{"descriptions":{"short":"Tests self member references.","long":"Verifies that :\n<ul>\n<li>self:: is used instead of Self::<\/li>\n<li>self:: is used for local static member reference<\/li>\n<li>self:: is used instead of self ::<\/li>\n<\/ul>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a Squiz_Sniffs_Classes_SelfMemberReferenceSniff.","long":""},"deprecated":false}}}},"Squiz_Sniffs_Classes_ValidClassNameSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Classes_ValidClassNameSniff.","long":"Ensures classes are in camel caps, and the first letter is capitalised"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_BlockCommentSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Commenting_BlockCommentSniff.","long":"Verifies that block comments are used appropriately."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_ClassCommentSniff":{"class":{"descriptions":{"short":"Parses and verifies the class doc comment.","long":"Verifies that :\n<ul>\n<li>A class doc comment exists.<\/li>\n<li>There is exactly one blank line before the class comment.<\/li>\n<li>There are no blank lines after the class comment.<\/li>\n<li>Short and long descriptions end with a full stop and start with capital letter.<\/li>\n<li>There is a blank line between descriptions.<\/li>\n<\/ul>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_ClosingDeclarationCommentSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Commenting_ClosingDeclarationCommentSniff.","long":"Checks the \/\/end ... comments on classes, interfaces and functions."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_DocCommentAlignmentSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Commenting_DocCommentAlignmentSniff.","long":"Tests that the stars in a doc comment align correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_EmptyCatchCommentSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Commenting_EmptyCatchCommentSniff.","long":"Checks for empty Catch clause. Catch clause must at least have comment"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_FileCommentSniff":{"class":{"descriptions":{"short":"Parses and verifies the file doc comment.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_FunctionCommentSniff":{"class":{"descriptions":{"short":"Parses and verifies the doc comments for functions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_FunctionCommentThrowTagSniff":{"class":{"descriptions":{"short":"Verifies that a @throws tag exists for a function that throws exceptions.\nVerifies the number of @throws tags and the number of throw tokens matches.\nVerifies the exception type.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a Squiz_Sniffs_Commenting_FunctionCommentThrowTagSniff.","long":""},"deprecated":false}}}},"Squiz_Sniffs_Commenting_InlineCommentSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Commenting_InlineCommentSniff.","long":"Checks that there is adequate spacing between comments."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_LongConditionClosingCommentSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_ControlStructures_LongConditionClosingCommentSniff.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_PostStatementCommentSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Commenting_PostStatementCommentSniff.","long":"Checks to ensure that there are no comments after statements."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Commenting_VariableCommentSniff":{"class":{"descriptions":{"short":"Parses and verifies the variable doc comment.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs an AbstractVariableTest.","long":""},"deprecated":false}}}},"Squiz_Sniffs_ControlStructures_ControlSignatureSniff":{"class":{"descriptions":{"short":"Verifies that control statements conform to their coding standards.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_ControlStructures_ElseIfDeclarationSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_ControlStructures_ElseIfDeclarationSniff.","long":"Verifies that there are not elseif statements. The else and the if should\nbe separated by a space."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_ControlStructures_ForEachLoopDeclarationSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_ControlStructures_ForEachLoopDeclarationSniff.","long":"Verifies that there is a space between each condition of foreach loops."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_ControlStructures_ForLoopDeclarationSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_ControlStructures_ForLoopDeclarationSniff.","long":"Verifies that there is a space between each condition of for loops."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_ControlStructures_InlineIfDeclarationSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_ControlStructures_InlineIfDeclarationSniff.","long":"Tests the spacing of shorthand IF statements."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_ControlStructures_LowercaseDeclarationSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_ControlStructures_LowercaseDeclarationSniff.","long":"Ensures all control structure keywords are lowercase."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_ControlStructures_SwitchDeclarationSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_ControlStructures_SwitchDeclarationSniff.","long":"Ensures all the breaks and cases are aligned correctly according to their\nparent switch's alignment and enforces other switch formatting."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Debug_JSLintSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Debug_JSLintSniff.","long":"Runs jslint.js on the file."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Debug_JavaScriptLintSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Debug_JavaScriptLintSniff.","long":"Runs JavaScript Lint on the file."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Files_FileExtensionSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Files_FileExtensionSniff.","long":"Tests that classes and interfaces are not declared in .php files"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Formatting_OperatorBracketSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Formatting_OperationBracketSniff.","long":"Tests that all arithmetic operations are bracketed."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Functions_FunctionDeclarationArgumentSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Functions_FunctionDeclarationArgumentSpacingSniff.","long":"Checks that arguments in function declarations are spaced correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Functions_FunctionDeclarationSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Functions_FunctionDeclarationSniff.","long":"Checks the function declaration is correct."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$ignoreComments"],"docParameters":{"$ignoreComments":{"type":"boolean","description":"If true, comments will be ignored."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PHP_CodeSniffer_Standards_AbstractPatternSniff.","long":""},"deprecated":false}}}},"Squiz_Sniffs_Functions_FunctionDuplicateArgumentSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Functions_FunctionDuplicateArgumentSpacingSniff.","long":"Checks that duplicate arguments are not used in function declarations."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Functions_GlobalFunctionSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Functions_GlobalFunctionSniff.","long":"Tests for functions outside of classes."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Functions_LowercaseFunctionKeywordsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Functions_LowercaseFunctionKeywordsSniff.","long":"Ensures all function keywords are lowercase."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Functions_MultiLineFunctionDeclarationSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Functions_MultiLineFunctionDeclarationSniff.","long":"Ensure single and multi-line function declarations are defined correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_NamingConventions_ValidFunctionNameSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_NamingConventions_ValidFunctionNameSniff.","long":"Ensures method names are correct depending on whether they are public\nor private, and that functions are named correctly."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a PEAR_Sniffs_NamingConventions_ValidFunctionNameSniff.","long":""},"deprecated":false}}}},"Squiz_Sniffs_NamingConventions_ValidVariableNameSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_NamingConventions_ValidVariableNameSniff.","long":"Checks the naming of variables and member variables."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs an AbstractVariableTest.","long":""},"deprecated":false}}}},"Squiz_Sniffs_Objects_DisallowObjectStringIndexSniff":{"class":{"descriptions":{"short":"Ensures that object indexes are written in dot notation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Objects_ObjectInstantiationSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Objects_ObjectInstantiationSniff.","long":"Ensures objects are assigned to a variable when instantiated."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Objects_ObjectMemberCommaSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Objects_ObjectMemberCommaSniff.","long":"Ensures the last member of an object is not followed by a comma."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Operators_ComparisonOperatorUsageSniff":{"class":{"descriptions":{"short":"A Sniff to enforce the use of IDENTICAL type operators rather than EQUAL operators.","long":"The use of === true is enforced over implicit true statements,\nfor example:\n\n<code>\nif ($a)\n{\n...\n}\n<\/code>\n\nshould be:\n\n<code>\nif ($a === true)\n{\n...\n}\n<\/code>\n\nIt also enforces the use of === false over ! operators."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Operators_IncrementDecrementUsageSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Operators_IncrementDecrementUsageSniff.","long":"Tests that the ++ operators are used when possible and not\nused when it makes the code confusing."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Operators_ValidLogicalOperatorsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Operators_ValidLogicalOperatorsSniff.","long":"Checks to ensure that the logical operators 'and' and 'or' are not used.\nUse the && and || operators instead."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_CommentedOutCodeSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_CommentedOutCodeSniff.","long":"Warn about commented out code."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_DisallowBooleanStatementSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_DisallowBooleanStatementSniff.","long":"Ensures that boolean operators are only used inside control structure conditions."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_DisallowComparisonAssignmentSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_DisallowComparisonAssignmentSniff.","long":"Ensures that the value of a comparison is not assigned to a variable."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_DisallowInlineIfSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Formatting_DisallowInlineIfSniff.","long":"Stops inline IF statements from being used."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_DisallowMultipleAssignmentsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_DisallowMultipleAssignmentsSniff.","long":"Ensures that there is only one value assignment on a line, and that it is\nthe first thing on the line."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_DisallowObEndFlushSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Formatting_DisallowObEndFlushSniff.","long":"Checks the indenting used when an ob_start() call occurs."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_DisallowSizeFunctionsInLoopsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_DisallowSizeFunctionsInLoopsSniff.","long":"Bans the use of size-based functions in loop conditions."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_DiscouragedFunctionsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_DiscouragedFunctionsSniff.","long":"Discourages the use of debug functions."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_EmbeddedPhpSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_EmbeddedPhpSniff.","long":"Checks the indentation of embedded PHP code segments."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_EvalSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_EvalSniff.","long":"The use of eval() is discouraged."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_ForbiddenFunctionsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_ForbiddenFunctionsSniff.","long":"Discourages the use of alias functions that are kept in PHP for compatibility\nwith older versions. Can be used to forbid the use of any function."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_GlobalKeywordSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_GlobalKeywordSniff.","long":"Stops the usage of the \"global\" keyword."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_HeredocSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_HeredocSniff.","long":"Heredocs are prohibited. This test enforces that."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_InnerFunctionsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_InnerFunctionsSniff.","long":"Ensures that functions within functions are never used."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_PHP_LowercasePHPFunctionsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_LowercasePHPFunctionsSniff.","long":"Ensures all calls to inbuilt PHP functions are lowercase."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Construct the LowercasePHPFunctionSniff","long":""},"deprecated":false}}}},"Squiz_Sniffs_PHP_NonExecutableCodeSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_PHP_NonExecutableCodeSniff.","long":"Warns about code that can never been executed. This happens when a function\nreturns before the code, or a break ends execution of a statement etc."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Scope_MemberVarScopeSniff":{"class":{"descriptions":{"short":"Verifies that class members have scope modifiers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs an AbstractVariableTest.","long":""},"deprecated":false}}}},"Squiz_Sniffs_Scope_MethodScopeSniff":{"class":{"descriptions":{"short":"Verifies that class methods have scope modifiers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a Squiz_Sniffs_Scope_MethodScopeSniff.","long":""},"deprecated":false}}}},"Squiz_Sniffs_Scope_StaticThisUsageSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Scope_StaticThisUsageSniff.","long":"Checks for usage of \"$this\" in static methods, which will cause\nruntime errors."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs the test with the tokens it wishes to listen for.","long":""},"deprecated":false}}}},"Squiz_Sniffs_Strings_ConcatenationSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Strings_ConcatenationSpacingSniff.","long":"Makes sure there are no spaces between the concatenation operator (.) and\nthe strings being concatenated."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Strings_DoubleQuoteUsageSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Strings_DoubleQuoteUsageSniff.","long":"Makes sure that any use of Double Quotes (\"\") are warranted."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_Strings_EchoedStringsSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Strings_EchoedStringsSniff.","long":"Makes sure that any strings that are \"echoed\" are not enclosed in brackets\nlike a function call."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_CastSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_CastSpacingSniff.","long":"Ensure cast statements don't contain whitespace."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_ControlStructureSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_ControlStructureSpacingSniff.","long":"Checks that control structures have the correct spacing around brackets."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_FunctionClosingBraceSpaceSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_FunctionClosingBraceSpaceSniff.","long":"Checks that there is one empty line before the closing brace of a function."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_FunctionOpeningBraceSpaceSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_FunctionOpeningBraceSpaceSniff.","long":"Checks that there is no empty line after the opening brace of a function."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_FunctionSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_FunctionSpacingSniff.","long":"Checks the separation between methods in a class or interface."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_LanguageConstructSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_LanguageConstructSpacingSniff.","long":"Ensures all language constructs (without brackets) contain a\nsingle space between themselves and their content."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_LogicalOperatorSpacingSniff":{"class":{"descriptions":{"short":"Sniffs_Squiz_WhiteSpace_OperatorSpacingSniff.","long":"Verifies that operators have valid spacing surrounding them."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_MemberVarSpacingSniff":{"class":{"descriptions":{"short":"Verifies that class members are spaced correctly.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs an AbstractVariableTest.","long":""},"deprecated":false}}}},"Squiz_Sniffs_WhiteSpace_ObjectOperatorSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_ObjectOperatorSpacingSniff.","long":"Ensure there is no whitespace before\/after an object operator."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_OperatorSpacingSniff":{"class":{"descriptions":{"short":"Sniffs_Squiz_WhiteSpace_OperatorSpacingSniff.","long":"Verifies that operators have valid spacing surrounding them."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_PropertyLabelSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_PropertyLabelSpacingSniff.","long":"Ensures that the colon in a property or label definition has a single\nspace after it and no space before it."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_ScopeClosingBraceSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_Whitespace_ScopeClosingBraceSniff.","long":"Checks that the closing braces of scopes are aligned correctly."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_ScopeKeywordSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_ScopeKeywordSpacingSniff.","long":"Ensure there is a single space after scope keywords."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_SemicolonSpacingSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_SemicolonSpacingSniff.","long":"Ensure there is no whitespace before a semicolon."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Squiz_Sniffs_WhiteSpace_SuperfluousWhitespaceSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_WhiteSpace_SuperfluousWhitespaceSniff.","long":"Checks that no whitespace preceeds the first content of the file, exists\nafter the last content of the file, resides after content on any line, or\nare two empty lines in functions."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Text_Template":{"class":{"descriptions":{"short":"A simple template engine.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$file","$openDelimiter","$closeDelimiter"],"docParameters":{"$file":{"type":"string","description":null}},"throws":{"InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Webmozart\\Assert\\Assert":{"class":{"descriptions":{"short":"Efficient assertions to validate the input\/output of your methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Zend\\Diactoros\\AbstractSerializer":{"class":{"descriptions":{"short":"Provides base functionality for request and response de\/serialization\nstrategies, including functionality for retrieving a line at a time from\nthe message, splitting headers from the body, and serializing headers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\CallbackStream":{"class":{"descriptions":{"short":"Implementation of PSR HTTP streams","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":null}},"throws":{"InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Zend\\Diactoros\\Exception\\DeprecatedMethodException":{"class":{"descriptions":{"short":"Exception indicating a deprecated method.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Zend\\Diactoros\\Exception\\ExceptionInterface":{"class":{"descriptions":{"short":"Marker interface for package-specific exceptions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\HeaderSecurity":{"class":{"descriptions":{"short":"Provide security tools around HTTP headers to prevent common injection vectors.","long":"Code is largely lifted from the Zend\\Http\\Header\\HeaderValue implementation in\nZend Framework, released with the copyright and license below."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Private constructor; non-instantiable.","long":""},"deprecated":false}}}},"Zend\\Diactoros\\MessageTrait":{"class":{"descriptions":{"short":"Trait implementing the various methods defined in MessageInterface.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\PhpInputStream":{"class":{"descriptions":{"short":"Caching version of php:\/\/input","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$stream"],"docParameters":{"$stream":{"type":"string|resource","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Zend\\Diactoros\\RelativeStream":{"class":{"descriptions":{"short":"Class RelativeStream","long":"Wrapper for default Stream class, representing subpart (starting from given offset) of initial stream.\nIt can be used to avoid copying full stream, conserving memory."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$decoratedStream","$offset"],"optionals":[],"docParameters":{"$decoratedStream":{"type":"StreamInterface","description":null},"$offset":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Class constructor","long":""},"deprecated":false}}}},"Zend\\Diactoros\\Request":{"class":{"descriptions":{"short":"HTTP Request encapsulation","long":"Requests are considered immutable; all methods that might change state are\nimplemented such that they retain the internal state of the current\nmessage and return a new instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$uri","$method","$body","$headers"],"docParameters":{"$uri":{"type":"null|string|UriInterface","description":"URI for the request, if any."},"$method":{"type":"null|string","description":"HTTP method for the request, if any."},"$body":{"type":"string|resource|StreamInterface","description":"Message body, if any."},"$headers":{"type":"array","description":"Headers for the message, if any."}},"throws":{"\\InvalidArgumentException":"for any invalid value."},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Zend\\Diactoros\\RequestTrait":{"class":{"descriptions":{"short":"Trait with common request behaviors.","long":"Server and client-side requests differ slightly in how the Host header is\nhandled; on client-side, it should be calculated on-the-fly from the\ncomposed URI (if present), while on server-side, it will be calculated from\nthe environment. As such, this trait exists to provide the common code\nbetween both client-side and server-side requests, and each can then\nuse the headers functionality required by their implementations."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\Request\\Serializer":{"class":{"descriptions":{"short":"Serialize (cast to string) or deserialize (cast string to Request) messages.","long":"This class provides functionality for serializing a RequestInterface instance\nto a string, as well as the reverse operation of creating a Request instance\nfrom a string\/stream representing a message."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\Response":{"class":{"descriptions":{"short":"HTTP response encapsulation.","long":"Responses are considered immutable; all methods that might change state are\nimplemented such that they retain the internal state of the current\nmessage and return a new instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$body","$status","$headers"],"docParameters":{"$body":{"type":"string|resource|StreamInterface","description":"Stream identifier and\/or actual stream resource"},"$status":{"type":"int","description":"Status code for the response, if any."},"$headers":{"type":"array","description":"Headers for the response, if any."}},"throws":{"InvalidArgumentException":"on any invalid element."},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Zend\\Diactoros\\Response\\EmitterInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\Response\\EmptyResponse":{"class":{"descriptions":{"short":"A class representing empty HTTP responses.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$status","$headers"],"docParameters":{"$status":{"type":"int","description":"Status code for the response, if any."},"$headers":{"type":"array","description":"Headers for the response, if any."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create an empty response with the given status code.","long":""},"deprecated":false}}}},"Zend\\Diactoros\\Response\\HtmlResponse":{"class":{"descriptions":{"short":"HTML response.","long":"Allows creating a response by passing an HTML string to the constructor;\nby default, sets a status code of 200 and sets the Content-Type header to\ntext\/html."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$html"],"optionals":["$status","$headers"],"docParameters":{"$html":{"type":"string|StreamInterface","description":"HTML or stream for the message body."},"$status":{"type":"int","description":"Integer status code for the response; 200 by default."},"$headers":{"type":"array","description":"Array of headers to use at initialization."}},"throws":{"InvalidArgumentException":"if $html is neither a string or stream."},"return":{"type":"self","description":null},"descriptions":{"short":"Create an HTML response.","long":"Produces an HTML response with a Content-Type of text\/html and a default\nstatus of 200."},"deprecated":false}}}},"Zend\\Diactoros\\Response\\InjectContentTypeTrait":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\Response\\JsonResponse":{"class":{"descriptions":{"short":"JSON response.","long":"Allows creating a response by passing data to the constructor; by default,\nserializes the data to JSON, sets a status code of 200 and sets the\nContent-Type header to application\/json."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":["$status","$headers","$encodingOptions"],"docParameters":{"$data":{"type":"mixed","description":"Data to convert to JSON."},"$status":{"type":"int","description":"Integer status code for the response; 200 by default."},"$headers":{"type":"array","description":"Array of headers to use at initialization."},"$encodingOptions":{"type":"int","description":"JSON encoding options to use."}},"throws":{"InvalidArgumentException":"if unable to encode the $data to JSON."},"return":{"type":"self","description":null},"descriptions":{"short":"Create a JSON response with the given data.","long":"Default JSON encoding is performed with the following options, which\nproduces RFC4627-compliant JSON, capable of embedding into HTML.\n\n- JSON_HEX_TAG\n- JSON_HEX_APOS\n- JSON_HEX_AMP\n- JSON_HEX_QUOT\n- JSON_UNESCAPED_SLASHES"},"deprecated":false}}}},"Zend\\Diactoros\\Response\\RedirectResponse":{"class":{"descriptions":{"short":"Produce a redirect response.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$uri"],"optionals":["$status","$headers"],"docParameters":{"$uri":{"type":"string|UriInterface","description":"URI for the Location header."},"$status":{"type":"int","description":"Integer status code for the redirect; 302 by default."},"$headers":{"type":"array","description":"Array of headers to use at initialization."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a redirect response.","long":"Produces a redirect response with a Location header and the given status\n(302 by default).\n\nNote: this method overwrites the `location` $headers value."},"deprecated":false}}}},"Zend\\Diactoros\\Response\\SapiEmitter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\Response\\SapiEmitterTrait":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\Response\\SapiStreamEmitter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\Response\\Serializer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\Response\\TextResponse":{"class":{"descriptions":{"short":"Plain text response.","long":"Allows creating a response by passing a string to the constructor;\nby default, sets a status code of 200 and sets the Content-Type header to\ntext\/plain."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$text"],"optionals":["$status","$headers"],"docParameters":{"$text":{"type":"string|StreamInterface","description":"String or stream for the message body."},"$status":{"type":"int","description":"Integer status code for the response; 200 by default."},"$headers":{"type":"array","description":"Array of headers to use at initialization."}},"throws":{"InvalidArgumentException":"if $text is neither a string or stream."},"return":{"type":"self","description":null},"descriptions":{"short":"Create a plain text response.","long":"Produces a text response with a Content-Type of text\/plain and a default\nstatus of 200."},"deprecated":false}}}},"Zend\\Diactoros\\Server":{"class":{"descriptions":{"short":"\"Serve\" incoming HTTP requests","long":"Given a callback, takes an incoming request, dispatches it to the\ncallback, and then sends a response."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$callback","$request","$response"],"optionals":[],"docParameters":{"$callback":{"type":"callable","description":null},"$request":{"type":"ServerRequestInterface","description":null},"$response":{"type":"ResponseInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":"Given a callback, a request, and a response, we can create a server."},"deprecated":false}}}},"Zend\\Diactoros\\ServerRequest":{"class":{"descriptions":{"short":"Server-side HTTP request","long":"Extends the Request definition to add methods for accessing incoming data,\nspecifically server parameters, cookies, matched path parameters, query\nstring arguments, body parameters, and upload file information.\n\n\"Attributes\" are discovered via decomposing the request (and usually\nspecifically the URI path), and typically will be injected by the application.\n\nRequests are considered immutable; all methods that might change state are\nimplemented such that they retain the internal state of the current\nmessage and return a new instance that contains the changed state."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$serverParams","$uploadedFiles","$uri","$method","$body","$headers","$cookies","$queryParams","$parsedBody","$protocol"],"docParameters":{"$serverParams":{"type":"array","description":"Server parameters, typically from $_SERVER"},"$uploadedFiles":{"type":"array","description":"Upload file information, a tree of UploadedFiles"},"$uri":{"type":"null|string|UriInterface","description":"URI for the request, if any."},"$method":{"type":"null|string","description":"HTTP method for the request, if any."},"$body":{"type":"string|resource|StreamInterface","description":"Message body, if any."},"$headers":{"type":"array","description":"Headers for the message, if any."},"$cookies":{"type":"array","description":"Cookies for the message, if any."},"$queryParams":{"type":"array","description":"Query params for the message, if any."},"$parsedBody":{"type":"null|array|object","description":"The deserialized body parameters, if any."},"$protocol":{"type":"string","description":"HTTP protocol version."}},"throws":{"InvalidArgumentException":"for any invalid value."},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Zend\\Diactoros\\ServerRequestFactory":{"class":{"descriptions":{"short":"Class for marshaling a request object from the current PHP environment.","long":"Logic largely refactored from the ZF2 Zend\\Http\\PhpEnvironment\\Request class."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend\\Diactoros\\Stream":{"class":{"descriptions":{"short":"Implementation of PSR HTTP streams","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$mode"],"docParameters":{"$stream":{"type":"string|resource","description":null},"$mode":{"type":"string","description":"Mode with which to open stream"}},"throws":{"InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Zend\\Diactoros\\UploadedFile":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$streamOrFile","$size","$errorStatus"],"optionals":["$clientFilename","$clientMediaType"],"docParameters":{"$streamOrFile":{"type":"string|resource","description":null},"$size":{"type":"int","description":null},"$errorStatus":{"type":"int","description":null},"$clientFilename":{"type":"string|null","description":null},"$clientMediaType":{"type":"string|null","description":null}},"throws":{"InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Zend\\Diactoros\\Uri":{"class":{"descriptions":{"short":"Implementation of Psr\\Http\\UriInterface.","long":"Provides a value object representing a URI for HTTP requests.\n\nInstances of this class  are considered immutable; all methods that\nmight change state are implemented such that they retain the internal\nstate of the current instance and return a new instance that contains the\nchanged state."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$uri"],"docParameters":{"$uri":{"type":"string","description":null}},"throws":{"InvalidArgumentException":"on non-string $uri argument"},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Zend_Sniffs_Debug_CodeAnalyzerSniff":{"class":{"descriptions":{"short":"Zend_Sniffs_Debug_CodeAnalyzerSniff.","long":"Runs the Zend Code Analyzer (from Zend Studio) on the file."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend_Sniffs_Files_ClosingTagSniff":{"class":{"descriptions":{"short":"Zend_Sniffs_Files_LineEndingsSniff.","long":"Checks that the file does not end with a closing tag."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Zend_Sniffs_NamingConventions_ValidVariableNameSniff":{"class":{"descriptions":{"short":"Squiz_Sniffs_NamingConventions_ValidVariableNameSniff.","long":"Checks the naming of variables and member variables."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs an AbstractVariableTest.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$summary","$description","$tags","$context","$location","$isTemplateStart","$isTemplateEnd"],"docParameters":{"$summary":{"type":"string","description":null},"$description":{"type":"DocBlock\\Description","description":null},"$tags":{"type":"DocBlock\\Tag[]","description":null},"$context":{"type":"Types\\Context","description":"The context in which the DocBlock occurs."},"$location":{"type":"Location","description":"The location within the file that this DocBlock occurs in."},"$isTemplateStart":{"type":"bool","description":null},"$isTemplateEnd":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlockFactory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$descriptionFactory","$tagFactory"],"optionals":[],"docParameters":{"$descriptionFactory":{"type":"DescriptionFactory","description":null},"$tagFactory":{"type":"TagFactory","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes this factory with the required subcontractors.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlockFactoryInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Description":{"class":{"descriptions":{"short":"Object representing to description for a DocBlock.","long":"A Description object can consist of plain text but can also include tags. A Description Formatter can then combine\na body template with sprintf-style placeholders together with formatted tags in order to reconstitute a complete\ndescription text using the format that you would prefer.\n\nBecause parsing a Description text can be a verbose process this is handled by the {@see DescriptionFactory}. It is\nthus recommended to use that to create a Description object, like this:\n\n$description = $descriptionFactory->create('This is a {@see Description}', $context);\n\nThe description factory will interpret the given body and create a body template and list of tags from them, and pass\nthat onto the constructor if this class.\n\n> The $context variable is a class of type {@see \\phpDocumentor\\Reflection\\Types\\Context} and contains the namespace\n> and the namespace aliases that apply to this DocBlock. These are used by the Factory to resolve and expand partial\n> type names and FQSENs.\n\nIf you do not want to use the DescriptionFactory you can pass a body template and tag listing like this:\n\n$description = new Description(\n'This is a %1$s',\n[ new See(new Fqsen('\\phpDocumentor\\Reflection\\DocBlock\\Description')) ]\n);\n\nIt is generally recommended to use the Factory as that will also apply escaping rules, while the Description object\nis mainly responsible for rendering."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$bodyTemplate"],"optionals":["$tags"],"docParameters":{"$bodyTemplate":{"type":"string","description":null},"$tags":{"type":"Tag[]","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a Description with its body (template) and a listing of the tags used in the body template.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory":{"class":{"descriptions":{"short":"Creates a new Description object given a body of text.","long":"Descriptions in phpDocumentor are somewhat complex entities as they can contain one or more tags inside their\nbody that can be replaced with a readable output. The replacing is done by passing a Formatter object to the\nDescription object's `render` method.\n\nIn addition to the above does a Description support two types of escape sequences:\n\n1. `{@}` to escape the `@` character to prevent it from being interpreted as part of a tag, i.e. `{{@}link}`\n2. `{}` to escape the `}` character, this can be used if you want to use the `}` character in the description\nof an inline tag.\n\nIf a body consists of multiple lines then this factory will also remove any superfluous whitespace at the beginning\nof each line while maintaining any indentation that is used. This will prevent formatting parsers from tripping\nover unexpected spaces as can be observed with tag descriptions."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$tagFactory"],"optionals":[],"docParameters":{"$tagFactory":{"type":"TagFactory","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes this factory with the means to construct (inline) tags.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Serializer":{"class":{"descriptions":{"short":"Converts a DocBlock back from an object to a complete DocComment including Asterisks.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$indent","$indentString","$indentFirstLine","$lineLength"],"docParameters":{"$indent":{"type":"int","description":"The number of times the indent string is repeated."},"$indentString":{"type":"string","description":"The string to indent the comment with."},"$indentFirstLine":{"type":"bool","description":"Whether to indent the first line."},"$lineLength":{"type":"int|null","description":"The max length of a line or NULL to disable line wrapping."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Create a Serializer instance.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory":{"class":{"descriptions":{"short":"Creates a Tag object given the contents of a tag.","long":"This Factory is capable of determining the appropriate class for a tag and instantiate it using its `create`\nfactory method. The `create` factory method of a Tag can have a variable number of arguments; this way you can\npass the dependencies that you need to construct a tag object.\n\n> Important: each parameter in addition to the body variable for the `create` method must default to null, otherwise\n> it violates the constraint with the interface; it is recommended to use the {@see Assert::notNull()} method to\n> verify that a dependency is actually passed.\n\nThis Factory also features a Service Locator component that is used to pass the right dependencies to the\n`create` method of a tag; each dependency should be registered as a service or as a parameter.\n\nWhen you want to use a Tag of your own with custom handling you need to call the `registerTagHandler` method, pass\nthe name of the tag and a Fully Qualified Class Name pointing to a class that implements the Tag interface."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fqsenResolver"],"optionals":["$tagHandlers"],"docParameters":{"$fqsenResolver":{"type":"FqsenResolver","description":null},"$tagHandlers":{"type":"string[]","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initialize this tag factory with the means to resolve an FQSEN and optionally a list of tag handlers.","long":"If no tag handlers are provided than the default list in the {@see self::$tagHandlerMappings} property\nis used."},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tag":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\TagFactory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Author":{"class":{"descriptions":{"short":"Reflection class for an {@}author tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$authorName","$authorEmail"],"optionals":[],"docParameters":{"$authorName":{"type":"string","description":null},"$authorEmail":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes this tag with the author name and e-mail.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\BaseTag":{"class":{"descriptions":{"short":"Parses a tag definition for a DocBlock.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Covers":{"class":{"descriptions":{"short":"Reflection class for a @covers tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$refers"],"optionals":["$description"],"docParameters":{"$refers":{"type":"Fqsen","description":null},"$description":{"type":"Description","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes this tag.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Deprecated":{"class":{"descriptions":{"short":"Reflection class for a {@}deprecated tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Example":{"class":{"descriptions":{"short":"Reflection class for a {@}example tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Factory\\StaticMethod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Factory\\Strategy":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter\\PassthroughFormatter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Generic":{"class":{"descriptions":{"short":"Parses a tag definition for a DocBlock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$description"],"docParameters":{"$name":{"type":"string","description":"Name of the tag."},"$description":{"type":"Description","description":"The contents of the given tag."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Parses a tag and populates the member variables.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Link":{"class":{"descriptions":{"short":"Reflection class for a @link tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$link"],"optionals":["$description"],"docParameters":{"$link":{"type":"string","description":null},"$description":{"type":"Description","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a link to a URL.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Method":{"class":{"descriptions":{"short":"Reflection class for an {@}method in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$methodName"],"optionals":["$arguments","$returnType","$static","$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Param":{"class":{"descriptions":{"short":"Reflection class for the {@}param tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$variableName"],"optionals":["$type","$isVariadic","$description"],"docParameters":{"$variableName":{"type":"string","description":null},"$type":{"type":"Type","description":null},"$isVariadic":{"type":"bool","description":null},"$description":{"type":"Description","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Property":{"class":{"descriptions":{"short":"Reflection class for a {@}property tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$variableName"],"optionals":["$type","$description"],"docParameters":{"$variableName":{"type":"string","description":null},"$type":{"type":"Type","description":null},"$description":{"type":"Description","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\PropertyRead":{"class":{"descriptions":{"short":"Reflection class for a {@}property-read tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$variableName"],"optionals":["$type","$description"],"docParameters":{"$variableName":{"type":"string","description":null},"$type":{"type":"Type","description":null},"$description":{"type":"Description","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\PropertyWrite":{"class":{"descriptions":{"short":"Reflection class for a {@}property-write tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$variableName"],"optionals":["$type","$description"],"docParameters":{"$variableName":{"type":"string","description":null},"$type":{"type":"Type","description":null},"$description":{"type":"Description","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Return_":{"class":{"descriptions":{"short":"Reflection class for a {@}return tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":["$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\See":{"class":{"descriptions":{"short":"Reflection class for an {@}see tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$refers"],"optionals":["$description"],"docParameters":{"$refers":{"type":"Fqsen","description":null},"$description":{"type":"Description","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes this tag.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Since":{"class":{"descriptions":{"short":"Reflection class for a {@}since tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Source":{"class":{"descriptions":{"short":"Reflection class for a {@}source tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$startingLine"],"optionals":["$lineCount","$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Throws":{"class":{"descriptions":{"short":"Reflection class for a {@}throws tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":["$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Uses":{"class":{"descriptions":{"short":"Reflection class for a {@}uses tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$refers"],"optionals":["$description"],"docParameters":{"$refers":{"type":"Fqsen","description":null},"$description":{"type":"Description","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes this tag.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Var_":{"class":{"descriptions":{"short":"Reflection class for a {@}var tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$variableName"],"optionals":["$type","$description"],"docParameters":{"$variableName":{"type":"string","description":null},"$type":{"type":"Type","description":null},"$description":{"type":"Description","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\DocBlock\\Tags\\Version":{"class":{"descriptions":{"short":"Reflection class for a {@}version tag in a Docblock.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$description"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Element":{"class":{"descriptions":{"short":"Interface for Api Elements","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\ExampleFinder":{"class":{"descriptions":{"short":"Class used to find an example file's location based on a given ExampleDescriptor.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\File":{"class":{"descriptions":{"short":"Interface for files processed by the ProjectFactory","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Fqsen":{"class":{"descriptions":{"short":"Value Object for Fqsen.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$fqsen"],"optionals":[],"docParameters":{"$fqsen":{"type":"string","description":null}},"throws":{"\\InvalidArgumentException":"when $fqsen is not matching the format."},"return":{"type":"self","description":null},"descriptions":{"short":"Initializes the object.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\FqsenResolver":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Location":{"class":{"descriptions":{"short":"The location where an element occurs within a file.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$lineNumber"],"optionals":["$columnNumber"],"docParameters":{"$lineNumber":{"type":"int","description":null},"$columnNumber":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes the location for an element using its line number in the file and optionally the column number.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Project":{"class":{"descriptions":{"short":"Interface for project. Since the definition of a project can be different per factory this interface will be small.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\ProjectFactory":{"class":{"descriptions":{"short":"Interface for project factories. A project factory shall convert a set of files\ninto an object implementing the Project interface.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Type":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\TypeResolver":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fqsenResolver"],"docParameters":{"$fqsenResolver":{"type":"FqsenResolver","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes this TypeResolver with the means to create and resolve Fqsen objects.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Types\\Array_":{"class":{"descriptions":{"short":"Represents an array type as described in the PSR-5, the PHPDoc Standard.","long":"An array can be represented in two forms:\n\n1. Untyped (`array`), where the key and value type is unknown and hence classified as 'Mixed'.\n2. Types (`string[]`), where the value type is provided by preceding an opening and closing square bracket with a\ntype name."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$valueType","$keyType"],"docParameters":{"$valueType":{"type":"Type","description":null},"$keyType":{"type":"Type","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes this representation of an array with the given Type or Fqsen.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Types\\Boolean":{"class":{"descriptions":{"short":"Value Object representing a Boolean type.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Callable_":{"class":{"descriptions":{"short":"Value Object representing a Callable type.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Compound":{"class":{"descriptions":{"short":"Value Object representing a Compound Type.","long":"A Compound Type is not so much a special keyword or object reference but is a series of Types that are separated\nusing an OR operator (`|`). This combination of types signifies that whatever is associated with this compound type\nmay contain a value with any of the given types."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$types"],"optionals":[],"docParameters":{"$types":{"type":"Type[]","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a compound type (i.e. `string|int`) and tests if the provided types all implement the Type interface.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Types\\Context":{"class":{"descriptions":{"short":"Provides information about the Context in which the DocBlock occurs that receives this context.","long":"A DocBlock does not know of its own accord in which namespace it occurs and which namespace aliases are applicable\nfor the block of code in which it is in. This information is however necessary to resolve Class names in tags since\nyou can provide a short form or make use of namespace aliases.\n\nThe phpDocumentor Reflection component knows how to create this class but if you use the DocBlock parser from your\nown application it is possible to generate a Context class using the ContextFactory; this will analyze the file in\nwhich an associated class resides for its namespace and imports."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$namespace"],"optionals":["$namespaceAliases"],"docParameters":{"$namespace":{"type":"string","description":"The namespace where this DocBlock resides in."},"$namespaceAliases":{"type":"array","description":"List of namespace aliases => Fully Qualified Namespace."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes the new context and normalizes all passed namespaces to be in Qualified Namespace Name (QNN)\nformat (without a preceding `\\`).","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Types\\ContextFactory":{"class":{"descriptions":{"short":"Convenience class to create a Context for DocBlocks when not using the Reflection Component of phpDocumentor.","long":"For a DocBlock to be able to resolve types that use partial namespace names or rely on namespace imports we need to\nprovide a bit of context so that the DocBlock can read that and based on it decide how to resolve the types to\nFully Qualified names."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Float_":{"class":{"descriptions":{"short":"Value Object representing a Float.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Integer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Mixed":{"class":{"descriptions":{"short":"Value Object representing an unknown, or mixed, type.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Null_":{"class":{"descriptions":{"short":"Value Object representing a null value or type.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Object_":{"class":{"descriptions":{"short":"Value Object representing an object.","long":"An object can be either typed or untyped. When an object is typed it means that it has an identifier, the FQSEN,\npointing to an element in PHP. Object types that are untyped do not refer to a specific class but represent objects\nin general."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$fqsen"],"docParameters":{"$fqsen":{"type":"Fqsen","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes this object with an optional FQSEN, if not provided this object is considered 'untyped'.","long":""},"deprecated":false}}}},"phpDocumentor\\Reflection\\Types\\Resource":{"class":{"descriptions":{"short":"Value Object representing the 'resource' Type.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Scalar":{"class":{"descriptions":{"short":"Value Object representing the 'scalar' pseudo-type, which is either a string, integer, float or boolean.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Self_":{"class":{"descriptions":{"short":"Value Object representing the 'self' type.","long":"Self, as a Type, represents the class in which the associated element was defined."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Static_":{"class":{"descriptions":{"short":"Value Object representing the 'static' type.","long":"Self, as a Type, represents the class in which the associated element was called. This differs from self as self does\nnot take inheritance into account but static means that the return type is always that of the class of the called\nelement.\n\nSee the documentation on late static binding in the PHP Documentation for more information on the difference between\nstatic and self."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\String_":{"class":{"descriptions":{"short":"Value Object representing the type 'string'.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\This":{"class":{"descriptions":{"short":"Value Object representing the '$this' pseudo-type.","long":"$this, as a Type, represents the instance of the class associated with the element as it was called. $this is\ncommonly used when documenting fluent interfaces since it represents that the same object is returned."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"phpDocumentor\\Reflection\\Types\\Void_":{"class":{"descriptions":{"short":"Value Object representing the pseudo-type 'void'.","long":"Void is generally only used when working with return types as it signifies that the method intentionally does not\nreturn any value."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"stdClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ErrorException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$severity","$filename","$lineno","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Error":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ParseError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"TypeError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArgumentCountError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArithmeticError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DivisionByZeroError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Closure":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Generator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ClosedGeneratorException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateTime":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$object"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateTimeImmutable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$object"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateTimeZone":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$timezone"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateInterval":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$interval_spec"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DatePeriod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$start","$interval","$end"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LibXMLError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SQLite3":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$flags","$encryption_key"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SQLite3Stmt":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sqlite3"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SQLite3Result":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CURLFile":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$mimetype","$postname"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMStringList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNameList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementationList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementationSource":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNameSpaceNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMDocumentFragment":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$encoding"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMNodeList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNamedNodeMap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMCharacterData":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMAttr":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value","$uri"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMText":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMComment":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMTypeinfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMUserDataHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMDomError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMErrorHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMLocator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMConfiguration":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMCdataSection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMDocumentType":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNotation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMEntity":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMEntityReference":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMProcessingInstruction":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMStringExtend":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMXPath":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$doc"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"finfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$arg"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LogicException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"BadFunctionCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"BadMethodCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DomainException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LengthException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OutOfRangeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OutOfBoundsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OverflowException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RangeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"UnderflowException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"UnexpectedValueException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveIteratorIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$mode","$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IteratorIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CallbackFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$callback"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveCallbackFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$callback"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ParentIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LimitIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$offset","$count"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CachingIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveCachingIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"NoRewindIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"AppendIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"InfiniteIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RegexIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$regex"],"optionals":["$mode","$flags","$preg_flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveRegexIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$regex"],"optionals":["$mode","$flags","$preg_flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"EmptyIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"RecursiveTreeIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags","$caching_it_flags","$mode"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArrayObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array","$ar_flags","$iterator_class"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArrayIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array","$ar_flags","$iterator_class"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveArrayIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array","$ar_flags","$iterator_class"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplFileInfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file_name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DirectoryIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FilesystemIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveDirectoryIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GlobIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplFileObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file_name"],"optionals":["$open_mode","$use_include_path","$context"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplTempFileObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$max_memory"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplDoublyLinkedList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplQueue":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplStack":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplMinHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplMaxHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplPriorityQueue":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplFixedArray":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$size"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplObjectStorage":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MultipleIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$flags"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SessionHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"__PHP_Incomplete_Class":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"php_user_filter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Directory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"AssertionError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_sql_exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_driver":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"mysqli":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$host","$user","$password","$database","$port","$socket"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_warning":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_result":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_stmt":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDOException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dsn"],"optionals":["$username","$passwd","$options"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDOStatement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PDORow":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PharException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Phar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$flags","$alias","$fileformat"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PharData":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$flags","$alias","$fileformat"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PharFileInfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Reflection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionFunctionAbstract":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionFunction":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$generator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionParameter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$function","$parameter"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionType":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionNamedType":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionMethod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class_or_method"],"optionals":["$name"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argument"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argument"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionProperty":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionClassConstant":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionExtension":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionZendExtension":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SimpleXMLElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":["$options","$data_is_url","$ns","$is_prefix"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SimpleXMLIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":["$options","$data_is_url","$ns","$is_prefix"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapClient":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$wsdl"],"optionals":["$options"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapVar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data","$encoding"],"optionals":["$type_name","$type_namespace","$node_name","$node_namespace"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapServer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$wsdl"],"optionals":["$options"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapFault":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$faultcode","$faultstring"],"optionals":["$faultactor","$detail","$faultname","$headerfault"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapParam":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapHeader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$namespace","$name"],"optionals":["$data","$mustunderstand","$actor"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"XMLReader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"XMLWriter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"XSLTProcessor":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ZipArchive":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Collator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$arg1"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"NumberFormatter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locale","$style"],"optionals":["$pattern"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Normalizer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Locale":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MessageFormatter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locale","$pattern"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IntlDateFormatter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locale","$datetype","$timetype"],"optionals":["$timezone","$calendar","$pattern"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ResourceBundle":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locale","$bundlename"],"optionals":["$fallback"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Transliterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IntlTimeZone":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IntlCalendar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IntlGregorianCalendar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$timeZoneOrYear","$localeOrMonth","$dayOfMonth","$hour","$minute","$second"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Spoofchecker":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IntlException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IntlIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"IntlBreakIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IntlRuleBasedBreakIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$rules"],"optionals":["$areCompiled"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IntlCodePointBreakIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IntlPartsIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"UConverter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$destination_encoding","$source_encoding"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IntlChar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}}},"autocomplete":["Aura\\Intl\\BasicFormatter","Aura\\Intl\\Exception","Aura\\Intl\\Exception\\CannotFormat","Aura\\Intl\\Exception\\CannotInstantiateFormatter","Aura\\Intl\\Exception\\FormatterNotMapped","Aura\\Intl\\Exception\\IcuVersionTooLow","Aura\\Intl\\FormatterInterface","Aura\\Intl\\FormatterLocator","Aura\\Intl\\IntlFormatter","Aura\\Intl\\Package","Aura\\Intl\\PackageFactory","Aura\\Intl\\PackageLocator","Aura\\Intl\\PackageLocatorInterface","Aura\\Intl\\Translator","Aura\\Intl\\TranslatorFactory","Aura\\Intl\\TranslatorInterface","Aura\\Intl\\TranslatorLocator","Cake\\Auth\\AbstractPasswordHasher","Cake\\Auth\\BaseAuthenticate","Cake\\Auth\\BaseAuthorize","Cake\\Auth\\BasicAuthenticate","Cake\\Auth\\ControllerAuthorize","Cake\\Auth\\DefaultPasswordHasher","Cake\\Auth\\DigestAuthenticate","Cake\\Auth\\FallbackPasswordHasher","Cake\\Auth\\FormAuthenticate","Cake\\Auth\\PasswordHasherFactory","Cake\\Auth\\Storage\\MemoryStorage","Cake\\Auth\\Storage\\SessionStorage","Cake\\Auth\\Storage\\StorageInterface","Cake\\Auth\\WeakPasswordHasher","Cake\\Cache\\Cache","Cake\\Cache\\CacheEngine","Cake\\Cache\\CacheRegistry","Cake\\Cache\\Engine\\ApcEngine","Cake\\Cache\\Engine\\FileEngine","Cake\\Cache\\Engine\\MemcachedEngine","Cake\\Cache\\Engine\\NullEngine","Cake\\Cache\\Engine\\RedisEngine","Cake\\Cache\\Engine\\WincacheEngine","Cake\\Cache\\Engine\\XcacheEngine","Cake\\Chronos\\Chronos","Cake\\Chronos\\ChronosInterface","Cake\\Chronos\\ChronosInterval","Cake\\Chronos\\Date","Cake\\Chronos\\DifferenceFormatter","Cake\\Chronos\\MutableDate","Cake\\Chronos\\MutableDateTime","Cake\\Chronos\\Traits\\ComparisonTrait","Cake\\Chronos\\Traits\\CopyTrait","Cake\\Chronos\\Traits\\DifferenceTrait","Cake\\Chronos\\Traits\\FactoryTrait","Cake\\Chronos\\Traits\\FormattingTrait","Cake\\Chronos\\Traits\\FrozenTimeTrait","Cake\\Chronos\\Traits\\MagicPropertyTrait","Cake\\Chronos\\Traits\\ModifierTrait","Cake\\Chronos\\Traits\\RelativeKeywordTrait","Cake\\Chronos\\Traits\\TestingAidTrait","Cake\\Chronos\\Traits\\TimezoneTrait","Cake\\Chronos\\Translator","Cake\\Collection\\Collection","Cake\\Collection\\CollectionInterface","Cake\\Collection\\CollectionTrait","Cake\\Collection\\ExtractTrait","Cake\\Collection\\Iterator\\BufferedIterator","Cake\\Collection\\Iterator\\ExtractIterator","Cake\\Collection\\Iterator\\FilterIterator","Cake\\Collection\\Iterator\\InsertIterator","Cake\\Collection\\Iterator\\MapReduce","Cake\\Collection\\Iterator\\NestIterator","Cake\\Collection\\Iterator\\NoChildrenIterator","Cake\\Collection\\Iterator\\ReplaceIterator","Cake\\Collection\\Iterator\\SortIterator","Cake\\Collection\\Iterator\\StoppableIterator","Cake\\Collection\\Iterator\\TreeIterator","Cake\\Collection\\Iterator\\TreePrinter","Cake\\Collection\\Iterator\\UnfoldIterator","Cake\\Collection\\Iterator\\ZipIterator","Cake\\Console\\ConsoleErrorHandler","Cake\\Console\\ConsoleInput","Cake\\Console\\ConsoleInputArgument","Cake\\Console\\ConsoleInputOption","Cake\\Console\\ConsoleInputSubcommand","Cake\\Console\\ConsoleIo","Cake\\Console\\ConsoleOptionParser","Cake\\Console\\ConsoleOutput","Cake\\Console\\Exception\\ConsoleException","Cake\\Console\\Exception\\MissingHelperException","Cake\\Console\\Exception\\MissingShellException","Cake\\Console\\Exception\\MissingShellMethodException","Cake\\Console\\Exception\\MissingTaskException","Cake\\Console\\Exception\\StopException","Cake\\Console\\HelpFormatter","Cake\\Console\\Helper","Cake\\Console\\HelperRegistry","Cake\\Console\\Shell","Cake\\Console\\ShellDispatcher","Cake\\Console\\TaskRegistry","Cake\\Controller\\Component","Cake\\Controller\\ComponentRegistry","Cake\\Controller\\Component\\AuthComponent","Cake\\Controller\\Component\\CookieComponent","Cake\\Controller\\Component\\CsrfComponent","Cake\\Controller\\Component\\FlashComponent","Cake\\Controller\\Component\\PaginatorComponent","Cake\\Controller\\Component\\RequestHandlerComponent","Cake\\Controller\\Component\\SecurityComponent","Cake\\Controller\\Controller","Cake\\Controller\\ErrorController","Cake\\Controller\\Exception\\AuthSecurityException","Cake\\Controller\\Exception\\MissingActionException","Cake\\Controller\\Exception\\MissingComponentException","Cake\\Controller\\Exception\\SecurityException","Cake\\Core\\App","Cake\\Core\\ClassLoader","Cake\\Core\\Configure","Cake\\Core\\Configure\\ConfigEngineInterface","Cake\\Core\\Configure\\Engine\\IniConfig","Cake\\Core\\Configure\\Engine\\JsonConfig","Cake\\Core\\Configure\\Engine\\PhpConfig","Cake\\Core\\Configure\\FileConfigTrait","Cake\\Core\\ConventionsTrait","Cake\\Core\\Exception\\Exception","Cake\\Core\\Exception\\MissingPluginException","Cake\\Core\\InstanceConfigTrait","Cake\\Core\\ObjectRegistry","Cake\\Core\\Plugin","Cake\\Core\\StaticConfigTrait","Cake\\Database\\Connection","Cake\\Database\\Dialect\\MysqlDialectTrait","Cake\\Database\\Dialect\\PostgresDialectTrait","Cake\\Database\\Dialect\\SqliteDialectTrait","Cake\\Database\\Dialect\\SqlserverDialectTrait","Cake\\Database\\Dialect\\TupleComparisonTranslatorTrait","Cake\\Database\\Driver","Cake\\Database\\Driver\\Mysql","Cake\\Database\\Driver\\PDODriverTrait","Cake\\Database\\Driver\\Postgres","Cake\\Database\\Driver\\Sqlite","Cake\\Database\\Driver\\Sqlserver","Cake\\Database\\Exception","Cake\\Database\\Exception\\MissingConnectionException","Cake\\Database\\Exception\\MissingDriverException","Cake\\Database\\Exception\\MissingExtensionException","Cake\\Database\\ExpressionInterface","Cake\\Database\\Expression\\BetweenExpression","Cake\\Database\\Expression\\CaseExpression","Cake\\Database\\Expression\\Comparison","Cake\\Database\\Expression\\FieldInterface","Cake\\Database\\Expression\\FieldTrait","Cake\\Database\\Expression\\FunctionExpression","Cake\\Database\\Expression\\IdentifierExpression","Cake\\Database\\Expression\\OrderByExpression","Cake\\Database\\Expression\\OrderClauseExpression","Cake\\Database\\Expression\\QueryExpression","Cake\\Database\\Expression\\TupleComparison","Cake\\Database\\Expression\\UnaryExpression","Cake\\Database\\Expression\\ValuesExpression","Cake\\Database\\FieldTypeConverter","Cake\\Database\\FunctionsBuilder","Cake\\Database\\IdentifierQuoter","Cake\\Database\\Log\\LoggedQuery","Cake\\Database\\Log\\LoggingStatement","Cake\\Database\\Log\\QueryLogger","Cake\\Database\\Query","Cake\\Database\\QueryCompiler","Cake\\Database\\Schema\\BaseSchema","Cake\\Database\\Schema\\CachedCollection","Cake\\Database\\Schema\\Collection","Cake\\Database\\Schema\\MysqlSchema","Cake\\Database\\Schema\\PostgresSchema","Cake\\Database\\Schema\\SqliteSchema","Cake\\Database\\Schema\\SqlserverSchema","Cake\\Database\\Schema\\Table","Cake\\Database\\SqlDialectTrait","Cake\\Database\\SqliteCompiler","Cake\\Database\\SqlserverCompiler","Cake\\Database\\StatementInterface","Cake\\Database\\Statement\\BufferResultsTrait","Cake\\Database\\Statement\\BufferedStatement","Cake\\Database\\Statement\\CallbackStatement","Cake\\Database\\Statement\\MysqlStatement","Cake\\Database\\Statement\\PDOStatement","Cake\\Database\\Statement\\SqliteStatement","Cake\\Database\\Statement\\SqlserverStatement","Cake\\Database\\Statement\\StatementDecorator","Cake\\Database\\Type","Cake\\Database\\TypeConverterTrait","Cake\\Database\\TypeInterface","Cake\\Database\\TypeMap","Cake\\Database\\TypeMapTrait","Cake\\Database\\Type\\BinaryType","Cake\\Database\\Type\\BoolType","Cake\\Database\\Type\\DateTimeType","Cake\\Database\\Type\\DateType","Cake\\Database\\Type\\DecimalType","Cake\\Database\\Type\\ExpressionTypeCasterTrait","Cake\\Database\\Type\\ExpressionTypeInterface","Cake\\Database\\Type\\FloatType","Cake\\Database\\Type\\IntegerType","Cake\\Database\\Type\\JsonType","Cake\\Database\\Type\\OptionalConvertInterface","Cake\\Database\\Type\\StringType","Cake\\Database\\Type\\TimeType","Cake\\Database\\Type\\UuidType","Cake\\Database\\TypedResultInterface","Cake\\Database\\TypedResultTrait","Cake\\Database\\ValueBinder","Cake\\Datasource\\ConnectionInterface","Cake\\Datasource\\ConnectionManager","Cake\\Datasource\\ConnectionRegistry","Cake\\Datasource\\EntityInterface","Cake\\Datasource\\EntityTrait","Cake\\Datasource\\Exception\\InvalidPrimaryKeyException","Cake\\Datasource\\Exception\\MissingDatasourceConfigException","Cake\\Datasource\\Exception\\MissingDatasourceException","Cake\\Datasource\\Exception\\MissingModelException","Cake\\Datasource\\Exception\\RecordNotFoundException","Cake\\Datasource\\FactoryLocator","Cake\\Datasource\\FixtureInterface","Cake\\Datasource\\InvalidPropertyInterface","Cake\\Datasource\\ModelAwareTrait","Cake\\Datasource\\QueryCacher","Cake\\Datasource\\QueryInterface","Cake\\Datasource\\QueryTrait","Cake\\Datasource\\RepositoryInterface","Cake\\Datasource\\ResultSetDecorator","Cake\\Datasource\\ResultSetInterface","Cake\\Datasource\\RuleInvoker","Cake\\Datasource\\RulesAwareTrait","Cake\\Datasource\\RulesChecker","Cake\\Datasource\\TableSchemaInterface","Cake\\Error\\BaseErrorHandler","Cake\\Error\\Debugger","Cake\\Error\\ErrorHandler","Cake\\Error\\ExceptionRenderer","Cake\\Error\\FatalErrorException","Cake\\Error\\Middleware\\ErrorHandlerMiddleware","Cake\\Error\\PHP7ErrorException","Cake\\Event\\Decorator\\AbstractDecorator","Cake\\Event\\Decorator\\ConditionDecorator","Cake\\Event\\Decorator\\SubjectFilterDecorator","Cake\\Event\\Event","Cake\\Event\\EventDispatcherInterface","Cake\\Event\\EventDispatcherTrait","Cake\\Event\\EventList","Cake\\Event\\EventListenerInterface","Cake\\Event\\EventManager","Cake\\Event\\EventManagerTrait","Cake\\Filesystem\\File","Cake\\Filesystem\\Folder","Cake\\Form\\Form","Cake\\Form\\Schema","Cake\\Http\\ActionDispatcher","Cake\\Http\\BaseApplication","Cake\\Http\\CallbackStream","Cake\\Http\\Client","Cake\\Http\\Client\\Adapter\\Stream","Cake\\Http\\Client\\Auth\\Basic","Cake\\Http\\Client\\Auth\\Digest","Cake\\Http\\Client\\Auth\\Oauth","Cake\\Http\\Client\\CookieCollection","Cake\\Http\\Client\\FormData","Cake\\Http\\Client\\FormDataPart","Cake\\Http\\Client\\Message","Cake\\Http\\Client\\Request","Cake\\Http\\Client\\Response","Cake\\Http\\ControllerFactory","Cake\\Http\\MiddlewareQueue","Cake\\Http\\RequestTransformer","Cake\\Http\\ResponseEmitter","Cake\\Http\\ResponseTransformer","Cake\\Http\\Runner","Cake\\Http\\Server","Cake\\Http\\ServerRequestFactory","Cake\\I18n\\ChainMessagesLoader","Cake\\I18n\\Date","Cake\\I18n\\DateFormatTrait","Cake\\I18n\\Formatter\\IcuFormatter","Cake\\I18n\\Formatter\\SprintfFormatter","Cake\\I18n\\FrozenDate","Cake\\I18n\\FrozenTime","Cake\\I18n\\I18n","Cake\\I18n\\MessagesFileLoader","Cake\\I18n\\Middleware\\LocaleSelectorMiddleware","Cake\\I18n\\Number","Cake\\I18n\\Parser\\MoFileParser","Cake\\I18n\\Parser\\PoFileParser","Cake\\I18n\\PluralRules","Cake\\I18n\\RelativeTimeFormatter","Cake\\I18n\\Time","Cake\\I18n\\Translator","Cake\\I18n\\TranslatorFactory","Cake\\I18n\\TranslatorRegistry","Cake\\Log\\Engine\\BaseLog","Cake\\Log\\Engine\\ConsoleLog","Cake\\Log\\Engine\\FileLog","Cake\\Log\\Engine\\SyslogLog","Cake\\Log\\Log","Cake\\Log\\LogEngineRegistry","Cake\\Log\\LogTrait","Cake\\Mailer\\AbstractTransport","Cake\\Mailer\\Email","Cake\\Mailer\\Exception\\MissingActionException","Cake\\Mailer\\Exception\\MissingMailerException","Cake\\Mailer\\Mailer","Cake\\Mailer\\MailerAwareTrait","Cake\\Mailer\\Transport\\DebugTransport","Cake\\Mailer\\Transport\\MailTransport","Cake\\Mailer\\Transport\\SmtpTransport","Cake\\Network\\CorsBuilder","Cake\\Network\\Exception\\BadRequestException","Cake\\Network\\Exception\\ConflictException","Cake\\Network\\Exception\\ForbiddenException","Cake\\Network\\Exception\\GoneException","Cake\\Network\\Exception\\HttpException","Cake\\Network\\Exception\\InternalErrorException","Cake\\Network\\Exception\\InvalidCsrfTokenException","Cake\\Network\\Exception\\MethodNotAllowedException","Cake\\Network\\Exception\\NotAcceptableException","Cake\\Network\\Exception\\NotFoundException","Cake\\Network\\Exception\\NotImplementedException","Cake\\Network\\Exception\\ServiceUnavailableException","Cake\\Network\\Exception\\SocketException","Cake\\Network\\Exception\\UnauthorizedException","Cake\\Network\\Exception\\UnavailableForLegalReasonsException","Cake\\Network\\Request","Cake\\Network\\Response","Cake\\Network\\Session","Cake\\Network\\Session\\CacheSession","Cake\\Network\\Session\\DatabaseSession","Cake\\Network\\Socket","Cake\\ORM\\Association","Cake\\ORM\\AssociationCollection","Cake\\ORM\\Association\\BelongsTo","Cake\\ORM\\Association\\BelongsToMany","Cake\\ORM\\Association\\DependentDeleteTrait","Cake\\ORM\\Association\\ExternalAssociationTrait","Cake\\ORM\\Association\\HasMany","Cake\\ORM\\Association\\HasOne","Cake\\ORM\\Association\\SelectableAssociationTrait","Cake\\ORM\\AssociationsNormalizerTrait","Cake\\ORM\\Behavior","Cake\\ORM\\BehaviorRegistry","Cake\\ORM\\Behavior\\CounterCacheBehavior","Cake\\ORM\\Behavior\\TimestampBehavior","Cake\\ORM\\Behavior\\TranslateBehavior","Cake\\ORM\\Behavior\\Translate\\TranslateTrait","Cake\\ORM\\Behavior\\TreeBehavior","Cake\\ORM\\EagerLoadable","Cake\\ORM\\EagerLoader","Cake\\ORM\\Entity","Cake\\ORM\\Exception\\MissingBehaviorException","Cake\\ORM\\Exception\\MissingEntityException","Cake\\ORM\\Exception\\MissingTableClassException","Cake\\ORM\\Exception\\RolledbackTransactionException","Cake\\ORM\\LazyEagerLoader","Cake\\ORM\\Locator\\LocatorAwareTrait","Cake\\ORM\\Locator\\LocatorInterface","Cake\\ORM\\Locator\\TableLocator","Cake\\ORM\\Marshaller","Cake\\ORM\\PropertyMarshalInterface","Cake\\ORM\\Query","Cake\\ORM\\ResultSet","Cake\\ORM\\Rule\\ExistsIn","Cake\\ORM\\Rule\\IsUnique","Cake\\ORM\\Rule\\ValidCount","Cake\\ORM\\RulesChecker","Cake\\ORM\\SaveOptionsBuilder","Cake\\ORM\\Table","Cake\\ORM\\TableRegistry","Cake\\Routing\\Dispatcher","Cake\\Routing\\DispatcherFactory","Cake\\Routing\\DispatcherFilter","Cake\\Routing\\Exception\\DuplicateNamedRouteException","Cake\\Routing\\Exception\\MissingControllerException","Cake\\Routing\\Exception\\MissingDispatcherFilterException","Cake\\Routing\\Exception\\MissingRouteException","Cake\\Routing\\Exception\\RedirectException","Cake\\Routing\\Filter\\AssetFilter","Cake\\Routing\\Filter\\ControllerFactoryFilter","Cake\\Routing\\Filter\\LocaleSelectorFilter","Cake\\Routing\\Filter\\RoutingFilter","Cake\\Routing\\Middleware\\AssetMiddleware","Cake\\Routing\\Middleware\\RoutingMiddleware","Cake\\Routing\\RequestActionTrait","Cake\\Routing\\RouteBuilder","Cake\\Routing\\RouteCollection","Cake\\Routing\\Route\\DashedRoute","Cake\\Routing\\Route\\InflectedRoute","Cake\\Routing\\Route\\PluginShortRoute","Cake\\Routing\\Route\\RedirectRoute","Cake\\Routing\\Route\\Route","Cake\\Routing\\Router","Cake\\Shell\\CacheShell","Cake\\Shell\\CommandListShell","Cake\\Shell\\CompletionShell","Cake\\Shell\\Helper\\ProgressHelper","Cake\\Shell\\Helper\\TableHelper","Cake\\Shell\\I18nShell","Cake\\Shell\\OrmCacheShell","Cake\\Shell\\PluginShell","Cake\\Shell\\RoutesShell","Cake\\Shell\\ServerShell","Cake\\Shell\\Task\\AssetsTask","Cake\\Shell\\Task\\CommandTask","Cake\\Shell\\Task\\ExtractTask","Cake\\Shell\\Task\\LoadTask","Cake\\Shell\\Task\\UnloadTask","Cake\\TestSuite\\EmailAssertTrait","Cake\\TestSuite\\Fixture\\FixtureManager","Cake\\TestSuite\\Fixture\\TestFixture","Cake\\TestSuite\\LegacyRequestDispatcher","Cake\\TestSuite\\MiddlewareDispatcher","Cake\\TestSuite\\StringCompareTrait","Cake\\TestSuite\\Stub\\ConsoleOutput","Cake\\TestSuite\\Stub\\Response","Cake\\Utility\\CookieCryptTrait","Cake\\Utility\\Crypto\\Mcrypt","Cake\\Utility\\Crypto\\OpenSsl","Cake\\Utility\\Exception\\XmlException","Cake\\Utility\\Hash","Cake\\Utility\\Inflector","Cake\\Utility\\MergeVariablesTrait","Cake\\Utility\\Security","Cake\\Utility\\Text","Cake\\Utility\\Xml","Cake\\Validation\\RulesProvider","Cake\\Validation\\ValidatableInterface","Cake\\Validation\\Validation","Cake\\Validation\\ValidationRule","Cake\\Validation\\ValidationSet","Cake\\Validation\\Validator","Cake\\Validation\\ValidatorAwareTrait","Cake\\View\\AjaxView","Cake\\View\\Cell","Cake\\View\\CellTrait","Cake\\View\\Exception\\MissingCellException","Cake\\View\\Exception\\MissingCellViewException","Cake\\View\\Exception\\MissingElementException","Cake\\View\\Exception\\MissingHelperException","Cake\\View\\Exception\\MissingLayoutException","Cake\\View\\Exception\\MissingTemplateException","Cake\\View\\Exception\\MissingViewException","Cake\\View\\Form\\ArrayContext","Cake\\View\\Form\\ContextInterface","Cake\\View\\Form\\EntityContext","Cake\\View\\Form\\FormContext","Cake\\View\\Form\\NullContext","Cake\\View\\Helper","Cake\\View\\HelperRegistry","Cake\\View\\Helper\\BreadcrumbsHelper","Cake\\View\\Helper\\FlashHelper","Cake\\View\\Helper\\FormHelper","Cake\\View\\Helper\\HtmlHelper","Cake\\View\\Helper\\IdGeneratorTrait","Cake\\View\\Helper\\NumberHelper","Cake\\View\\Helper\\PaginatorHelper","Cake\\View\\Helper\\RssHelper","Cake\\View\\Helper\\SecureFieldTokenTrait","Cake\\View\\Helper\\SessionHelper","Cake\\View\\Helper\\TextHelper","Cake\\View\\Helper\\TimeHelper","Cake\\View\\Helper\\UrlHelper","Cake\\View\\JsonView","Cake\\View\\SerializedView","Cake\\View\\StringTemplate","Cake\\View\\StringTemplateTrait","Cake\\View\\View","Cake\\View\\ViewBlock","Cake\\View\\ViewBuilder","Cake\\View\\ViewVarsTrait","Cake\\View\\Widget\\BasicWidget","Cake\\View\\Widget\\ButtonWidget","Cake\\View\\Widget\\CheckboxWidget","Cake\\View\\Widget\\DateTimeWidget","Cake\\View\\Widget\\FileWidget","Cake\\View\\Widget\\LabelWidget","Cake\\View\\Widget\\MultiCheckboxWidget","Cake\\View\\Widget\\NestingLabelWidget","Cake\\View\\Widget\\RadioWidget","Cake\\View\\Widget\\SelectBoxWidget","Cake\\View\\Widget\\TextareaWidget","Cake\\View\\Widget\\WidgetInterface","Cake\\View\\Widget\\WidgetRegistry","Cake\\View\\XmlView","Composer\\Installers\\AglInstaller","Composer\\Installers\\AimeosInstaller","Composer\\Installers\\AnnotateCmsInstaller","Composer\\Installers\\AsgardInstaller","Composer\\Installers\\AttogramInstaller","Composer\\Installers\\BaseInstaller","Composer\\Installers\\BitrixInstaller","Composer\\Installers\\BonefishInstaller","Composer\\Installers\\CakePHPInstaller","Composer\\Installers\\ChefInstaller","Composer\\Installers\\ClanCatsFrameworkInstaller","Composer\\Installers\\CockpitInstaller","Composer\\Installers\\CodeIgniterInstaller","Composer\\Installers\\Concrete5Installer","Composer\\Installers\\CraftInstaller","Composer\\Installers\\CroogoInstaller","Composer\\Installers\\DecibelInstaller","Composer\\Installers\\DokuWikiInstaller","Composer\\Installers\\DolibarrInstaller","Composer\\Installers\\DrupalInstaller","Composer\\Installers\\ElggInstaller","Composer\\Installers\\ExpressionEngineInstaller","Composer\\Installers\\FuelInstaller","Composer\\Installers\\FuelphpInstaller","Composer\\Installers\\GravInstaller","Composer\\Installers\\HuradInstaller","Composer\\Installers\\ImageCMSInstaller","Composer\\Installers\\JoomlaInstaller","Composer\\Installers\\KirbyInstaller","Composer\\Installers\\KodiCMSInstaller","Composer\\Installers\\KohanaInstaller","Composer\\Installers\\LaravelInstaller","Composer\\Installers\\LithiumInstaller","Composer\\Installers\\MODULEWorkInstaller","Composer\\Installers\\MODXEvoInstaller","Composer\\Installers\\MagentoInstaller","Composer\\Installers\\MakoInstaller","Composer\\Installers\\MauticInstaller","Composer\\Installers\\MediaWikiInstaller","Composer\\Installers\\MicroweberInstaller","Composer\\Installers\\MoodleInstaller","Composer\\Installers\\OctoberInstaller","Composer\\Installers\\OxidInstaller","Composer\\Installers\\PPIInstaller","Composer\\Installers\\PhiftyInstaller","Composer\\Installers\\PhpBBInstaller","Composer\\Installers\\PimcoreInstaller","Composer\\Installers\\PiwikInstaller","Composer\\Installers\\PlentymarketsInstaller","Composer\\Installers\\PrestashopInstaller","Composer\\Installers\\PuppetInstaller","Composer\\Installers\\RadPHPInstaller","Composer\\Installers\\ReIndexInstaller","Composer\\Installers\\RedaxoInstaller","Composer\\Installers\\RoundcubeInstaller","Composer\\Installers\\SMFInstaller","Composer\\Installers\\ShopwareInstaller","Composer\\Installers\\SilverStripeInstaller","Composer\\Installers\\Symfony1Installer","Composer\\Installers\\TYPO3CmsInstaller","Composer\\Installers\\TYPO3FlowInstaller","Composer\\Installers\\TheliaInstaller","Composer\\Installers\\TuskInstaller","Composer\\Installers\\VanillaInstaller","Composer\\Installers\\WHMCSInstaller","Composer\\Installers\\WolfCMSInstaller","Composer\\Installers\\WordPressInstaller","Composer\\Installers\\YawikInstaller","Composer\\Installers\\ZendInstaller","Composer\\Installers\\ZikulaInstaller","CurrencyConverter\\Controller\\Component\\CurrencyConverterComponent","CurrencyConverter\\Model\\Entity\\CurrencyConverter","CurrencyConverter\\Model\\Table\\CurrencyConvertersTable","DeepCopy\\DeepCopy","DeepCopy\\Exception\\CloneException","DeepCopy\\Filter\\Doctrine\\DoctrineCollectionFilter","DeepCopy\\Filter\\Doctrine\\DoctrineEmptyCollectionFilter","DeepCopy\\Filter\\Doctrine\\DoctrineProxyFilter","DeepCopy\\Filter\\Filter","DeepCopy\\Filter\\KeepFilter","DeepCopy\\Filter\\ReplaceFilter","DeepCopy\\Filter\\SetNullFilter","DeepCopy\\Matcher\\Doctrine\\DoctrineProxyMatcher","DeepCopy\\Matcher\\Matcher","DeepCopy\\Matcher\\PropertyMatcher","DeepCopy\\Matcher\\PropertyNameMatcher","DeepCopy\\Matcher\\PropertyTypeMatcher","DeepCopy\\Reflection\\ReflectionHelper","DeepCopy\\TypeFilter\\ReplaceFilter","DeepCopy\\TypeFilter\\ShallowCopyFilter","DeepCopy\\TypeFilter\\Spl\\SplDoublyLinkedList","DeepCopy\\TypeFilter\\TypeFilter","DeepCopy\\TypeMatcher\\TypeMatcher","Doctrine\\Instantiator\\Exception\\ExceptionInterface","Doctrine\\Instantiator\\Exception\\InvalidArgumentException","Doctrine\\Instantiator\\Exception\\UnexpectedValueException","Doctrine\\Instantiator\\Instantiator","Doctrine\\Instantiator\\InstantiatorInterface","File_Iterator","File_Iterator_Facade","File_Iterator_Factory","Generic_Sniffs_Arrays_DisallowLongArraySyntaxSniff","Generic_Sniffs_Arrays_DisallowShortArraySyntaxSniff","Generic_Sniffs_Classes_DuplicateClassNameSniff","Generic_Sniffs_Classes_OpeningBraceSameLineSniff","Generic_Sniffs_CodeAnalysis_EmptyStatementSniff","Generic_Sniffs_CodeAnalysis_ForLoopShouldBeWhileLoopSniff","Generic_Sniffs_CodeAnalysis_ForLoopWithTestFunctionCallSniff","Generic_Sniffs_CodeAnalysis_JumbledIncrementerSniff","Generic_Sniffs_CodeAnalysis_UnconditionalIfStatementSniff","Generic_Sniffs_CodeAnalysis_UnnecessaryFinalModifierSniff","Generic_Sniffs_CodeAnalysis_UnusedFunctionParameterSniff","Generic_Sniffs_CodeAnalysis_UselessOverridingMethodSniff","Generic_Sniffs_Commenting_DocCommentSniff","Generic_Sniffs_Commenting_FixmeSniff","Generic_Sniffs_Commenting_TodoSniff","Generic_Sniffs_ControlStructures_InlineControlStructureSniff","Generic_Sniffs_Debug_CSSLintSniff","Generic_Sniffs_Debug_ClosureLinterSniff","Generic_Sniffs_Debug_JSHintSniff","Generic_Sniffs_Files_ByteOrderMarkSniff","Generic_Sniffs_Files_EndFileNewlineSniff","Generic_Sniffs_Files_EndFileNoNewlineSniff","Generic_Sniffs_Files_InlineHTMLSniff","Generic_Sniffs_Files_LineEndingsSniff","Generic_Sniffs_Files_LineLengthSniff","Generic_Sniffs_Files_LowercasedFilenameSniff","Generic_Sniffs_Files_OneClassPerFileSniff","Generic_Sniffs_Files_OneInterfacePerFileSniff","Generic_Sniffs_Files_OneTraitPerFileSniff","Generic_Sniffs_Formatting_DisallowMultipleStatementsSniff","Generic_Sniffs_Formatting_MultipleStatementAlignmentSniff","Generic_Sniffs_Formatting_NoSpaceAfterCastSniff","Generic_Sniffs_Formatting_SpaceAfterCastSniff","Generic_Sniffs_Formatting_SpaceAfterNotSniff","Generic_Sniffs_Functions_CallTimePassByReferenceSniff","Generic_Sniffs_Functions_FunctionCallArgumentSpacingSniff","Generic_Sniffs_Functions_OpeningFunctionBraceBsdAllmanSniff","Generic_Sniffs_Functions_OpeningFunctionBraceKernighanRitchieSniff","Generic_Sniffs_Metrics_CyclomaticComplexitySniff","Generic_Sniffs_Metrics_NestingLevelSniff","Generic_Sniffs_NamingConventions_CamelCapsFunctionNameSniff","Generic_Sniffs_NamingConventions_ConstructorNameSniff","Generic_Sniffs_NamingConventions_UpperCaseConstantNameSniff","Generic_Sniffs_PHP_BacktickOperatorSniff","Generic_Sniffs_PHP_CharacterBeforePHPOpeningTagSniff","Generic_Sniffs_PHP_ClosingPHPTagSniff","Generic_Sniffs_PHP_DeprecatedFunctionsSniff","Generic_Sniffs_PHP_DisallowAlternativePHPTagsSniff","Generic_Sniffs_PHP_DisallowShortOpenTagSniff","Generic_Sniffs_PHP_ForbiddenFunctionsSniff","Generic_Sniffs_PHP_LowerCaseConstantSniff","Generic_Sniffs_PHP_LowerCaseKeywordSniff","Generic_Sniffs_PHP_NoSilencedErrorsSniff","Generic_Sniffs_PHP_SAPIUsageSniff","Generic_Sniffs_PHP_SyntaxSniff","Generic_Sniffs_PHP_UpperCaseConstantSniff","Generic_Sniffs_Strings_UnnecessaryStringConcatSniff","Generic_Sniffs_VersionControl_SubversionPropertiesSniff","Generic_Sniffs_WhiteSpace_DisallowSpaceIndentSniff","Generic_Sniffs_WhiteSpace_DisallowTabIndentSniff","Generic_Sniffs_WhiteSpace_ScopeIndentSniff","MySource_Sniffs_CSS_BrowserSpecificStylesSniff","MySource_Sniffs_Channels_DisallowSelfActionsSniff","MySource_Sniffs_Channels_IncludeOwnSystemSniff","MySource_Sniffs_Channels_IncludeSystemSniff","MySource_Sniffs_Channels_UnusedSystemSniff","MySource_Sniffs_Commenting_FunctionCommentSniff","MySource_Sniffs_Debug_DebugCodeSniff","MySource_Sniffs_Debug_FirebugConsoleSniff","MySource_Sniffs_Objects_AssignThisSniff","MySource_Sniffs_Objects_CreateWidgetTypeCallbackSniff","MySource_Sniffs_Objects_DisallowNewWidgetSniff","MySource_Sniffs_PHP_AjaxNullComparisonSniff","MySource_Sniffs_PHP_EvalObjectFactorySniff","MySource_Sniffs_PHP_GetRequestDataSniff","MySource_Sniffs_PHP_ReturnFunctionValueSniff","MySource_Sniffs_Strings_JoinStringsSniff","PEAR_Sniffs_Classes_ClassDeclarationSniff","PEAR_Sniffs_Commenting_ClassCommentSniff","PEAR_Sniffs_Commenting_FileCommentSniff","PEAR_Sniffs_Commenting_FunctionCommentSniff","PEAR_Sniffs_Commenting_InlineCommentSniff","PEAR_Sniffs_ControlStructures_ControlSignatureSniff","PEAR_Sniffs_ControlStructures_MultiLineConditionSniff","PEAR_Sniffs_Files_IncludingFileSniff","PEAR_Sniffs_Formatting_MultiLineAssignmentSniff","PEAR_Sniffs_Functions_FunctionCallSignatureSniff","PEAR_Sniffs_Functions_FunctionDeclarationSniff","PEAR_Sniffs_Functions_ValidDefaultValueSniff","PEAR_Sniffs_NamingConventions_ValidClassNameSniff","PEAR_Sniffs_NamingConventions_ValidFunctionNameSniff","PEAR_Sniffs_NamingConventions_ValidVariableNameSniff","PEAR_Sniffs_WhiteSpace_ObjectOperatorIndentSniff","PEAR_Sniffs_WhiteSpace_ScopeClosingBraceSniff","PEAR_Sniffs_WhiteSpace_ScopeIndentSniff","PHPUnit\\Exception","PHPUnit\\Framework\\Assert","PHPUnit\\Framework\\AssertionFailedError","PHPUnit\\Framework\\BaseTestListener","PHPUnit\\Framework\\CodeCoverageException","PHPUnit\\Framework\\Constraint\\ArrayHasKey","PHPUnit\\Framework\\Constraint\\ArraySubset","PHPUnit\\Framework\\Constraint\\Attribute","PHPUnit\\Framework\\Constraint\\Callback","PHPUnit\\Framework\\Constraint\\ClassHasAttribute","PHPUnit\\Framework\\Constraint\\ClassHasStaticAttribute","PHPUnit\\Framework\\Constraint\\Composite","PHPUnit\\Framework\\Constraint\\Constraint","PHPUnit\\Framework\\Constraint\\Count","PHPUnit\\Framework\\Constraint\\DirectoryExists","PHPUnit\\Framework\\Constraint\\Exception","PHPUnit\\Framework\\Constraint\\ExceptionCode","PHPUnit\\Framework\\Constraint\\ExceptionMessage","PHPUnit\\Framework\\Constraint\\ExceptionMessageRegularExpression","PHPUnit\\Framework\\Constraint\\FileExists","PHPUnit\\Framework\\Constraint\\GreaterThan","PHPUnit\\Framework\\Constraint\\IsAnything","PHPUnit\\Framework\\Constraint\\IsEmpty","PHPUnit\\Framework\\Constraint\\IsEqual","PHPUnit\\Framework\\Constraint\\IsFalse","PHPUnit\\Framework\\Constraint\\IsFinite","PHPUnit\\Framework\\Constraint\\IsIdentical","PHPUnit\\Framework\\Constraint\\IsInfinite","PHPUnit\\Framework\\Constraint\\IsInstanceOf","PHPUnit\\Framework\\Constraint\\IsJson","PHPUnit\\Framework\\Constraint\\IsNan","PHPUnit\\Framework\\Constraint\\IsNull","PHPUnit\\Framework\\Constraint\\IsReadable","PHPUnit\\Framework\\Constraint\\IsTrue","PHPUnit\\Framework\\Constraint\\IsType","PHPUnit\\Framework\\Constraint\\IsWritable","PHPUnit\\Framework\\Constraint\\JsonMatches","PHPUnit\\Framework\\Constraint\\JsonMatchesErrorMessageProvider","PHPUnit\\Framework\\Constraint\\LessThan","PHPUnit\\Framework\\Constraint\\LogicalAnd","PHPUnit\\Framework\\Constraint\\LogicalNot","PHPUnit\\Framework\\Constraint\\LogicalOr","PHPUnit\\Framework\\Constraint\\LogicalXor","PHPUnit\\Framework\\Constraint\\ObjectHasAttribute","PHPUnit\\Framework\\Constraint\\RegularExpression","PHPUnit\\Framework\\Constraint\\SameSize","PHPUnit\\Framework\\Constraint\\StringContains","PHPUnit\\Framework\\Constraint\\StringEndsWith","PHPUnit\\Framework\\Constraint\\StringMatchesFormatDescription","PHPUnit\\Framework\\Constraint\\StringStartsWith","PHPUnit\\Framework\\Constraint\\TraversableContains","PHPUnit\\Framework\\Constraint\\TraversableContainsOnly","PHPUnit\\Framework\\CoveredCodeNotExecutedException","PHPUnit\\Framework\\DataProviderTestSuite","PHPUnit\\Framework\\Error\\Deprecated","PHPUnit\\Framework\\Error\\Error","PHPUnit\\Framework\\Error\\Notice","PHPUnit\\Framework\\Error\\Warning","PHPUnit\\Framework\\Exception","PHPUnit\\Framework\\ExceptionWrapper","PHPUnit\\Framework\\ExpectationFailedException","PHPUnit\\Framework\\IncompleteTest","PHPUnit\\Framework\\IncompleteTestCase","PHPUnit\\Framework\\IncompleteTestError","PHPUnit\\Framework\\InvalidCoversTargetException","PHPUnit\\Framework\\MissingCoversAnnotationException","PHPUnit\\Framework\\OutputError","PHPUnit\\Framework\\RiskyTest","PHPUnit\\Framework\\RiskyTestError","PHPUnit\\Framework\\SelfDescribing","PHPUnit\\Framework\\SkippedTest","PHPUnit\\Framework\\SkippedTestCase","PHPUnit\\Framework\\SkippedTestError","PHPUnit\\Framework\\SkippedTestSuiteError","PHPUnit\\Framework\\SyntheticError","PHPUnit\\Framework\\Test","PHPUnit\\Framework\\TestCase","PHPUnit\\Framework\\TestFailure","PHPUnit\\Framework\\TestListener","PHPUnit\\Framework\\TestResult","PHPUnit\\Framework\\TestSuite","PHPUnit\\Framework\\TestSuiteIterator","PHPUnit\\Framework\\UnintentionallyCoveredCodeError","PHPUnit\\Framework\\Warning","PHPUnit\\Framework\\WarningTestCase","PHPUnit\\Runner\\BaseTestRunner","PHPUnit\\Runner\\Exception","PHPUnit\\Runner\\Filter\\ExcludeGroupFilterIterator","PHPUnit\\Runner\\Filter\\Factory","PHPUnit\\Runner\\Filter\\GroupFilterIterator","PHPUnit\\Runner\\Filter\\IncludeGroupFilterIterator","PHPUnit\\Runner\\Filter\\NameFilterIterator","PHPUnit\\Runner\\PhptTestCase","PHPUnit\\Runner\\StandardTestSuiteLoader","PHPUnit\\Runner\\TestSuiteLoader","PHPUnit\\Runner\\Version","PHPUnit\\TextUI\\Command","PHPUnit\\TextUI\\ResultPrinter","PHPUnit\\TextUI\\TestRunner","PHPUnit\\Util\\Blacklist","PHPUnit\\Util\\Configuration","PHPUnit\\Util\\ConfigurationGenerator","PHPUnit\\Util\\ErrorHandler","PHPUnit\\Util\\Fileloader","PHPUnit\\Util\\Filesystem","PHPUnit\\Util\\Filter","PHPUnit\\Util\\Getopt","PHPUnit\\Util\\GlobalState","PHPUnit\\Util\\InvalidArgumentHelper","PHPUnit\\Util\\Log\\JUnit","PHPUnit\\Util\\Log\\TeamCity","PHPUnit\\Util\\PHP\\AbstractPhpProcess","PHPUnit\\Util\\PHP\\DefaultPhpProcess","PHPUnit\\Util\\PHP\\WindowsPhpProcess","PHPUnit\\Util\\Printer","PHPUnit\\Util\\RegularExpression","PHPUnit\\Util\\Test","PHPUnit\\Util\\TestDox\\HtmlResultPrinter","PHPUnit\\Util\\TestDox\\NamePrettifier","PHPUnit\\Util\\TestDox\\ResultPrinter","PHPUnit\\Util\\TestDox\\TextResultPrinter","PHPUnit\\Util\\TestDox\\XmlResultPrinter","PHPUnit\\Util\\Type","PHPUnit\\Util\\Xml","PHPUnit_Framework_MockObject_BadMethodCallException","PHPUnit_Framework_MockObject_Builder_Identity","PHPUnit_Framework_MockObject_Builder_InvocationMocker","PHPUnit_Framework_MockObject_Builder_Match","PHPUnit_Framework_MockObject_Builder_MethodNameMatch","PHPUnit_Framework_MockObject_Builder_Namespace","PHPUnit_Framework_MockObject_Builder_ParametersMatch","PHPUnit_Framework_MockObject_Builder_Stub","PHPUnit_Framework_MockObject_Exception","PHPUnit_Framework_MockObject_Generator","PHPUnit_Framework_MockObject_Invocation","PHPUnit_Framework_MockObject_InvocationMocker","PHPUnit_Framework_MockObject_Invocation_Object","PHPUnit_Framework_MockObject_Invocation_Static","PHPUnit_Framework_MockObject_Invokable","PHPUnit_Framework_MockObject_Matcher","PHPUnit_Framework_MockObject_Matcher_AnyInvokedCount","PHPUnit_Framework_MockObject_Matcher_AnyParameters","PHPUnit_Framework_MockObject_Matcher_ConsecutiveParameters","PHPUnit_Framework_MockObject_Matcher_Invocation","PHPUnit_Framework_MockObject_Matcher_InvokedAtIndex","PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastCount","PHPUnit_Framework_MockObject_Matcher_InvokedAtLeastOnce","PHPUnit_Framework_MockObject_Matcher_InvokedAtMostCount","PHPUnit_Framework_MockObject_Matcher_InvokedCount","PHPUnit_Framework_MockObject_Matcher_InvokedRecorder","PHPUnit_Framework_MockObject_Matcher_MethodName","PHPUnit_Framework_MockObject_Matcher_Parameters","PHPUnit_Framework_MockObject_Matcher_StatelessInvocation","PHPUnit_Framework_MockObject_MockBuilder","PHPUnit_Framework_MockObject_MockObject","PHPUnit_Framework_MockObject_RuntimeException","PHPUnit_Framework_MockObject_Stub","PHPUnit_Framework_MockObject_Stub_ConsecutiveCalls","PHPUnit_Framework_MockObject_Stub_Exception","PHPUnit_Framework_MockObject_Stub_MatcherCollection","PHPUnit_Framework_MockObject_Stub_Return","PHPUnit_Framework_MockObject_Stub_ReturnArgument","PHPUnit_Framework_MockObject_Stub_ReturnCallback","PHPUnit_Framework_MockObject_Stub_ReturnReference","PHPUnit_Framework_MockObject_Stub_ReturnSelf","PHPUnit_Framework_MockObject_Stub_ReturnValueMap","PHPUnit_Framework_MockObject_Verifiable","PHP_CodeSniffer","PHP_CodeSniffer_CLI","PHP_CodeSniffer_DocGenerators_Generator","PHP_CodeSniffer_DocGenerators_HTML","PHP_CodeSniffer_DocGenerators_Markdown","PHP_CodeSniffer_DocGenerators_Text","PHP_CodeSniffer_Exception","PHP_CodeSniffer_File","PHP_CodeSniffer_Fixer","PHP_CodeSniffer_Report","PHP_CodeSniffer_Reporting","PHP_CodeSniffer_Reports_Cbf","PHP_CodeSniffer_Reports_Checkstyle","PHP_CodeSniffer_Reports_Csv","PHP_CodeSniffer_Reports_Diff","PHP_CodeSniffer_Reports_Emacs","PHP_CodeSniffer_Reports_Full","PHP_CodeSniffer_Reports_Gitblame","PHP_CodeSniffer_Reports_Hgblame","PHP_CodeSniffer_Reports_Info","PHP_CodeSniffer_Reports_Json","PHP_CodeSniffer_Reports_Junit","PHP_CodeSniffer_Reports_Notifysend","PHP_CodeSniffer_Reports_Source","PHP_CodeSniffer_Reports_Summary","PHP_CodeSniffer_Reports_Svnblame","PHP_CodeSniffer_Reports_VersionControl","PHP_CodeSniffer_Reports_Xml","PHP_CodeSniffer_Sniff","PHP_CodeSniffer_Standards_AbstractPatternSniff","PHP_CodeSniffer_Standards_AbstractScopeSniff","PHP_CodeSniffer_Standards_AbstractVariableSniff","PHP_CodeSniffer_Standards_IncorrectPatternException","PHP_CodeSniffer_Tokenizers_CSS","PHP_CodeSniffer_Tokenizers_Comment","PHP_CodeSniffer_Tokenizers_JS","PHP_CodeSniffer_Tokenizers_PHP","PHP_CodeSniffer_Tokens","PHP_Timer","PHP_Token","PHP_TokenWithScope","PHP_TokenWithScopeAndVisibility","PHP_Token_ABSTRACT","PHP_Token_AMPERSAND","PHP_Token_AND_EQUAL","PHP_Token_ARRAY","PHP_Token_ARRAY_CAST","PHP_Token_AS","PHP_Token_ASYNC","PHP_Token_AT","PHP_Token_AWAIT","PHP_Token_BACKTICK","PHP_Token_BAD_CHARACTER","PHP_Token_BOOLEAN_AND","PHP_Token_BOOLEAN_OR","PHP_Token_BOOL_CAST","PHP_Token_BREAK","PHP_Token_CALLABLE","PHP_Token_CARET","PHP_Token_CASE","PHP_Token_CATCH","PHP_Token_CHARACTER","PHP_Token_CLASS","PHP_Token_CLASS_C","PHP_Token_CLASS_NAME_CONSTANT","PHP_Token_CLONE","PHP_Token_CLOSE_BRACKET","PHP_Token_CLOSE_CURLY","PHP_Token_CLOSE_SQUARE","PHP_Token_CLOSE_TAG","PHP_Token_COALESCE","PHP_Token_COLON","PHP_Token_COMMA","PHP_Token_COMMENT","PHP_Token_COMPILER_HALT_OFFSET","PHP_Token_CONCAT_EQUAL","PHP_Token_CONST","PHP_Token_CONSTANT_ENCAPSED_STRING","PHP_Token_CONTINUE","PHP_Token_CURLY_OPEN","PHP_Token_DEC","PHP_Token_DECLARE","PHP_Token_DEFAULT","PHP_Token_DIR","PHP_Token_DIV","PHP_Token_DIV_EQUAL","PHP_Token_DNUMBER","PHP_Token_DO","PHP_Token_DOC_COMMENT","PHP_Token_DOLLAR","PHP_Token_DOLLAR_OPEN_CURLY_BRACES","PHP_Token_DOT","PHP_Token_DOUBLE_ARROW","PHP_Token_DOUBLE_CAST","PHP_Token_DOUBLE_COLON","PHP_Token_DOUBLE_QUOTES","PHP_Token_ECHO","PHP_Token_ELLIPSIS","PHP_Token_ELSE","PHP_Token_ELSEIF","PHP_Token_EMPTY","PHP_Token_ENCAPSED_AND_WHITESPACE","PHP_Token_ENDDECLARE","PHP_Token_ENDFOR","PHP_Token_ENDFOREACH","PHP_Token_ENDIF","PHP_Token_ENDSWITCH","PHP_Token_ENDWHILE","PHP_Token_END_HEREDOC","PHP_Token_ENUM","PHP_Token_EQUAL","PHP_Token_EQUALS","PHP_Token_EVAL","PHP_Token_EXCLAMATION_MARK","PHP_Token_EXIT","PHP_Token_EXTENDS","PHP_Token_FILE","PHP_Token_FINAL","PHP_Token_FINALLY","PHP_Token_FOR","PHP_Token_FOREACH","PHP_Token_FUNCTION","PHP_Token_FUNC_C","PHP_Token_GLOBAL","PHP_Token_GOTO","PHP_Token_GT","PHP_Token_HALT_COMPILER","PHP_Token_IF","PHP_Token_IMPLEMENTS","PHP_Token_IN","PHP_Token_INC","PHP_Token_INCLUDE","PHP_Token_INCLUDE_ONCE","PHP_Token_INLINE_HTML","PHP_Token_INSTANCEOF","PHP_Token_INSTEADOF","PHP_Token_INTERFACE","PHP_Token_INT_CAST","PHP_Token_ISSET","PHP_Token_IS_EQUAL","PHP_Token_IS_GREATER_OR_EQUAL","PHP_Token_IS_IDENTICAL","PHP_Token_IS_NOT_EQUAL","PHP_Token_IS_NOT_IDENTICAL","PHP_Token_IS_SMALLER_OR_EQUAL","PHP_Token_Includes","PHP_Token_JOIN","PHP_Token_LAMBDA_ARROW","PHP_Token_LAMBDA_CP","PHP_Token_LAMBDA_OP","PHP_Token_LINE","PHP_Token_LIST","PHP_Token_LNUMBER","PHP_Token_LOGICAL_AND","PHP_Token_LOGICAL_OR","PHP_Token_LOGICAL_XOR","PHP_Token_LT","PHP_Token_METHOD_C","PHP_Token_MINUS","PHP_Token_MINUS_EQUAL","PHP_Token_MOD_EQUAL","PHP_Token_MULT","PHP_Token_MUL_EQUAL","PHP_Token_NAMESPACE","PHP_Token_NEW","PHP_Token_NS_C","PHP_Token_NS_SEPARATOR","PHP_Token_NUM_STRING","PHP_Token_OBJECT_CAST","PHP_Token_OBJECT_OPERATOR","PHP_Token_ONUMBER","PHP_Token_OPEN_BRACKET","PHP_Token_OPEN_CURLY","PHP_Token_OPEN_SQUARE","PHP_Token_OPEN_TAG","PHP_Token_OPEN_TAG_WITH_ECHO","PHP_Token_OR_EQUAL","PHP_Token_PAAMAYIM_NEKUDOTAYIM","PHP_Token_PERCENT","PHP_Token_PIPE","PHP_Token_PLUS","PHP_Token_PLUS_EQUAL","PHP_Token_POW","PHP_Token_POW_EQUAL","PHP_Token_PRINT","PHP_Token_PRIVATE","PHP_Token_PROTECTED","PHP_Token_PUBLIC","PHP_Token_QUESTION_MARK","PHP_Token_REQUIRE","PHP_Token_REQUIRE_ONCE","PHP_Token_RETURN","PHP_Token_SEMICOLON","PHP_Token_SHAPE","PHP_Token_SL","PHP_Token_SL_EQUAL","PHP_Token_SPACESHIP","PHP_Token_SR","PHP_Token_SR_EQUAL","PHP_Token_START_HEREDOC","PHP_Token_STATIC","PHP_Token_STRING","PHP_Token_STRING_CAST","PHP_Token_STRING_VARNAME","PHP_Token_SUPER","PHP_Token_SWITCH","PHP_Token_Stream","PHP_Token_Stream_CachingFactory","PHP_Token_THROW","PHP_Token_TILDE","PHP_Token_TRAIT","PHP_Token_TRAIT_C","PHP_Token_TRY","PHP_Token_TYPE","PHP_Token_TYPELIST_GT","PHP_Token_TYPELIST_LT","PHP_Token_UNSET","PHP_Token_UNSET_CAST","PHP_Token_USE","PHP_Token_USE_FUNCTION","PHP_Token_VAR","PHP_Token_VARIABLE","PHP_Token_WHERE","PHP_Token_WHILE","PHP_Token_WHITESPACE","PHP_Token_XHP_ATTRIBUTE","PHP_Token_XHP_CATEGORY","PHP_Token_XHP_CATEGORY_LABEL","PHP_Token_XHP_CHILDREN","PHP_Token_XHP_LABEL","PHP_Token_XHP_REQUIRED","PHP_Token_XHP_TAG_GT","PHP_Token_XHP_TAG_LT","PHP_Token_XHP_TEXT","PHP_Token_XOR_EQUAL","PHP_Token_YIELD","PHP_Token_YIELD_FROM","PSR1_Sniffs_Classes_ClassDeclarationSniff","PSR1_Sniffs_Files_SideEffectsSniff","PSR1_Sniffs_Methods_CamelCapsMethodNameSniff","PSR2_Sniffs_Classes_ClassDeclarationSniff","PSR2_Sniffs_Classes_PropertyDeclarationSniff","PSR2_Sniffs_ControlStructures_ControlStructureSpacingSniff","PSR2_Sniffs_ControlStructures_ElseIfDeclarationSniff","PSR2_Sniffs_ControlStructures_SwitchDeclarationSniff","PSR2_Sniffs_Files_ClosingTagSniff","PSR2_Sniffs_Files_EndFileNewlineSniff","PSR2_Sniffs_Methods_FunctionCallSignatureSniff","PSR2_Sniffs_Methods_FunctionClosingBraceSniff","PSR2_Sniffs_Methods_MethodDeclarationSniff","PSR2_Sniffs_Namespaces_NamespaceDeclarationSniff","PSR2_Sniffs_Namespaces_UseDeclarationSniff","Prophecy\\Argument","Prophecy\\Argument\\ArgumentsWildcard","Prophecy\\Argument\\Token\\AnyValueToken","Prophecy\\Argument\\Token\\AnyValuesToken","Prophecy\\Argument\\Token\\ApproximateValueToken","Prophecy\\Argument\\Token\\ArrayCountToken","Prophecy\\Argument\\Token\\ArrayEntryToken","Prophecy\\Argument\\Token\\ArrayEveryEntryToken","Prophecy\\Argument\\Token\\CallbackToken","Prophecy\\Argument\\Token\\ExactValueToken","Prophecy\\Argument\\Token\\IdenticalValueToken","Prophecy\\Argument\\Token\\LogicalAndToken","Prophecy\\Argument\\Token\\LogicalNotToken","Prophecy\\Argument\\Token\\ObjectStateToken","Prophecy\\Argument\\Token\\StringContainsToken","Prophecy\\Argument\\Token\\TokenInterface","Prophecy\\Argument\\Token\\TypeToken","Prophecy\\Call\\Call","Prophecy\\Call\\CallCenter","Prophecy\\Comparator\\ClosureComparator","Prophecy\\Comparator\\Factory","Prophecy\\Comparator\\ProphecyComparator","Prophecy\\Doubler\\CachedDoubler","Prophecy\\Doubler\\ClassPatch\\ClassPatchInterface","Prophecy\\Doubler\\ClassPatch\\DisableConstructorPatch","Prophecy\\Doubler\\ClassPatch\\HhvmExceptionPatch","Prophecy\\Doubler\\ClassPatch\\KeywordPatch","Prophecy\\Doubler\\ClassPatch\\MagicCallPatch","Prophecy\\Doubler\\ClassPatch\\ProphecySubjectPatch","Prophecy\\Doubler\\ClassPatch\\ReflectionClassNewInstancePatch","Prophecy\\Doubler\\ClassPatch\\SplFileInfoPatch","Prophecy\\Doubler\\ClassPatch\\TraversablePatch","Prophecy\\Doubler\\DoubleInterface","Prophecy\\Doubler\\Doubler","Prophecy\\Doubler\\Generator\\ClassCodeGenerator","Prophecy\\Doubler\\Generator\\ClassCreator","Prophecy\\Doubler\\Generator\\ClassMirror","Prophecy\\Doubler\\Generator\\Node\\ArgumentNode","Prophecy\\Doubler\\Generator\\Node\\ClassNode","Prophecy\\Doubler\\Generator\\Node\\MethodNode","Prophecy\\Doubler\\Generator\\ReflectionInterface","Prophecy\\Doubler\\LazyDouble","Prophecy\\Doubler\\NameGenerator","Prophecy\\Exception\\Call\\UnexpectedCallException","Prophecy\\Exception\\Doubler\\ClassCreatorException","Prophecy\\Exception\\Doubler\\ClassMirrorException","Prophecy\\Exception\\Doubler\\ClassNotFoundException","Prophecy\\Exception\\Doubler\\DoubleException","Prophecy\\Exception\\Doubler\\DoublerException","Prophecy\\Exception\\Doubler\\InterfaceNotFoundException","Prophecy\\Exception\\Doubler\\MethodNotExtendableException","Prophecy\\Exception\\Doubler\\MethodNotFoundException","Prophecy\\Exception\\Doubler\\ReturnByReferenceException","Prophecy\\Exception\\Exception","Prophecy\\Exception\\InvalidArgumentException","Prophecy\\Exception\\Prediction\\AggregateException","Prophecy\\Exception\\Prediction\\FailedPredictionException","Prophecy\\Exception\\Prediction\\NoCallsException","Prophecy\\Exception\\Prediction\\PredictionException","Prophecy\\Exception\\Prediction\\UnexpectedCallsCountException","Prophecy\\Exception\\Prediction\\UnexpectedCallsException","Prophecy\\Exception\\Prophecy\\MethodProphecyException","Prophecy\\Exception\\Prophecy\\ObjectProphecyException","Prophecy\\Exception\\Prophecy\\ProphecyException","Prophecy\\PhpDocumentor\\ClassAndInterfaceTagRetriever","Prophecy\\PhpDocumentor\\ClassTagRetriever","Prophecy\\PhpDocumentor\\LegacyClassTagRetriever","Prophecy\\PhpDocumentor\\MethodTagRetrieverInterface","Prophecy\\Prediction\\CallPrediction","Prophecy\\Prediction\\CallTimesPrediction","Prophecy\\Prediction\\CallbackPrediction","Prophecy\\Prediction\\NoCallsPrediction","Prophecy\\Prediction\\PredictionInterface","Prophecy\\Promise\\CallbackPromise","Prophecy\\Promise\\PromiseInterface","Prophecy\\Promise\\ReturnArgumentPromise","Prophecy\\Promise\\ReturnPromise","Prophecy\\Promise\\ThrowPromise","Prophecy\\Prophecy\\MethodProphecy","Prophecy\\Prophecy\\ObjectProphecy","Prophecy\\Prophecy\\ProphecyInterface","Prophecy\\Prophecy\\ProphecySubjectInterface","Prophecy\\Prophecy\\Revealer","Prophecy\\Prophecy\\RevealerInterface","Prophecy\\Prophet","Prophecy\\Util\\ExportUtil","Prophecy\\Util\\StringUtil","Psr\\Http\\Message\\MessageInterface","Psr\\Http\\Message\\RequestInterface","Psr\\Http\\Message\\ResponseInterface","Psr\\Http\\Message\\ServerRequestInterface","Psr\\Http\\Message\\StreamInterface","Psr\\Http\\Message\\UploadedFileInterface","Psr\\Http\\Message\\UriInterface","Psr\\Log\\AbstractLogger","Psr\\Log\\InvalidArgumentException","Psr\\Log\\LogLevel","Psr\\Log\\LoggerAwareInterface","Psr\\Log\\LoggerAwareTrait","Psr\\Log\\LoggerInterface","Psr\\Log\\LoggerTrait","Psr\\Log\\NullLogger","SebastianBergmann\\CodeCoverage\\CodeCoverage","SebastianBergmann\\CodeCoverage\\CoveredCodeNotExecutedException","SebastianBergmann\\CodeCoverage\\Driver\\Driver","SebastianBergmann\\CodeCoverage\\Driver\\HHVM","SebastianBergmann\\CodeCoverage\\Driver\\PHPDBG","SebastianBergmann\\CodeCoverage\\Driver\\Xdebug","SebastianBergmann\\CodeCoverage\\Exception","SebastianBergmann\\CodeCoverage\\Filter","SebastianBergmann\\CodeCoverage\\InvalidArgumentException","SebastianBergmann\\CodeCoverage\\MissingCoversAnnotationException","SebastianBergmann\\CodeCoverage\\Node\\AbstractNode","SebastianBergmann\\CodeCoverage\\Node\\Builder","SebastianBergmann\\CodeCoverage\\Node\\Directory","SebastianBergmann\\CodeCoverage\\Node\\File","SebastianBergmann\\CodeCoverage\\Node\\Iterator","SebastianBergmann\\CodeCoverage\\Report\\Clover","SebastianBergmann\\CodeCoverage\\Report\\Crap4j","SebastianBergmann\\CodeCoverage\\Report\\Html\\Dashboard","SebastianBergmann\\CodeCoverage\\Report\\Html\\Directory","SebastianBergmann\\CodeCoverage\\Report\\Html\\Facade","SebastianBergmann\\CodeCoverage\\Report\\Html\\File","SebastianBergmann\\CodeCoverage\\Report\\Html\\Renderer","SebastianBergmann\\CodeCoverage\\Report\\PHP","SebastianBergmann\\CodeCoverage\\Report\\Text","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Coverage","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Directory","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Facade","SebastianBergmann\\CodeCoverage\\Report\\Xml\\File","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Method","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Node","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Project","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Report","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Tests","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Totals","SebastianBergmann\\CodeCoverage\\Report\\Xml\\Unit","SebastianBergmann\\CodeCoverage\\RuntimeException","SebastianBergmann\\CodeCoverage\\UnintentionallyCoveredCodeException","SebastianBergmann\\CodeCoverage\\Util","SebastianBergmann\\CodeUnitReverseLookup\\Wizard","SebastianBergmann\\Comparator\\ArrayComparator","SebastianBergmann\\Comparator\\Comparator","SebastianBergmann\\Comparator\\ComparisonFailure","SebastianBergmann\\Comparator\\DOMNodeComparator","SebastianBergmann\\Comparator\\DateTimeComparator","SebastianBergmann\\Comparator\\DoubleComparator","SebastianBergmann\\Comparator\\ExceptionComparator","SebastianBergmann\\Comparator\\Factory","SebastianBergmann\\Comparator\\MockObjectComparator","SebastianBergmann\\Comparator\\NumericComparator","SebastianBergmann\\Comparator\\ObjectComparator","SebastianBergmann\\Comparator\\ResourceComparator","SebastianBergmann\\Comparator\\ScalarComparator","SebastianBergmann\\Comparator\\SplObjectStorageComparator","SebastianBergmann\\Comparator\\TypeComparator","SebastianBergmann\\Diff\\Chunk","SebastianBergmann\\Diff\\Diff","SebastianBergmann\\Diff\\Differ","SebastianBergmann\\Diff\\LCS\\LongestCommonSubsequence","SebastianBergmann\\Diff\\LCS\\MemoryEfficientImplementation","SebastianBergmann\\Diff\\LCS\\TimeEfficientImplementation","SebastianBergmann\\Diff\\Line","SebastianBergmann\\Diff\\Parser","SebastianBergmann\\Environment\\Console","SebastianBergmann\\Environment\\Runtime","SebastianBergmann\\Exporter\\Exporter","SebastianBergmann\\GlobalState\\Blacklist","SebastianBergmann\\GlobalState\\CodeExporter","SebastianBergmann\\GlobalState\\Exception","SebastianBergmann\\GlobalState\\Restorer","SebastianBergmann\\GlobalState\\RuntimeException","SebastianBergmann\\GlobalState\\Snapshot","SebastianBergmann\\ObjectEnumerator\\Enumerator","SebastianBergmann\\ObjectEnumerator\\Exception","SebastianBergmann\\ObjectEnumerator\\InvalidArgumentException","SebastianBergmann\\RecursionContext\\Context","SebastianBergmann\\RecursionContext\\Exception","SebastianBergmann\\RecursionContext\\InvalidArgumentException","SebastianBergmann\\ResourceOperations\\ResourceOperations","SebastianBergmann\\Version","Squiz_Sniffs_Arrays_ArrayBracketSpacingSniff","Squiz_Sniffs_Arrays_ArrayDeclarationSniff","Squiz_Sniffs_CSS_ClassDefinitionClosingBraceSpaceSniff","Squiz_Sniffs_CSS_ClassDefinitionNameSpacingSniff","Squiz_Sniffs_CSS_ClassDefinitionOpeningBraceSpaceSniff","Squiz_Sniffs_CSS_ColonSpacingSniff","Squiz_Sniffs_CSS_ColourDefinitionSniff","Squiz_Sniffs_CSS_DisallowMultipleStyleDefinitionsSniff","Squiz_Sniffs_CSS_DuplicateClassDefinitionSniff","Squiz_Sniffs_CSS_DuplicateStyleDefinitionSniff","Squiz_Sniffs_CSS_EmptyClassDefinitionSniff","Squiz_Sniffs_CSS_EmptyStyleDefinitionSniff","Squiz_Sniffs_CSS_ForbiddenStylesSniff","Squiz_Sniffs_CSS_IndentationSniff","Squiz_Sniffs_CSS_LowercaseStyleDefinitionSniff","Squiz_Sniffs_CSS_MissingColonSniff","Squiz_Sniffs_CSS_NamedColoursSniff","Squiz_Sniffs_CSS_OpacitySniff","Squiz_Sniffs_CSS_SemicolonSpacingSniff","Squiz_Sniffs_CSS_ShorthandSizeSniff","Squiz_Sniffs_Classes_ClassDeclarationSniff","Squiz_Sniffs_Classes_ClassFileNameSniff","Squiz_Sniffs_Classes_DuplicatePropertySniff","Squiz_Sniffs_Classes_LowercaseClassKeywordsSniff","Squiz_Sniffs_Classes_SelfMemberReferenceSniff","Squiz_Sniffs_Classes_ValidClassNameSniff","Squiz_Sniffs_Commenting_BlockCommentSniff","Squiz_Sniffs_Commenting_ClassCommentSniff","Squiz_Sniffs_Commenting_ClosingDeclarationCommentSniff","Squiz_Sniffs_Commenting_DocCommentAlignmentSniff","Squiz_Sniffs_Commenting_EmptyCatchCommentSniff","Squiz_Sniffs_Commenting_FileCommentSniff","Squiz_Sniffs_Commenting_FunctionCommentSniff","Squiz_Sniffs_Commenting_FunctionCommentThrowTagSniff","Squiz_Sniffs_Commenting_InlineCommentSniff","Squiz_Sniffs_Commenting_LongConditionClosingCommentSniff","Squiz_Sniffs_Commenting_PostStatementCommentSniff","Squiz_Sniffs_Commenting_VariableCommentSniff","Squiz_Sniffs_ControlStructures_ControlSignatureSniff","Squiz_Sniffs_ControlStructures_ElseIfDeclarationSniff","Squiz_Sniffs_ControlStructures_ForEachLoopDeclarationSniff","Squiz_Sniffs_ControlStructures_ForLoopDeclarationSniff","Squiz_Sniffs_ControlStructures_InlineIfDeclarationSniff","Squiz_Sniffs_ControlStructures_LowercaseDeclarationSniff","Squiz_Sniffs_ControlStructures_SwitchDeclarationSniff","Squiz_Sniffs_Debug_JSLintSniff","Squiz_Sniffs_Debug_JavaScriptLintSniff","Squiz_Sniffs_Files_FileExtensionSniff","Squiz_Sniffs_Formatting_OperatorBracketSniff","Squiz_Sniffs_Functions_FunctionDeclarationArgumentSpacingSniff","Squiz_Sniffs_Functions_FunctionDeclarationSniff","Squiz_Sniffs_Functions_FunctionDuplicateArgumentSniff","Squiz_Sniffs_Functions_GlobalFunctionSniff","Squiz_Sniffs_Functions_LowercaseFunctionKeywordsSniff","Squiz_Sniffs_Functions_MultiLineFunctionDeclarationSniff","Squiz_Sniffs_NamingConventions_ValidFunctionNameSniff","Squiz_Sniffs_NamingConventions_ValidVariableNameSniff","Squiz_Sniffs_Objects_DisallowObjectStringIndexSniff","Squiz_Sniffs_Objects_ObjectInstantiationSniff","Squiz_Sniffs_Objects_ObjectMemberCommaSniff","Squiz_Sniffs_Operators_ComparisonOperatorUsageSniff","Squiz_Sniffs_Operators_IncrementDecrementUsageSniff","Squiz_Sniffs_Operators_ValidLogicalOperatorsSniff","Squiz_Sniffs_PHP_CommentedOutCodeSniff","Squiz_Sniffs_PHP_DisallowBooleanStatementSniff","Squiz_Sniffs_PHP_DisallowComparisonAssignmentSniff","Squiz_Sniffs_PHP_DisallowInlineIfSniff","Squiz_Sniffs_PHP_DisallowMultipleAssignmentsSniff","Squiz_Sniffs_PHP_DisallowObEndFlushSniff","Squiz_Sniffs_PHP_DisallowSizeFunctionsInLoopsSniff","Squiz_Sniffs_PHP_DiscouragedFunctionsSniff","Squiz_Sniffs_PHP_EmbeddedPhpSniff","Squiz_Sniffs_PHP_EvalSniff","Squiz_Sniffs_PHP_ForbiddenFunctionsSniff","Squiz_Sniffs_PHP_GlobalKeywordSniff","Squiz_Sniffs_PHP_HeredocSniff","Squiz_Sniffs_PHP_InnerFunctionsSniff","Squiz_Sniffs_PHP_LowercasePHPFunctionsSniff","Squiz_Sniffs_PHP_NonExecutableCodeSniff","Squiz_Sniffs_Scope_MemberVarScopeSniff","Squiz_Sniffs_Scope_MethodScopeSniff","Squiz_Sniffs_Scope_StaticThisUsageSniff","Squiz_Sniffs_Strings_ConcatenationSpacingSniff","Squiz_Sniffs_Strings_DoubleQuoteUsageSniff","Squiz_Sniffs_Strings_EchoedStringsSniff","Squiz_Sniffs_WhiteSpace_CastSpacingSniff","Squiz_Sniffs_WhiteSpace_ControlStructureSpacingSniff","Squiz_Sniffs_WhiteSpace_FunctionClosingBraceSpaceSniff","Squiz_Sniffs_WhiteSpace_FunctionOpeningBraceSpaceSniff","Squiz_Sniffs_WhiteSpace_FunctionSpacingSniff","Squiz_Sniffs_WhiteSpace_LanguageConstructSpacingSniff","Squiz_Sniffs_WhiteSpace_LogicalOperatorSpacingSniff","Squiz_Sniffs_WhiteSpace_MemberVarSpacingSniff","Squiz_Sniffs_WhiteSpace_ObjectOperatorSpacingSniff","Squiz_Sniffs_WhiteSpace_OperatorSpacingSniff","Squiz_Sniffs_WhiteSpace_PropertyLabelSpacingSniff","Squiz_Sniffs_WhiteSpace_ScopeClosingBraceSniff","Squiz_Sniffs_WhiteSpace_ScopeKeywordSpacingSniff","Squiz_Sniffs_WhiteSpace_SemicolonSpacingSniff","Squiz_Sniffs_WhiteSpace_SuperfluousWhitespaceSniff","Text_Template","Webmozart\\Assert\\Assert","Zend\\Diactoros\\AbstractSerializer","Zend\\Diactoros\\CallbackStream","Zend\\Diactoros\\Exception\\DeprecatedMethodException","Zend\\Diactoros\\Exception\\ExceptionInterface","Zend\\Diactoros\\HeaderSecurity","Zend\\Diactoros\\MessageTrait","Zend\\Diactoros\\PhpInputStream","Zend\\Diactoros\\RelativeStream","Zend\\Diactoros\\Request","Zend\\Diactoros\\RequestTrait","Zend\\Diactoros\\Request\\Serializer","Zend\\Diactoros\\Response","Zend\\Diactoros\\Response\\EmitterInterface","Zend\\Diactoros\\Response\\EmptyResponse","Zend\\Diactoros\\Response\\HtmlResponse","Zend\\Diactoros\\Response\\InjectContentTypeTrait","Zend\\Diactoros\\Response\\JsonResponse","Zend\\Diactoros\\Response\\RedirectResponse","Zend\\Diactoros\\Response\\SapiEmitter","Zend\\Diactoros\\Response\\SapiEmitterTrait","Zend\\Diactoros\\Response\\SapiStreamEmitter","Zend\\Diactoros\\Response\\Serializer","Zend\\Diactoros\\Response\\TextResponse","Zend\\Diactoros\\Server","Zend\\Diactoros\\ServerRequest","Zend\\Diactoros\\ServerRequestFactory","Zend\\Diactoros\\Stream","Zend\\Diactoros\\UploadedFile","Zend\\Diactoros\\Uri","Zend_Sniffs_Debug_CodeAnalyzerSniff","Zend_Sniffs_Files_ClosingTagSniff","Zend_Sniffs_NamingConventions_ValidVariableNameSniff","phpDocumentor\\Reflection\\DocBlock","phpDocumentor\\Reflection\\DocBlockFactory","phpDocumentor\\Reflection\\DocBlockFactoryInterface","phpDocumentor\\Reflection\\DocBlock\\Description","phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory","phpDocumentor\\Reflection\\DocBlock\\Serializer","phpDocumentor\\Reflection\\DocBlock\\StandardTagFactory","phpDocumentor\\Reflection\\DocBlock\\Tag","phpDocumentor\\Reflection\\DocBlock\\TagFactory","phpDocumentor\\Reflection\\DocBlock\\Tags\\Author","phpDocumentor\\Reflection\\DocBlock\\Tags\\BaseTag","phpDocumentor\\Reflection\\DocBlock\\Tags\\Covers","phpDocumentor\\Reflection\\DocBlock\\Tags\\Deprecated","phpDocumentor\\Reflection\\DocBlock\\Tags\\Example","phpDocumentor\\Reflection\\DocBlock\\Tags\\Factory\\StaticMethod","phpDocumentor\\Reflection\\DocBlock\\Tags\\Factory\\Strategy","phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter","phpDocumentor\\Reflection\\DocBlock\\Tags\\Formatter\\PassthroughFormatter","phpDocumentor\\Reflection\\DocBlock\\Tags\\Generic","phpDocumentor\\Reflection\\DocBlock\\Tags\\Link","phpDocumentor\\Reflection\\DocBlock\\Tags\\Method","phpDocumentor\\Reflection\\DocBlock\\Tags\\Param","phpDocumentor\\Reflection\\DocBlock\\Tags\\Property","phpDocumentor\\Reflection\\DocBlock\\Tags\\PropertyRead","phpDocumentor\\Reflection\\DocBlock\\Tags\\PropertyWrite","phpDocumentor\\Reflection\\DocBlock\\Tags\\Return_","phpDocumentor\\Reflection\\DocBlock\\Tags\\See","phpDocumentor\\Reflection\\DocBlock\\Tags\\Since","phpDocumentor\\Reflection\\DocBlock\\Tags\\Source","phpDocumentor\\Reflection\\DocBlock\\Tags\\Throws","phpDocumentor\\Reflection\\DocBlock\\Tags\\Uses","phpDocumentor\\Reflection\\DocBlock\\Tags\\Var_","phpDocumentor\\Reflection\\DocBlock\\Tags\\Version","phpDocumentor\\Reflection\\Element","phpDocumentor\\Reflection\\ExampleFinder","phpDocumentor\\Reflection\\File","phpDocumentor\\Reflection\\Fqsen","phpDocumentor\\Reflection\\FqsenResolver","phpDocumentor\\Reflection\\Location","phpDocumentor\\Reflection\\Project","phpDocumentor\\Reflection\\ProjectFactory","phpDocumentor\\Reflection\\Type","phpDocumentor\\Reflection\\TypeResolver","phpDocumentor\\Reflection\\Types\\Array_","phpDocumentor\\Reflection\\Types\\Boolean","phpDocumentor\\Reflection\\Types\\Callable_","phpDocumentor\\Reflection\\Types\\Compound","phpDocumentor\\Reflection\\Types\\Context","phpDocumentor\\Reflection\\Types\\ContextFactory","phpDocumentor\\Reflection\\Types\\Float_","phpDocumentor\\Reflection\\Types\\Integer","phpDocumentor\\Reflection\\Types\\Mixed","phpDocumentor\\Reflection\\Types\\Null_","phpDocumentor\\Reflection\\Types\\Object_","phpDocumentor\\Reflection\\Types\\Resource","phpDocumentor\\Reflection\\Types\\Scalar","phpDocumentor\\Reflection\\Types\\Self_","phpDocumentor\\Reflection\\Types\\Static_","phpDocumentor\\Reflection\\Types\\String_","phpDocumentor\\Reflection\\Types\\This","phpDocumentor\\Reflection\\Types\\Void_","stdClass","Exception","ErrorException","Error","ParseError","TypeError","ArgumentCountError","ArithmeticError","DivisionByZeroError","Closure","Generator","ClosedGeneratorException","DateTime","DateTimeImmutable","DateTimeZone","DateInterval","DatePeriod","LibXMLError","SQLite3","SQLite3Stmt","SQLite3Result","CURLFile","DOMException","DOMStringList","DOMNameList","DOMImplementationList","DOMImplementationSource","DOMImplementation","DOMNode","DOMNameSpaceNode","DOMDocumentFragment","DOMDocument","DOMNodeList","DOMNamedNodeMap","DOMCharacterData","DOMAttr","DOMElement","DOMText","DOMComment","DOMTypeinfo","DOMUserDataHandler","DOMDomError","DOMErrorHandler","DOMLocator","DOMConfiguration","DOMCdataSection","DOMDocumentType","DOMNotation","DOMEntity","DOMEntityReference","DOMProcessingInstruction","DOMStringExtend","DOMXPath","finfo","LogicException","BadFunctionCallException","BadMethodCallException","DomainException","InvalidArgumentException","LengthException","OutOfRangeException","RuntimeException","OutOfBoundsException","OverflowException","RangeException","UnderflowException","UnexpectedValueException","RecursiveIteratorIterator","IteratorIterator","FilterIterator","RecursiveFilterIterator","CallbackFilterIterator","RecursiveCallbackFilterIterator","ParentIterator","LimitIterator","CachingIterator","RecursiveCachingIterator","NoRewindIterator","AppendIterator","InfiniteIterator","RegexIterator","RecursiveRegexIterator","EmptyIterator","RecursiveTreeIterator","ArrayObject","ArrayIterator","RecursiveArrayIterator","SplFileInfo","DirectoryIterator","FilesystemIterator","RecursiveDirectoryIterator","GlobIterator","SplFileObject","SplTempFileObject","SplDoublyLinkedList","SplQueue","SplStack","SplHeap","SplMinHeap","SplMaxHeap","SplPriorityQueue","SplFixedArray","SplObjectStorage","MultipleIterator","SessionHandler","__PHP_Incomplete_Class","php_user_filter","Directory","AssertionError","mysqli_sql_exception","mysqli_driver","mysqli","mysqli_warning","mysqli_result","mysqli_stmt","PDOException","PDO","PDOStatement","PDORow","PharException","Phar","PharData","PharFileInfo","ReflectionException","Reflection","ReflectionFunctionAbstract","ReflectionFunction","ReflectionGenerator","ReflectionParameter","ReflectionType","ReflectionNamedType","ReflectionMethod","ReflectionClass","ReflectionObject","ReflectionProperty","ReflectionClassConstant","ReflectionExtension","ReflectionZendExtension","SimpleXMLElement","SimpleXMLIterator","SoapClient","SoapVar","SoapServer","SoapFault","SoapParam","SoapHeader","XMLReader","XMLWriter","XSLTProcessor","ZipArchive","Collator","NumberFormatter","Normalizer","Locale","MessageFormatter","IntlDateFormatter","ResourceBundle","Transliterator","IntlTimeZone","IntlCalendar","IntlGregorianCalendar","Spoofchecker","IntlException","IntlIterator","IntlBreakIterator","IntlRuleBasedBreakIterator","IntlCodePointBreakIterator","IntlPartsIterator","UConverter","IntlChar"]}