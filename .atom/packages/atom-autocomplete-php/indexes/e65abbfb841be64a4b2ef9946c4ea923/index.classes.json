{"mapping":{"Bug":{"class":{"descriptions":{"short":"@Entity(repositoryClass=\"BugRepository\") @Table(name=\"bugs\")","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation":{"class":{"descriptions":{"short":"Annotations class.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Jonathan Wage <jonwage@gmail.com>\n@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":[],"docParameters":{"$data":{"type":"array","description":"Key-value for properties to be defined in this class."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\AnnotationException":{"class":{"descriptions":{"short":"Description of AnnotationException","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\AnnotationReader":{"class":{"descriptions":{"short":"A reader for docblock annotations.","long":"@author  Benjamin Eberlei <kontakt@beberlei.de>\n@author  Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author  Jonathan Wage <jonwage@gmail.com>\n@author  Roman Borschel <roman@code-factory.org>\n@author  Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$parser"],"docParameters":{"$parser":{"type":"DocParser","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Initializes a new AnnotationReader."},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\AnnotationRegistry":{"class":{"descriptions":{"short":"AnnotationRegistry.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Attribute":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the attribute type during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Attributes":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the types of all declared attributes during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Enum":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the available values during the parsing process.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$values"],"optionals":[],"docParameters":{"$values":{"type":"array","description":null}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Annotation constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\Annotation\\IgnoreAnnotation":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser to ignore specific\nannotations during the parsing process.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$values"],"optionals":[],"docParameters":{"$values":{"type":"array","description":null}},"throws":{"\\RuntimeException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\Annotation\\Required":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check if that attribute is required during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Annotation\\Target":{"class":{"descriptions":{"short":"Annotation that can be used to signal to the parser\nto check the annotation target during the parsing process.","long":"@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$values"],"optionals":[],"docParameters":{"$values":{"type":"array","description":null}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Annotation constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\CachedReader":{"class":{"descriptions":{"short":"A cache aware annotation reader.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader","$cache"],"optionals":["$debug"],"docParameters":{"$reader":{"type":"Reader","description":null},"$cache":{"type":"Cache","description":null},"$debug":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\DocLexer":{"class":{"descriptions":{"short":"Simple lexer for docblock annotations.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Jonathan Wage <jonwage@gmail.com>\n@author Roman Borschel <roman@code-factory.org>\n@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\DocParser":{"class":{"descriptions":{"short":"A parser for docblock annotations.","long":"It is strongly discouraged to change the default annotation parsing process.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Jonathan Wage <jonwage@gmail.com>\n@author Roman Borschel <roman@code-factory.org>\n@author Johannes M. Schmitt <schmittjoh@gmail.com>\n@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a new DocParser.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\FileCacheReader":{"class":{"descriptions":{"short":"File cache reader for annotations.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader","$cacheDir"],"optionals":["$debug","$umask"],"docParameters":{"$reader":{"type":"Reader","description":null},"$cacheDir":{"type":"string","description":null},"$debug":{"type":"boolean","description":null}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\IndexedReader":{"class":{"descriptions":{"short":"Allows the reader to be used in-place of Doctrine's reader.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader"],"optionals":[],"docParameters":{"$reader":{"type":"Reader","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\PhpParser":{"class":{"descriptions":{"short":"Parses a file for namespaces\/use\/class declarations.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author Christian Kaps <christian.kaps@mohiva.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\Reader":{"class":{"descriptions":{"short":"Interface for annotation readers.","long":"@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Annotations\\SimpleAnnotationReader":{"class":{"descriptions":{"short":"Simple Annotation Reader.","long":"This annotation reader is intended to be used in projects where you have\nfull-control over all annotations that are available."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Initializes a new SimpleAnnotationReader."},"deprecated":false}}}},"Doctrine\\Common\\Annotations\\TokenParser":{"class":{"descriptions":{"short":"Parses a file for namespaces\/use\/class declarations.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author Christian Kaps <christian.kaps@mohiva.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$contents"],"optionals":[],"docParameters":{"$contents":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Cache\\ApcCache":{"class":{"descriptions":{"short":"APC cache provider.","long":""},"deprecated":true},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\ApcuCache":{"class":{"descriptions":{"short":"APCu cache provider.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\ArrayCache":{"class":{"descriptions":{"short":"Array cache driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"{@inheritdoc}","long":""},"deprecated":false}}}},"Doctrine\\Common\\Cache\\Cache":{"class":{"descriptions":{"short":"Interface for cache drivers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\CacheProvider":{"class":{"descriptions":{"short":"Base class for cache provider implementations.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\ChainCache":{"class":{"descriptions":{"short":"Cache provider that allows to easily chain multiple cache providers","long":"@author Micha\u00ebl Gallego <mic.gallego@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$cacheProviders"],"docParameters":{"$cacheProviders":{"type":"CacheProvider[]","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Doctrine\\Common\\Cache\\ClearableCache":{"class":{"descriptions":{"short":"Interface for cache that can be flushed.","long":"Intended to be used for partial clearing of a cache namespace. For a more\nglobal \"flushing\", see {@see FlushableCache}."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\CouchbaseCache":{"class":{"descriptions":{"short":"Couchbase cache provider.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\FileCache":{"class":{"descriptions":{"short":"Base file cache driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$directory"],"optionals":["$extension","$umask"],"docParameters":{"$directory":{"type":"string","description":"The cache directory."},"$extension":{"type":"string","description":"The cache file extension."}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Cache\\FilesystemCache":{"class":{"descriptions":{"short":"Filesystem cache driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$directory"],"optionals":["$extension","$umask"],"docParameters":{"$directory":{"type":"string","description":"The cache directory."},"$extension":{"type":"string","description":"The cache file extension."}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Cache\\FlushableCache":{"class":{"descriptions":{"short":"Interface for cache that can be flushed.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\MemcacheCache":{"class":{"descriptions":{"short":"Memcache cache provider.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\MemcachedCache":{"class":{"descriptions":{"short":"Memcached cache provider.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\MongoDBCache":{"class":{"descriptions":{"short":"MongoDB cache provider.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$collection"],"optionals":[],"docParameters":{"$collection":{"type":"MongoCollection","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"This provider will default to the write concern and read preference\noptions set on the MongoCollection instance (or inherited from MongoDB or\nMongoClient). Using an unacknowledged write concern (< 1) may make the\nreturn values of delete() and save() unreliable. Reading from secondaries\nmay make contain() and fetch() unreliable."},"deprecated":false}}}},"Doctrine\\Common\\Cache\\MultiGetCache":{"class":{"descriptions":{"short":"Interface for cache drivers that allows to get many items at once.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\MultiPutCache":{"class":{"descriptions":{"short":"Interface for cache drivers that allows to put many items at once.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\PhpFileCache":{"class":{"descriptions":{"short":"Php file cache driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$directory"],"optionals":["$extension","$umask"],"docParameters":{"$directory":{"type":"string","description":"The cache directory."},"$extension":{"type":"string","description":"The cache file extension."}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Cache\\PredisCache":{"class":{"descriptions":{"short":"Predis cache provider.","long":"@author othillo <othillo@othillo.nl>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$client"],"optionals":[],"docParameters":{"$client":{"type":"ClientInterface","description":null}},"throws":[],"return":{"type":"void","description":""},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Cache\\RedisCache":{"class":{"descriptions":{"short":"Redis cache provider.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\RiakCache":{"class":{"descriptions":{"short":"Riak cache provider.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$bucket"],"optionals":[],"docParameters":{"$bucket":{"type":"\\Riak\\Bucket","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Sets the riak bucket instance to use.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Cache\\SQLite3Cache":{"class":{"descriptions":{"short":"SQLite3 cache provider.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sqlite","$table"],"optionals":[],"docParameters":{"$sqlite":{"type":"SQLite3","description":null},"$table":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Calling the constructor will ensure that the database file and table\nexist and will create both if they don't."},"deprecated":false}}}},"Doctrine\\Common\\Cache\\Version":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\VoidCache":{"class":{"descriptions":{"short":"Void cache driver. The cache could be of use in tests where you don`t need to cache anything.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\WinCacheCache":{"class":{"descriptions":{"short":"WinCache cache provider.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\XcacheCache":{"class":{"descriptions":{"short":"Xcache cache driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Cache\\ZendDataCache":{"class":{"descriptions":{"short":"Zend Data Cache cache driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\ClassLoader":{"class":{"descriptions":{"short":"A <tt>ClassLoader<\/tt> is an autoloader for class files that can be\ninstalled on the SPL autoload stack. It is a class loader that either loads only classes\nof a specific namespace or all namespaces and it is suitable for working together\nwith other autoloaders in the SPL autoload stack.","long":"If no include path is configured through the constructor or {@link setIncludePath}, a ClassLoader\nrelies on the PHP <code>include_path<\/code>.\n\n@author Roman Borschel <roman@code-factory.org>"},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$ns","$includePath"],"docParameters":{"$ns":{"type":"string|null","description":"The namespace of the classes to load."},"$includePath":{"type":"string|null","description":"The base include path to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a new <tt>ClassLoader<\/tt> that loads classes of the\nspecified namespace from the specified include path.","long":"If no include path is given, the ClassLoader relies on the PHP include_path.\nIf neither a namespace nor an include path is given, the ClassLoader will\nbe responsible for loading all classes, thereby relying on the PHP include_path."},"deprecated":false}}}},"Doctrine\\Common\\Collections\\AbstractLazyCollection":{"class":{"descriptions":{"short":"Lazy collection that is backed by a concrete collection","long":"@author Micha\u00ebl Gallego <mic.gallego@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Collections\\ArrayCollection":{"class":{"descriptions":{"short":"An ArrayCollection is a Collection implementation that wraps a regular PHP array.","long":"Warning: Using (un-)serialize() on a collection is not a supported use-case\nand may break when we change the internals in the future. If you need to\nserialize a collection use {@link toArray()} and reconstruct the collection\nmanually."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$elements"],"docParameters":{"$elements":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new ArrayCollection.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Collections\\Collection":{"class":{"descriptions":{"short":"The missing (SPL) Collection\/Array\/OrderedMap interface.","long":"A Collection resembles the nature of a regular PHP array. That is,\nit is essentially an <b>ordered map<\/b> that can also be used\nlike a list.\n\nA Collection has an internal iterator just like a PHP array. In addition,\na Collection can be iterated with external iterators, which is preferable.\nTo use an external iterator simply use the foreach language construct to\niterate over the collection (which calls {@link getIterator()} internally) or\nexplicitly retrieve an iterator though {@link getIterator()} which can then be\nused to iterate over the collection.\nYou can not rely on the internal iterator of the collection being at a certain\nposition unless you explicitly positioned it before. Prefer iteration with\nexternal iterators."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Collections\\Criteria":{"class":{"descriptions":{"short":"Criteria for filtering Selectable collections.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$expression","$orderings","$firstResult","$maxResults"],"docParameters":{"$expression":{"type":"Expression","description":null},"$orderings":{"type":"string[]|null","description":null},"$firstResult":{"type":"int|null","description":null},"$maxResults":{"type":"int|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Construct a new Criteria.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Collections\\Expr\\ClosureExpressionVisitor":{"class":{"descriptions":{"short":"Walks an expression graph and turns it into a PHP closure.","long":"This closure can be used with {@Collection#filter()} and is used internally\nby {@ArrayCollection#select()}.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Collections\\Expr\\Comparison":{"class":{"descriptions":{"short":"Comparison of a field with a value by the given operator.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$field","$operator","$value"],"optionals":[],"docParameters":{"$field":{"type":"string","description":null},"$operator":{"type":"string","description":null},"$value":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Collections\\Expr\\CompositeExpression":{"class":{"descriptions":{"short":"Expression of Expressions combined by AND or OR operation.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type","$expressions"],"optionals":[],"docParameters":{"$type":{"type":"string","description":null},"$expressions":{"type":"array","description":null}},"throws":{"\\RuntimeException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Collections\\Expr\\Expression":{"class":{"descriptions":{"short":"Expression for the {@link Selectable} interface.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Collections\\Expr\\ExpressionVisitor":{"class":{"descriptions":{"short":"An Expression visitor walks a graph of expressions and turns them into a\nquery for the underlying implementation.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Collections\\Expr\\Value":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Collections\\ExpressionBuilder":{"class":{"descriptions":{"short":"Builder for Expressions in the {@link Selectable} interface.","long":"Important Notice for interoperable code: You have to use scalar\nvalues only for comparisons, otherwise the behavior of the comparison\nmay be different between implementations (Array vs ORM vs ODM).\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Collections\\Selectable":{"class":{"descriptions":{"short":"Interface for collections that allow efficient filtering with an expression API.","long":"Goal of this interface is a backend independent method to fetch elements\nfrom a collections. {@link Expression} is crafted in a way that you can\nimplement queries from both in-memory and database-backed collections.\n\nFor database backed collections this allows very efficient access by\nutilizing the query APIs, for example SQL in the ORM. Applications using\nthis API can implement efficient database access without having to ask the\nEntityManager or Repositories.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\CommonException":{"class":{"descriptions":{"short":"Base exception class for package Doctrine\\Common.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Comparable":{"class":{"descriptions":{"short":"Comparable interface that allows to compare two value objects to each other for similarity.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\EventArgs":{"class":{"descriptions":{"short":"EventArgs is the base class for classes containing event data.","long":"This class contains no event data. It is used by events that do not pass state\ninformation to an event handler when an event is raised. The single empty EventArgs\ninstance can be obtained through {@link getEmptyInstance}."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\EventManager":{"class":{"descriptions":{"short":"The EventManager is the central point of Doctrine's event listener system.\nListeners are registered on the manager and events are dispatched through the\nmanager.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\EventSubscriber":{"class":{"descriptions":{"short":"An EventSubscriber knows himself what events he is interested in.\nIf an EventSubscriber is added to an EventManager, the manager invokes\n{@link getSubscribedEvents} and registers the subscriber as a listener for all\nreturned events.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Inflector\\Inflector":{"class":{"descriptions":{"short":"Doctrine inflector has static methods for inflecting text.","long":"The methods in these classes are from several different sources collected\nacross several different php projects and several different authors. The\noriginal author names and emails are not known.\n\nPluralize & Singularize implementation are borrowed from CakePHP with some modifications."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Lexer":{"class":{"descriptions":{"short":"Base class for writing simple lexers, i.e. for creating small DSLs.","long":"Lexer moved into its own Component Doctrine\\Common\\Lexer. This class\nonly stays for being BC."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Lexer\\AbstractLexer":{"class":{"descriptions":{"short":"Base class for writing simple lexers, i.e. for creating small DSLs.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\NotifyPropertyChanged":{"class":{"descriptions":{"short":"Contract for classes that provide the service of notifying listeners of\nchanges to their properties.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\AbstractManagerRegistry":{"class":{"descriptions":{"short":"Abstract implementation of the ManagerRegistry contract.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$connections","$managers","$defaultConnection","$defaultManager","$proxyInterfaceName"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null},"$connections":{"type":"array","description":null},"$managers":{"type":"array","description":null},"$defaultConnection":{"type":"string","description":null},"$defaultManager":{"type":"string","description":null},"$proxyInterfaceName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\ConnectionRegistry":{"class":{"descriptions":{"short":"Contract covering connection for a Doctrine persistence layer ManagerRegistry class to implement.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Event\\LifecycleEventArgs":{"class":{"descriptions":{"short":"Lifecycle Events are triggered by the UnitOfWork during lifecycle transitions\nof entities.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$object","$objectManager"],"optionals":[],"docParameters":{"$object":{"type":"object","description":null},"$objectManager":{"type":"ObjectManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Event\\LoadClassMetadataEventArgs":{"class":{"descriptions":{"short":"Class that holds event arguments for a loadMetadata event.","long":"@author Jonathan H. Wage <jonwage@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$classMetadata","$objectManager"],"optionals":[],"docParameters":{"$classMetadata":{"type":"ClassMetadata","description":null},"$objectManager":{"type":"ObjectManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Event\\ManagerEventArgs":{"class":{"descriptions":{"short":"Provides event arguments for the preFlush event.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$objectManager"],"optionals":[],"docParameters":{"$objectManager":{"type":"ObjectManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Event\\OnClearEventArgs":{"class":{"descriptions":{"short":"Provides event arguments for the onClear event.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$objectManager"],"optionals":["$entityClass"],"docParameters":{"$objectManager":{"type":"ObjectManager","description":"The object manager."},"$entityClass":{"type":"string|null","description":"The optional entity class."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Event\\PreUpdateEventArgs":{"class":{"descriptions":{"short":"Class that holds event arguments for a preUpdate event.","long":"@author Guilherme Blanco <guilehrmeblanco@hotmail.com>\n@author Roman Borschel <roman@code-factory.org>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$entity","$objectManager","&$changeSet"],"optionals":[],"docParameters":{"$entity":{"type":"object","description":null},"$objectManager":{"type":"ObjectManager","description":null},"$changeSet":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\ManagerRegistry":{"class":{"descriptions":{"short":"Contract covering object managers for a Doctrine persistence layer ManagerRegistry class to implement.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Mapping\\AbstractClassMetadataFactory":{"class":{"descriptions":{"short":"The ClassMetadataFactory is used to create ClassMetadata objects that contain all the\nmetadata mapping informations of a class which describes how a class should be mapped\nto a relational database.","long":"This class was abstracted from the ORM ClassMetadataFactory."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Mapping\\ClassMetadata":{"class":{"descriptions":{"short":"Contract for a Doctrine persistence layer ClassMetadata class to implement.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Mapping\\ClassMetadataFactory":{"class":{"descriptions":{"short":"Contract for a Doctrine persistence layer ClassMetadata class to implement.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Mapping\\Driver\\AnnotationDriver":{"class":{"descriptions":{"short":"The AnnotationDriver reads the mapping metadata from docblock annotations.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader"],"optionals":["$paths"],"docParameters":{"$reader":{"type":"AnnotationReader","description":"The AnnotationReader to use, duck-typed."},"$paths":{"type":"string|array|null","description":"One or multiple paths where mapping classes can be found."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new AnnotationDriver that uses the given AnnotationReader for reading\ndocblock annotations.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Mapping\\Driver\\DefaultFileLocator":{"class":{"descriptions":{"short":"Locates the file that contains the metadata information for a given class name.","long":"This behavior is independent of the actual content of the file. It just detects\nthe file which is responsible for the given class name.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$paths"],"optionals":["$fileExtension"],"docParameters":{"$paths":{"type":"string|array","description":"One or multiple paths where mapping documents can be found."},"$fileExtension":{"type":"string|null","description":"The file extension of mapping documents, usually prefixed with a dot."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new FileDriver that looks in the given path(s) for mapping\ndocuments and operates in the specified operating mode.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Mapping\\Driver\\FileDriver":{"class":{"descriptions":{"short":"Base driver for file-based metadata drivers.","long":"A file driver operates in a mode where it loads the mapping files of individual\nclasses on demand. This requires the user to adhere to the convention of 1 mapping\nfile per class and the file names of the mapping files must correspond to the full\nclass name, including namespace, with the namespace delimiters '\\', replaced by dots '.'."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locator"],"optionals":["$fileExtension"],"docParameters":{"$locator":{"type":"string|array|FileLocator","description":"A FileLocator or one\/multiple paths where mapping documents can be found."},"$fileExtension":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new FileDriver that looks in the given path(s) for mapping\ndocuments and operates in the specified operating mode.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Mapping\\Driver\\FileLocator":{"class":{"descriptions":{"short":"Locates the file that contains the metadata information for a given class name.","long":"This behavior is independent of the actual content of the file. It just detects\nthe file which is responsible for the given class name.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Johannes M. Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriver":{"class":{"descriptions":{"short":"Contract for metadata drivers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriverChain":{"class":{"descriptions":{"short":"The DriverChain allows you to add multiple other mapping drivers for\ncertain namespaces.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Mapping\\Driver\\PHPDriver":{"class":{"descriptions":{"short":"The PHPDriver includes php files which just populate ClassMetadataInfo\ninstances with plain PHP code.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locator"],"optionals":["$fileExtension"],"docParameters":{"$locator":{"type":"string|array|FileLocator","description":"A FileLocator or one\/multiple paths where mapping documents can be found."},"$fileExtension":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new FileDriver that looks in the given path(s) for mapping\ndocuments and operates in the specified operating mode.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Mapping\\Driver\\StaticPHPDriver":{"class":{"descriptions":{"short":"The StaticPHPDriver calls a static loadMetadata() method on your entity\nclasses where you can manually populate the ClassMetadata instance.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$paths"],"optionals":[],"docParameters":{"$paths":{"type":"array|string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Mapping\\Driver\\SymfonyFileLocator":{"class":{"descriptions":{"short":"The Symfony File Locator makes a simplifying assumptions compared\nto the DefaultFileLocator. By assuming paths only contain entities of a certain\nnamespace the mapping files consists of the short classname only.","long":"@author  Fabien Potencier <fabien@symfony.com>\n@author  Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$prefixes"],"optionals":["$fileExtension","$nsSeparator"],"docParameters":{"$prefixes":{"type":"array","description":null},"$fileExtension":{"type":"string|null","description":null},"$nsSeparator":{"type":"string","description":"String which would be used when converting FQCN to filename and vice versa. Should not be empty"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Mapping\\MappingException":{"class":{"descriptions":{"short":"A MappingException indicates that something is wrong with the mapping setup.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Persistence\\Mapping\\ReflectionService":{"class":{"descriptions":{"short":"Very simple reflection service abstraction.","long":"This is required inside metadata layers that may require either\nstatic or runtime reflection.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Mapping\\RuntimeReflectionService":{"class":{"descriptions":{"short":"PHP Runtime Reflection Service.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Mapping\\StaticReflectionService":{"class":{"descriptions":{"short":"PHP Runtime Reflection Service.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\ObjectManager":{"class":{"descriptions":{"short":"Contract for a Doctrine persistence layer ObjectManager class to implement.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\ObjectManagerAware":{"class":{"descriptions":{"short":"Makes a Persistent Objects aware of its own object-manager.","long":"Using this interface the managing object manager and class metadata instances\nare injected into the persistent object after construction. This allows\nyou to implement ActiveRecord functionality on top of the persistence-ignorance\nthat Doctrine propagates.\n\nWord of Warning: This is a very powerful hook to change how you can work with your domain models.\nUsing this hook will break the Single Responsibility Principle inside your Domain Objects\nand increase the coupling of database and objects.\n\nEvery ObjectManager has to implement this functionality itself.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\ObjectManagerDecorator":{"class":{"descriptions":{"short":"Base class to simplify ObjectManager decorators","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\ObjectRepository":{"class":{"descriptions":{"short":"Contract for a Doctrine persistence layer ObjectRepository class to implement.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\PersistentObject":{"class":{"descriptions":{"short":"PersistentObject base class that implements getter\/setter methods for all mapped fields and associations\nby overriding __call.","long":"This class is a forward compatible implementation of the PersistentObject trait.\n\nLimitations:\n\n1. All persistent objects have to be associated with a single ObjectManager, multiple\nObjectManagers are not supported. You can set the ObjectManager with `PersistentObject#setObjectManager()`.\n2. Setters and getters only work if a ClassMetadata instance was injected into the PersistentObject.\nThis is either done on `postLoad` of an object or by accessing the global object manager.\n3. There are no hooks for setters\/getters. Just implement the method yourself instead of relying on __call().\n4. Slower than handcoded implementations: An average of 7 method calls per access to a field and 11 for an association.\n5. Only the inverse side associations get autoset on the owning side as well. Setting objects on the owning side\nwill not set the inverse side associations."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Persistence\\Proxy":{"class":{"descriptions":{"short":"Interface for proxy classes.","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\PropertyChangedListener":{"class":{"descriptions":{"short":"Contract for classes that are potential listeners of a <tt>NotifyPropertyChanged<\/tt>\nimplementor.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Proxy\\AbstractProxyFactory":{"class":{"descriptions":{"short":"Abstract factory for proxy objects.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$proxyGenerator","$metadataFactory","$autoGenerate"],"optionals":[],"docParameters":{"$proxyGenerator":{"type":"\\Doctrine\\Common\\Proxy\\ProxyGenerator","description":null},"$metadataFactory":{"type":"\\Doctrine\\Common\\Persistence\\Mapping\\ClassMetadataFactory","description":null},"$autoGenerate":{"type":"bool|int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Proxy\\Autoloader":{"class":{"descriptions":{"short":"Special Autoloader for Proxy classes, which are not PSR-0 compliant.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Proxy\\Exception\\InvalidArgumentException":{"class":{"descriptions":{"short":"Proxy Invalid Argument Exception.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Proxy\\Exception\\OutOfBoundsException":{"class":{"descriptions":{"short":"Proxy Invalid Argument Exception.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Proxy\\Exception\\ProxyException":{"class":{"descriptions":{"short":"Base exception interface for proxy exceptions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Proxy\\Exception\\UnexpectedValueException":{"class":{"descriptions":{"short":"Proxy Unexpected Value Exception.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Proxy\\Proxy":{"class":{"descriptions":{"short":"Interface for proxy classes.","long":"@author Roman Borschel <roman@code-factory.org>\n@author Marco Pivetta  <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Proxy\\ProxyDefinition":{"class":{"descriptions":{"short":"Definition structure how to create a proxy.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$proxyClassName","$identifierFields","$reflectionFields","$initializer","$cloner"],"optionals":[],"docParameters":{"$proxyClassName":{"type":"string","description":null},"$identifierFields":{"type":"array","description":null},"$reflectionFields":{"type":"array","description":null},"$initializer":{"type":"callable","description":null},"$cloner":{"type":"callable","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Proxy\\ProxyGenerator":{"class":{"descriptions":{"short":"This factory is used to generate proxy classes.\nIt builds proxies from given parameters, a template and class metadata.","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$proxyDirectory","$proxyNamespace"],"optionals":[],"docParameters":{"$proxyDirectory":{"type":"string","description":"The directory to use for the proxy classes. It must exist."},"$proxyNamespace":{"type":"string","description":"The namespace to use for the proxy classes."}},"throws":{"InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of the <tt>ProxyFactory<\/tt> class that is\nconnected to the given <tt>EntityManager<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Reflection\\ClassFinderInterface":{"class":{"descriptions":{"short":"Finds a class in a PSR-0 structure.","long":"@author Karoly Negyesi <karoly@negyesi.net>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Reflection\\Psr0FindFile":{"class":{"descriptions":{"short":"Finds a class in a PSR-0 structure.","long":"@author Karoly Negyesi <karoly@negyesi.net>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$prefixes"],"optionals":[],"docParameters":{"$prefixes":{"type":"array","description":"An array of prefixes. Each key is a PHP namespace and each value is a list of directories."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Reflection\\ReflectionProviderInterface":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Reflection\\RuntimePublicReflectionProperty":{"class":{"descriptions":{"short":"PHP Runtime Reflection Public Property - special overrides for public properties.","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Reflection\\StaticReflectionClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$staticReflectionParser"],"optionals":[],"docParameters":{"$staticReflectionParser":{"type":"StaticReflectionParser","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Reflection\\StaticReflectionMethod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$staticReflectionParser","$methodName"],"optionals":[],"docParameters":{"$staticReflectionParser":{"type":"StaticReflectionParser","description":null},"$methodName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Reflection\\StaticReflectionParser":{"class":{"descriptions":{"short":"Parses a file for namespaces\/use\/class declarations.","long":"@author Karoly Negyesi <karoly@negyesi.net>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className","$finder"],"optionals":["$classAnnotationOptimize"],"docParameters":{"$className":{"type":"string","description":"The full, namespaced class name."},"$finder":{"type":"ClassFinderInterface","description":"A ClassFinder object which finds the class."},"$classAnnotationOptimize":{"type":"boolean","description":"Only retrieve the class docComment. Presumes there is only one statement per line."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Parses a class residing in a PSR-0 hierarchy.","long":""},"deprecated":false}}}},"Doctrine\\Common\\Reflection\\StaticReflectionProperty":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$staticReflectionParser","$propertyName"],"optionals":[],"docParameters":{"$staticReflectionParser":{"type":"StaticReflectionParser","description":null},"$propertyName":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\Common\\Util\\ClassUtils":{"class":{"descriptions":{"short":"Class and reflection related functionality for objects that\nmight or not be proxy objects at the moment.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Johannes Schmitt <schmittjoh@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Util\\Debug":{"class":{"descriptions":{"short":"Static class containing most used debug methods.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Private constructor (prevents instantiation).","long":""},"deprecated":false}}}},"Doctrine\\Common\\Util\\Inflector":{"class":{"descriptions":{"short":"Doctrine inflector has static methods for inflecting text.","long":"Kept for backwards compatibility reasons, was moved to its own component."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\Common\\Version":{"class":{"descriptions":{"short":"Class to store and retrieve the version of Doctrine.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Cache\\ArrayStatement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":[],"docParameters":{"$data":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Cache\\CacheException":{"class":{"descriptions":{"short":"@author Benjamin Eberlei <kontakt@beberlei.de>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Cache\\QueryCacheProfile":{"class":{"descriptions":{"short":"Query Cache Profile handles the data relevant for query caching.","long":"It is a value object, setter methods return NEW instances.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$lifetime","$cacheKey","$resultCache"],"docParameters":{"$lifetime":{"type":"integer","description":null},"$cacheKey":{"type":"string|null","description":null},"$resultCache":{"type":"\\Doctrine\\Common\\Cache\\Cache|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Cache\\ResultCacheStatement":{"class":{"descriptions":{"short":"Cache statement for SQL results.","long":"A result is saved in multiple cache keys, there is the originally specified\ncache key which is just pointing to result rows by key. The following things\nhave to be ensured:\n\n1. lifetime of the original key has to be longer than that of all the individual rows keys\n2. if any one row key is missing the query has to be re-executed.\n\nAlso you have to realize that the cache will load the whole result into memory at once to ensure 2.\nThis means that the memory usage for cached results might increase by using this feature."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stmt","$resultCache","$cacheKey","$realKey","$lifetime"],"optionals":[],"docParameters":{"$stmt":{"type":"\\Doctrine\\DBAL\\Driver\\Statement","description":null},"$resultCache":{"type":"\\Doctrine\\Common\\Cache\\Cache","description":null},"$cacheKey":{"type":"string","description":null},"$realKey":{"type":"string","description":null},"$lifetime":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Configuration":{"class":{"descriptions":{"short":"Configuration container for the Doctrine DBAL.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Connection":{"class":{"descriptions":{"short":"A wrapper around a Doctrine\\DBAL\\Driver\\Connection that adds features like\nevents, transaction isolation levels, configuration, emulated transaction nesting,\nlazy connecting and more.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$params","$driver"],"optionals":["$config","$eventManager"],"docParameters":{"$params":{"type":"array","description":"The connection parameters."},"$driver":{"type":"\\Doctrine\\DBAL\\Driver","description":"The driver to use."},"$config":{"type":"\\Doctrine\\DBAL\\Configuration|null","description":"The configuration, optional."},"$eventManager":{"type":"\\Doctrine\\Common\\EventManager|null","description":"The event manager, optional."}},"throws":{"\\Doctrine\\DBAL\\DBALException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of the Connection class.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\ConnectionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Connections\\MasterSlaveConnection":{"class":{"descriptions":{"short":"Master-Slave Connection","long":"Connection can be used with master-slave setups.\n\nImportant for the understanding of this connection should be how and when\nit picks the slave or master.\n\n1. Slave if master was never picked before and ONLY if 'getWrappedConnection'\nor 'executeQuery' is used.\n2. Master picked when 'exec', 'executeUpdate', 'insert', 'delete', 'update', 'createSavepoint',\n'releaseSavepoint', 'beginTransaction', 'rollback', 'commit', 'query' or\n'prepare' is called.\n3. If master was picked once during the lifetime of the connection it will always get picked afterwards.\n4. One slave connection is randomly picked ONCE during a request.\n\nATTENTION: You can write to the slave with this connection if you execute a write query without\nopening up a transaction. For example:\n\n$conn = DriverManager::getConnection(...);\n$conn->executeQuery(\"DELETE FROM table\");\n\nBe aware that Connection#executeQuery is a method specifically for READ\noperations only.\n\nThis connection is limited to slave operations using the\nConnection#executeQuery operation only, because it wouldn't be compatible\nwith the ORM or SchemaManager code otherwise. Both use all the other\noperations in a context where writes could happen to a slave, which makes\nthis restricted approach necessary.\n\nYou can manually connect to the master at any time by calling:\n\n$conn->connect('master');\n\nInstantiation through the DriverManager looks like:"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$params","$driver"],"optionals":["$config","$eventManager"],"docParameters":{"$params":{"type":"array","description":null},"$driver":{"type":"\\Doctrine\\DBAL\\Driver","description":null},"$config":{"type":"\\Doctrine\\DBAL\\Configuration|null","description":null},"$eventManager":{"type":"\\Doctrine\\Common\\EventManager|null","description":null}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Creates Master Slave Connection.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\DBALException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver":{"class":{"descriptions":{"short":"Driver interface.\nInterface that all DBAL drivers must implement.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\DriverManager":{"class":{"descriptions":{"short":"Factory for creating Doctrine\\DBAL\\Connection instances.","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Private constructor. This class cannot be instantiated.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\AbstractDB2Driver":{"class":{"descriptions":{"short":"Abstract base implementation of the {@link Doctrine\\DBAL\\Driver} interface for IBM DB2 based drivers.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\AbstractDriverException":{"class":{"descriptions":{"short":"Abstract base implementation of the {@link DriverException} interface.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$sqlState","$errorCode"],"docParameters":{"$message":{"type":"string","description":"The driver error message."},"$sqlState":{"type":"string|null","description":"The SQLSTATE the driver is in at the time the error occured, if any."},"$errorCode":{"type":"integer|string|null","description":"The driver specific error code if any."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\AbstractMySQLDriver":{"class":{"descriptions":{"short":"Abstract base implementation of the {@link Doctrine\\DBAL\\Driver} interface for MySQL based drivers.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\AbstractOracleDriver":{"class":{"descriptions":{"short":"Abstract base implementation of the {@link Doctrine\\DBAL\\Driver} interface for Oracle based drivers.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver":{"class":{"descriptions":{"short":"Abstract base implementation of the {@link Doctrine\\DBAL\\Driver} interface for PostgreSQL based drivers.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\AbstractSQLAnywhereDriver":{"class":{"descriptions":{"short":"Abstract base implementation of the {@link Doctrine\\DBAL\\Driver} interface for SAP Sybase SQL Anywhere based drivers.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\AbstractSQLServerDriver":{"class":{"descriptions":{"short":"Abstract base implementation of the {@link Doctrine\\DBAL\\Driver} interface for Microsoft SQL Server based drivers.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\AbstractSQLiteDriver":{"class":{"descriptions":{"short":"Abstract base implementation of the {@link Doctrine\\DBAL\\Driver} interface for SQLite based drivers.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\Connection":{"class":{"descriptions":{"short":"Connection interface.\nDriver connections must implement this interface.","long":"This resembles (a subset of) the PDO interface."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\DriverException":{"class":{"descriptions":{"short":"Contract for a driver exception.","long":"Driver exceptions provide the SQLSTATE of the driver\nand the driver specific error code at the time the error occurred.\n\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\DrizzlePDOMySql\\Connection":{"class":{"descriptions":{"short":"@author Kim Hems\u00f8 Rasmussen <kimhemsoe@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dsn"],"optionals":["$user","$password","$options"],"docParameters":{"$dsn":{"type":"string","description":null},"$user":{"type":"string|null","description":null},"$password":{"type":"string|null","description":null},"$options":{"type":"array|null","description":null}},"throws":{"PDOException":"in case of an error."},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\DrizzlePDOMySql\\Driver":{"class":{"descriptions":{"short":"Drizzle driver using PDO MySql.","long":"@author Kim Hems\u00f8 Rasmussen <kimhemsoe@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\ExceptionConverterDriver":{"class":{"descriptions":{"short":"Contract for a driver that is capable of converting DBAL driver exceptions into standardized DBAL driver exceptions.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\IBMDB2\\DB2Connection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$params","$username","$password"],"optionals":["$driverOptions"],"docParameters":{"$params":{"type":"array","description":null},"$username":{"type":"string","description":null},"$password":{"type":"string","description":null},"$driverOptions":{"type":"array","description":null}},"throws":{"\\Doctrine\\DBAL\\Driver\\IBMDB2\\DB2Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\IBMDB2\\DB2Driver":{"class":{"descriptions":{"short":"IBM DB2 Driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\IBMDB2\\DB2Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\IBMDB2\\DB2Statement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stmt"],"optionals":[],"docParameters":{"$stmt":{"type":"resource","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\Mysqli\\Driver":{"class":{"descriptions":{"short":"@author Kim Hems\u00f8 Rasmussen <kimhemsoe@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\Mysqli\\MysqliConnection":{"class":{"descriptions":{"short":"@author Kim Hems\u00f8 Rasmussen <kimhemsoe@gmail.com>\n@author Till Klampaeckel <till@php.net>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$params","$username","$password"],"optionals":["$driverOptions"],"docParameters":{"$params":{"type":"array","description":null},"$username":{"type":"string","description":null},"$password":{"type":"string","description":null},"$driverOptions":{"type":"array","description":null}},"throws":{"\\Doctrine\\DBAL\\Driver\\Mysqli\\MysqliException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\Mysqli\\MysqliException":{"class":{"descriptions":{"short":"Exception thrown in case the mysqli driver errors.","long":"@author Kim Hems\u00f8 Rasmussen <kimhemsoe@gmail.com>\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$sqlState","$errorCode"],"docParameters":{"$message":{"type":"string","description":"The driver error message."},"$sqlState":{"type":"string|null","description":"The SQLSTATE the driver is in at the time the error occured, if any."},"$errorCode":{"type":"integer|string|null","description":"The driver specific error code if any."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\Mysqli\\MysqliStatement":{"class":{"descriptions":{"short":"@author Kim Hems\u00f8 Rasmussen <kimhemsoe@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn","$prepareString"],"optionals":[],"docParameters":{"$conn":{"type":"\\mysqli","description":null},"$prepareString":{"type":"string","description":null}},"throws":{"\\Doctrine\\DBAL\\Driver\\Mysqli\\MysqliException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\OCI8\\Driver":{"class":{"descriptions":{"short":"A Doctrine DBAL driver for the Oracle OCI8 PHP extensions.","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\OCI8\\OCI8Connection":{"class":{"descriptions":{"short":"OCI8 implementation of the Connection interface.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$username","$password","$db"],"optionals":["$charset","$sessionMode","$persistent"],"docParameters":{"$username":{"type":"string","description":null},"$password":{"type":"string","description":null},"$db":{"type":"string","description":null},"$charset":{"type":"string|null","description":null},"$sessionMode":{"type":"integer","description":null},"$persistent":{"type":"boolean","description":null}},"throws":{"OCI8Exception":""},"return":{"type":"self","description":null},"descriptions":{"short":"Creates a Connection to an Oracle Database using oci8 extension.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\OCI8\\OCI8Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$sqlState","$errorCode"],"docParameters":{"$message":{"type":"string","description":"The driver error message."},"$sqlState":{"type":"string|null","description":"The SQLSTATE the driver is in at the time the error occured, if any."},"$errorCode":{"type":"integer|string|null","description":"The driver specific error code if any."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\OCI8\\OCI8Statement":{"class":{"descriptions":{"short":"The OCI8 implementation of the Statement interface.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dbh","$statement","$conn"],"optionals":[],"docParameters":{"$dbh":{"type":"resource","description":"The connection handle."},"$statement":{"type":"string","description":"The SQL statement."},"$conn":{"type":"\\Doctrine\\DBAL\\Driver\\OCI8\\OCI8Connection","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a new OCI8Statement that uses the given connection handle and SQL statement.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\PDOConnection":{"class":{"descriptions":{"short":"PDO implementation of the Connection interface.\nUsed by all PDO-based drivers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dsn"],"optionals":["$user","$password","$options"],"docParameters":{"$dsn":{"type":"string","description":null},"$user":{"type":"string|null","description":null},"$password":{"type":"string|null","description":null},"$options":{"type":"array|null","description":null}},"throws":{"PDOException":"in case of an error."},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\PDOException":{"class":{"descriptions":{"short":"Tiny wrapper for PDOException instances to implement the {@link DriverException} interface.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$exception"],"optionals":[],"docParameters":{"$exception":{"type":"\\PDOException","description":"The PDO exception to wrap."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\PDOIbm\\Driver":{"class":{"descriptions":{"short":"Driver for the PDO IBM extension.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\PDOMySql\\Driver":{"class":{"descriptions":{"short":"PDO MySql driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\PDOOracle\\Driver":{"class":{"descriptions":{"short":"PDO Oracle driver.","long":"WARNING: This driver gives us segfaults in our testsuites on CLOB and other\nstuff. PDO Oracle is not maintained by Oracle or anyone in the PHP community,\nwhich leads us to the recommendation to use the \"oci8\" driver to connect\nto Oracle instead."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\PDOPgSql\\Driver":{"class":{"descriptions":{"short":"Driver that connects through pdo_pgsql.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\PDOSqlite\\Driver":{"class":{"descriptions":{"short":"The PDO Sqlite driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\PDOSqlsrv\\Connection":{"class":{"descriptions":{"short":"Sqlsrv Connection implementation.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dsn"],"optionals":["$user","$password","$options"],"docParameters":{"$dsn":{"type":"string","description":null},"$user":{"type":"string|null","description":null},"$password":{"type":"string|null","description":null},"$options":{"type":"array|null","description":null}},"throws":{"PDOException":"in case of an error."},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\PDOSqlsrv\\Driver":{"class":{"descriptions":{"short":"The PDO-based Sqlsrv driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\PDOSqlsrv\\Statement":{"class":{"descriptions":{"short":"PDO SQL Server Statement","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Protected constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\PDOStatement":{"class":{"descriptions":{"short":"The PDO implementation of the Statement interface.\nUsed by all PDO-based drivers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Protected constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\PingableConnection":{"class":{"descriptions":{"short":"An interface for connections which support a \"native\" ping method.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\ResultStatement":{"class":{"descriptions":{"short":"Interface for the reading part of a prepare statement only.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\SQLAnywhere\\Driver":{"class":{"descriptions":{"short":"A Doctrine DBAL driver for the SAP Sybase SQL Anywhere PHP extension.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\SQLAnywhere\\SQLAnywhereConnection":{"class":{"descriptions":{"short":"SAP Sybase SQL Anywhere implementation of the Connection interface.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dsn"],"optionals":["$persistent"],"docParameters":{"$dsn":{"type":"string","description":"The connection string."},"$persistent":{"type":"boolean","description":"Whether or not to establish a persistent connection."}},"throws":{"SQLAnywhereException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Connects to database with given connection string."},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\SQLAnywhere\\SQLAnywhereException":{"class":{"descriptions":{"short":"SAP Sybase SQL Anywhere driver exception.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$sqlState","$errorCode"],"docParameters":{"$message":{"type":"string","description":"The driver error message."},"$sqlState":{"type":"string|null","description":"The SQLSTATE the driver is in at the time the error occured, if any."},"$errorCode":{"type":"integer|string|null","description":"The driver specific error code if any."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\SQLAnywhere\\SQLAnywhereStatement":{"class":{"descriptions":{"short":"SAP SQL Anywhere implementation of the Statement interface.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn","$sql"],"optionals":[],"docParameters":{"$conn":{"type":"resource","description":"The connection resource to use."},"$sql":{"type":"string","description":"The SQL statement to prepare."}},"throws":{"SQLAnywhereException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Prepares given statement for given connection."},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\SQLSrv\\Driver":{"class":{"descriptions":{"short":"Driver for ext\/sqlsrv.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\SQLSrv\\LastInsertId":{"class":{"descriptions":{"short":"Last Id Data Container.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\SQLSrv\\SQLSrvConnection":{"class":{"descriptions":{"short":"SQL Server implementation for the Connection interface.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$serverName","$connectionOptions"],"optionals":[],"docParameters":{"$serverName":{"type":"string","description":null},"$connectionOptions":{"type":"array","description":null}},"throws":{"\\Doctrine\\DBAL\\Driver\\SQLSrv\\SQLSrvException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\SQLSrv\\SQLSrvException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$sqlState","$errorCode"],"docParameters":{"$message":{"type":"string","description":"The driver error message."},"$sqlState":{"type":"string|null","description":"The SQLSTATE the driver is in at the time the error occured, if any."},"$errorCode":{"type":"integer|string|null","description":"The driver specific error code if any."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\SQLSrv\\SQLSrvStatement":{"class":{"descriptions":{"short":"SQL Server Statement.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn","$sql"],"optionals":["$lastInsertId"],"docParameters":{"$conn":{"type":"resource","description":null},"$sql":{"type":"string","description":null},"$lastInsertId":{"type":"\\Doctrine\\DBAL\\Driver\\SQLSrv\\LastInsertId|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Driver\\ServerInfoAwareConnection":{"class":{"descriptions":{"short":"Contract for a connection that is able to provide information about the server it is connected to.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Driver\\Statement":{"class":{"descriptions":{"short":"Statement interface.\nDrivers must implement this interface.","long":"This resembles (a subset of) the PDOStatement interface.\n\n@author Konsta Vesterinen <kvesteri@cc.hut.fi>\n@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Event\\ConnectionEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when a Driver connection is established inside Doctrine\\DBAL\\Connection.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection"],"optionals":[],"docParameters":{"$connection":{"type":"\\Doctrine\\DBAL\\Connection","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit":{"class":{"descriptions":{"short":"MySQL Session Init Event Subscriber which allows to set the Client Encoding of the Connection.","long":""},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$charset","$collation"],"docParameters":{"$charset":{"type":"string","description":"The charset."},"$collation":{"type":"string|boolean","description":"The collation, or FALSE if no collation."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Configure Charset and Collation options of MySQL Client for each Connection.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit":{"class":{"descriptions":{"short":"Should be used when Oracle Server default environment does not match the Doctrine requirements.","long":"The following environment variables are required for the Doctrine default date format:\n\nNLS_TIME_FORMAT=\"HH24:MI:SS\"\nNLS_DATE_FORMAT=\"YYYY-MM-DD HH24:MI:SS\"\nNLS_TIMESTAMP_FORMAT=\"YYYY-MM-DD HH24:MI:SS\"\nNLS_TIMESTAMP_TZ_FORMAT=\"YYYY-MM-DD HH24:MI:SS TZH:TZM\""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$oracleSessionVars"],"docParameters":{"$oracleSessionVars":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\Listeners\\SQLSessionInit":{"class":{"descriptions":{"short":"Session init listener for executing a single SQL statement right after a connection is opened.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sql"],"optionals":[],"docParameters":{"$sql":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\SchemaAlterTableAddColumnEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when SQL queries for adding table columns are generated inside Doctrine\\DBAL\\Platform\\*Platform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$column","$tableDiff","$platform"],"optionals":[],"docParameters":{"$column":{"type":"\\Doctrine\\DBAL\\Schema\\Column","description":null},"$tableDiff":{"type":"\\Doctrine\\DBAL\\Schema\\TableDiff","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\SchemaAlterTableChangeColumnEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when SQL queries for changing table columns are generated inside Doctrine\\DBAL\\Platform\\*Platform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$columnDiff","$tableDiff","$platform"],"optionals":[],"docParameters":{"$columnDiff":{"type":"\\Doctrine\\DBAL\\Schema\\ColumnDiff","description":null},"$tableDiff":{"type":"\\Doctrine\\DBAL\\Schema\\TableDiff","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\SchemaAlterTableEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when SQL queries for creating tables are generated inside Doctrine\\DBAL\\Platform\\*Platform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$tableDiff","$platform"],"optionals":[],"docParameters":{"$tableDiff":{"type":"\\Doctrine\\DBAL\\Schema\\TableDiff","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\SchemaAlterTableRemoveColumnEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when SQL queries for removing table columns are generated inside Doctrine\\DBAL\\Platform\\*Platform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$column","$tableDiff","$platform"],"optionals":[],"docParameters":{"$column":{"type":"\\Doctrine\\DBAL\\Schema\\Column","description":null},"$tableDiff":{"type":"\\Doctrine\\DBAL\\Schema\\TableDiff","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\SchemaAlterTableRenameColumnEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when SQL queries for renaming table columns are generated inside Doctrine\\DBAL\\Platform\\*Platform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$oldColumnName","$column","$tableDiff","$platform"],"optionals":[],"docParameters":{"$oldColumnName":{"type":"string","description":null},"$column":{"type":"\\Doctrine\\DBAL\\Schema\\Column","description":null},"$tableDiff":{"type":"\\Doctrine\\DBAL\\Schema\\TableDiff","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\SchemaColumnDefinitionEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when the portable column definition is generated inside Doctrine\\DBAL\\Schema\\AbstractSchemaManager.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$tableColumn","$table","$database","$connection"],"optionals":[],"docParameters":{"$tableColumn":{"type":"array","description":null},"$table":{"type":"string","description":null},"$database":{"type":"string","description":null},"$connection":{"type":"\\Doctrine\\DBAL\\Connection","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\SchemaCreateTableColumnEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when SQL queries for creating table columns are generated inside Doctrine\\DBAL\\Platform\\AbstractPlatform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$column","$table","$platform"],"optionals":[],"docParameters":{"$column":{"type":"\\Doctrine\\DBAL\\Schema\\Column","description":null},"$table":{"type":"\\Doctrine\\DBAL\\Schema\\Table","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\SchemaCreateTableEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when SQL queries for creating tables are generated inside Doctrine\\DBAL\\Platform\\AbstractPlatform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$table","$columns","$options","$platform"],"optionals":[],"docParameters":{"$table":{"type":"\\Doctrine\\DBAL\\Schema\\Table","description":null},"$columns":{"type":"array","description":null},"$options":{"type":"array","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\SchemaDropTableEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when the SQL query for dropping tables are generated inside Doctrine\\DBAL\\Platform\\AbstractPlatform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$table","$platform"],"optionals":[],"docParameters":{"$table":{"type":"string|\\Doctrine\\DBAL\\Schema\\Table","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform","description":null}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Event\\SchemaEventArgs":{"class":{"descriptions":{"short":"Base class for schema related events.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Event\\SchemaIndexDefinitionEventArgs":{"class":{"descriptions":{"short":"Event Arguments used when the portable index definition is generated inside Doctrine\\DBAL\\Schema\\AbstractSchemaManager.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$tableIndex","$table","$connection"],"optionals":[],"docParameters":{"$tableIndex":{"type":"array","description":null},"$table":{"type":"string","description":null},"$connection":{"type":"\\Doctrine\\DBAL\\Connection","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Events":{"class":{"descriptions":{"short":"Container for all DBAL events.","long":"This class cannot be instantiated.\n\n@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Private constructor. This class cannot be instantiated.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\ConnectionException":{"class":{"descriptions":{"short":"Base class for all connection related errors detected in the driver.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\ConstraintViolationException":{"class":{"descriptions":{"short":"Base class for all constraint violation related errors detected in the driver.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\DatabaseObjectExistsException":{"class":{"descriptions":{"short":"Base class for all already existing database object related errors detected in the driver.","long":"A database object is considered any asset that can be created in a database\nsuch as schemas, tables, views, sequences, triggers,  constraints, indexes,\nfunctions, stored procedures etc.\n\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\DatabaseObjectNotFoundException":{"class":{"descriptions":{"short":"Base class for all unknown database object related errors detected in the driver.","long":"A database object is considered any asset that can be created in a database\nsuch as schemas, tables, views, sequences, triggers,  constraints, indexes,\nfunctions, stored procedures etc.\n\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\DriverException":{"class":{"descriptions":{"short":"Base class for all errors detected in the driver.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException":{"class":{"descriptions":{"short":"Exception for a foreign key constraint violation detected in the driver.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\InvalidArgumentException":{"class":{"descriptions":{"short":"Exception to be thrown when invalid arguments are passed to any DBAL API","long":"@author Marco Pivetta <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\InvalidFieldNameException":{"class":{"descriptions":{"short":"Exception for an invalid specified field name in a statement detected in the driver.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\NonUniqueFieldNameException":{"class":{"descriptions":{"short":"Exception for a non-unique\/ambiguous specified field name in a statement detected in the driver.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException":{"class":{"descriptions":{"short":"Exception for a NOT NULL constraint violation detected in the driver.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\ReadOnlyException":{"class":{"descriptions":{"short":"Exception for a write operation attempt on a read-only database element detected in the driver.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\ServerException":{"class":{"descriptions":{"short":"Base class for all server related errors detected in the driver.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\SyntaxErrorException":{"class":{"descriptions":{"short":"Exception for a syntax error in a statement detected in the driver.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\TableExistsException":{"class":{"descriptions":{"short":"Exception for an already existing table referenced in a statement detected in the driver.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\TableNotFoundException":{"class":{"descriptions":{"short":"Exception for an unknown table referenced in a statement detected in the driver.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException":{"class":{"descriptions":{"short":"Exception for a unique constraint violation detected in the driver.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$driverException"],"optionals":[],"docParameters":{"$message":{"type":"string","description":"The exception message."},"$driverException":{"type":"\\Doctrine\\DBAL\\Driver\\DriverException","description":"The DBAL driver exception to chain."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Id\\TableGenerator":{"class":{"descriptions":{"short":"Table ID Generator for those poor languages that are missing sequences.","long":"WARNING: The Table Id Generator clones a second independent database\nconnection to work correctly. This means using the generator requests that\ngenerate IDs will have two open database connections. This is necessary to\nbe safe from transaction failures in the main connection. Make sure to only\never use one TableGenerator otherwise you end up with many connections.\n\nTableID Generator does not work with SQLite.\n\nThe TableGenerator does not take care of creating the SQL Table itself. You\nshould look at the `TableGeneratorSchemaVisitor` to do this for you.\nOtherwise the schema for a table looks like:\n\nCREATE sequences (\nsequence_name VARCHAR(255) NOT NULL,\nsequence_value INT NOT NULL DEFAULT '1',\nsequence_increment_by INT NOT NULL DEFAULT '1',\nPRIMARY KEY (table_name)\n);\n\nTechnically this generator works as follows:\n\n1. Use a robust transaction serialization level.\n2. Open transaction\n3. Acquire a read lock on the table row (SELECT .. FOR UPDATE)\n4. Increment current value by one and write back to database\n5. Commit transaction\n\nIf you are using a sequence_increment_by value that is larger than one the\nID Generator will keep incrementing values until it hits the incrementation\ngap before issuing another query.\n\nIf no row is present for a given sequence a new one will be created with the\ndefault values 'value' = 1 and 'increment_by' = 1\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":["$generatorTableName"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$generatorTableName":{"type":"string","description":null}},"throws":{"\\Doctrine\\DBAL\\DBALException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Id\\TableGeneratorSchemaVisitor":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$generatorTableName"],"docParameters":{"$generatorTableName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\LockMode":{"class":{"descriptions":{"short":"Contains all DBAL LockModes.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Private constructor. This class cannot be instantiated.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Logging\\DebugStack":{"class":{"descriptions":{"short":"Includes executed SQLs in a Debug Stack.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Logging\\EchoSQLLogger":{"class":{"descriptions":{"short":"A SQL logger that logs to the standard output using echo\/var_dump.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Logging\\LoggerChain":{"class":{"descriptions":{"short":"Chains multiple SQLLogger.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Logging\\SQLLogger":{"class":{"descriptions":{"short":"Interface for SQL loggers.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\AbstractPlatform":{"class":{"descriptions":{"short":"Base class for all DatabasePlatforms. The DatabasePlatforms are the central\npoint of abstraction of platform-specific behaviors, features and SQL dialects.\nThey are a passive source of information.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\DB2Platform":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\DrizzlePlatform":{"class":{"descriptions":{"short":"Drizzle platform","long":"@author Kim Hems\u00f8 Rasmussen <kimhemsoe@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\Keywords\\DB2Keywords":{"class":{"descriptions":{"short":"DB2 Keywords.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\DrizzleKeywords":{"class":{"descriptions":{"short":"Drizzle Keywordlist.","long":"@author Kim Hems\u00f8 Rasmussen <kimhemsoe@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\KeywordList":{"class":{"descriptions":{"short":"Abstract interface for a SQL reserved keyword dictionary.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\MsSQLKeywords":{"class":{"descriptions":{"short":"MsSQL Keywordlist","long":""},"deprecated":true},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\MySQL57Keywords":{"class":{"descriptions":{"short":"MySQL 5.7 reserved keywords list.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\MySQLKeywords":{"class":{"descriptions":{"short":"MySQL Keywordlist.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\OracleKeywords":{"class":{"descriptions":{"short":"Oracle Keywordlist.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\PostgreSQL91Keywords":{"class":{"descriptions":{"short":"PostgreSQL 9.1 reserved keywords list.","long":"@author Martin Haso\u0148 <martin.hason@gmail.com>\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\PostgreSQL92Keywords":{"class":{"descriptions":{"short":"PostgreSQL 9.2 reserved keywords list.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\PostgreSQLKeywords":{"class":{"descriptions":{"short":"PostgreSQL Keywordlist.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\ReservedKeywordsValidator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$keywordLists"],"optionals":[],"docParameters":{"$keywordLists":{"type":"\\Doctrine\\DBAL\\Platforms\\Keywords\\KeywordList[]","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\Keywords\\SQLAnywhere11Keywords":{"class":{"descriptions":{"short":"SAP Sybase SQL Anywhere 11 reserved keywords list.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\SQLAnywhere12Keywords":{"class":{"descriptions":{"short":"SAP Sybase SQL Anywhere 12 reserved keywords list.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\SQLAnywhere16Keywords":{"class":{"descriptions":{"short":"SAP Sybase SQL Anywhere 16 reserved keywords list.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\SQLAnywhereKeywords":{"class":{"descriptions":{"short":"SAP Sybase SQL Anywhere 10 reserved keywords list.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\SQLServer2005Keywords":{"class":{"descriptions":{"short":"Microsoft SQL Server 2005 reserved keyword dictionary.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\SQLServer2008Keywords":{"class":{"descriptions":{"short":"Microsoft SQL Server 2008 reserved keyword dictionary.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\SQLServer2012Keywords":{"class":{"descriptions":{"short":"Microsoft SQL Server 2012 reserved keyword dictionary.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\SQLServerKeywords":{"class":{"descriptions":{"short":"Microsoft SQL Server 2000 reserved keyword dictionary.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\Keywords\\SQLiteKeywords":{"class":{"descriptions":{"short":"SQLite Keywordlist.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Platforms\\MySQL57Platform":{"class":{"descriptions":{"short":"Provides the behavior, features and SQL dialect of the MySQL 5.7 database platform.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\MySqlPlatform":{"class":{"descriptions":{"short":"The MySqlPlatform provides the behavior, features and SQL dialect of the\nMySQL database platform. This platform represents a MySQL 5.0 or greater platform that\nuses the InnoDB storage engine.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\OraclePlatform":{"class":{"descriptions":{"short":"OraclePlatform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\PostgreSQL91Platform":{"class":{"descriptions":{"short":"Provides the behavior, features and SQL dialect of the PostgreSQL 9.1 database platform.","long":"@author Martin Haso\u0148 <martin.hason@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\PostgreSQL92Platform":{"class":{"descriptions":{"short":"Provides the behavior, features and SQL dialect of the PostgreSQL 9.2 database platform.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\PostgreSqlPlatform":{"class":{"descriptions":{"short":"PostgreSqlPlatform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\SQLAnywhere11Platform":{"class":{"descriptions":{"short":"The SQLAnywhere11Platform provides the behavior, features and SQL dialect of the\nSAP Sybase SQL Anywhere 11 database platform.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\SQLAnywhere12Platform":{"class":{"descriptions":{"short":"The SQLAnywhere12Platform provides the behavior, features and SQL dialect of the\nSAP Sybase SQL Anywhere 12 database platform.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\SQLAnywhere16Platform":{"class":{"descriptions":{"short":"The SQLAnywhere16Platform provides the behavior, features and SQL dialect of the\nSAP Sybase SQL Anywhere 16 database platform.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\SQLAnywherePlatform":{"class":{"descriptions":{"short":"The SQLAnywherePlatform provides the behavior, features and SQL dialect of the\nSAP Sybase SQL Anywhere 10 database platform.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\SQLAzurePlatform":{"class":{"descriptions":{"short":"Platform to ensure compatibility of Doctrine with SQL Azure","long":"On top of SQL Server 2008 the following functionality is added:\n\n- Create tables with the FEDERATED ON syntax."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\SQLServer2005Platform":{"class":{"descriptions":{"short":"Platform to ensure compatibility of Doctrine with Microsoft SQL Server 2005 version and\nhigher.","long":"Differences to SQL Server 2008 are:\n\n- DATETIME2 datatype does not exist, only DATETIME which has a precision of\n3. This is not supported by PHP DateTime, so we are emulating it by\nsetting .000 manually.\n- Starting with SQLServer2005 VARCHAR(MAX), VARBINARY(MAX) and\nNVARCHAR(max) replace the old TEXT, NTEXT and IMAGE types. See\n{@link http:\/\/www.sql-server-helper.com\/faq\/sql-server-2005-varchar-max-p01.aspx}\nfor more information."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\SQLServer2008Platform":{"class":{"descriptions":{"short":"Platform to ensure compatibility of Doctrine with Microsoft SQL Server 2008 version.","long":"Differences to SQL Server 2005 and before are that a new DATETIME2 type was\nintroduced that has a higher precision."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\SQLServer2012Platform":{"class":{"descriptions":{"short":"Platform to ensure compatibility of Doctrine with Microsoft SQL Server 2012 version.","long":"Differences to SQL Server 2008 and before are that sequences are introduced.\n\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\SQLServerPlatform":{"class":{"descriptions":{"short":"The SQLServerPlatform provides the behavior, features and SQL dialect of the\nMicrosoft SQL Server database platform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Platforms\\SqlitePlatform":{"class":{"descriptions":{"short":"The SqlitePlatform class describes the specifics and dialects of the SQLite\ndatabase platform.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Portability\\Connection":{"class":{"descriptions":{"short":"Portability wrapper for a Connection.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$params","$driver"],"optionals":["$config","$eventManager"],"docParameters":{"$params":{"type":"array","description":"The connection parameters."},"$driver":{"type":"\\Doctrine\\DBAL\\Driver","description":"The driver to use."},"$config":{"type":"\\Doctrine\\DBAL\\Configuration|null","description":"The configuration, optional."},"$eventManager":{"type":"\\Doctrine\\Common\\EventManager|null","description":"The event manager, optional."}},"throws":{"\\Doctrine\\DBAL\\DBALException":""},"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of the Connection class.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Portability\\Statement":{"class":{"descriptions":{"short":"Portability wrapper for a Statement.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stmt","$conn"],"optionals":[],"docParameters":{"$stmt":{"type":"\\Doctrine\\DBAL\\Driver\\Statement","description":null},"$conn":{"type":"\\Doctrine\\DBAL\\Portability\\Connection","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Wraps <tt>Statement<\/tt> and applies portability measures.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Query\\Expression\\CompositeExpression":{"class":{"descriptions":{"short":"Composite expression is responsible to build a group of similar expression.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type"],"optionals":["$parts"],"docParameters":{"$type":{"type":"string","description":"Instance type of composite expression."},"$parts":{"type":"array","description":"Composition of expressions to be joined on composite expression."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Query\\Expression\\ExpressionBuilder":{"class":{"descriptions":{"short":"ExpressionBuilder class is responsible to dynamically create SQL query parts.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection"],"optionals":[],"docParameters":{"$connection":{"type":"\\Doctrine\\DBAL\\Connection","description":"The DBAL Connection."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>ExpressionBuilder<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Query\\QueryBuilder":{"class":{"descriptions":{"short":"QueryBuilder class is responsible to dynamically create SQL queries.","long":"Important: Verify that every feature you use will work with your database vendor.\nSQL Query Builder does not attempt to validate the generated SQL at all.\n\nThe query builder does no validation whatsoever if certain features even work with the\nunderlying database vendor. Limit queries and joins are NOT applied to UPDATE and DELETE statements\neven if some vendors such as MySQL support it."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection"],"optionals":[],"docParameters":{"$connection":{"type":"\\Doctrine\\DBAL\\Connection","description":"The DBAL Connection."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>QueryBuilder<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Query\\QueryException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\SQLParserUtils":{"class":{"descriptions":{"short":"Utility class that parses sql statements with regard to types and parameters.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\SQLParserUtilsException":{"class":{"descriptions":{"short":"Doctrine\\DBAL\\ConnectionException","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\AbstractAsset":{"class":{"descriptions":{"short":"The abstract asset allows to reset the name of all assets without publishing this to the public userland.","long":"This encapsulation hack is necessary to keep a consistent state of the database schema. Say we have a list of tables\narray($tableName => Table($tableName)); if you want to rename the table, you have to make sure"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Schema\\AbstractSchemaManager":{"class":{"descriptions":{"short":"Base class for schema managers. Schema managers are used to inspect and\/or\nmodify the database schema\/structure.","long":"@author Konsta Vesterinen <kvesteri@cc.hut.fi>\n@author Lukas Smith <smith@pooteeweet.org> (PEAR MDB2 library)\n@author Roman Borschel <roman@code-factory.org>\n@author Jonathan H. Wage <jonwage@gmail.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":["$platform"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Accepts the Connection instance to manage the schema for.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Column":{"class":{"descriptions":{"short":"Object representation of a database column.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$columnName","$type"],"optionals":["$options"],"docParameters":{"$columnName":{"type":"string","description":null},"$type":{"type":"Type","description":null},"$options":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a new Column.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\ColumnDiff":{"class":{"descriptions":{"short":"Represents the change of a column.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$oldColumnName","$column"],"optionals":["$changedProperties","$fromColumn"],"docParameters":{"$oldColumnName":{"type":"string","description":null},"$column":{"type":"Column","description":null},"$changedProperties":{"type":"string[]","description":null},"$fromColumn":{"type":"Column","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Comparator":{"class":{"descriptions":{"short":"Compares two Schemas and return an instance of SchemaDiff.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Schema\\Constraint":{"class":{"descriptions":{"short":"Marker interface for contraints.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Schema\\DB2SchemaManager":{"class":{"descriptions":{"short":"IBM Db2 Schema Manager.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":["$platform"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Accepts the Connection instance to manage the schema for.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\DrizzleSchemaManager":{"class":{"descriptions":{"short":"Schema manager for the Drizzle RDBMS.","long":"@author Kim Hems\u00f8 Rasmussen <kimhemsoe@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":["$platform"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Accepts the Connection instance to manage the schema for.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\ForeignKeyConstraint":{"class":{"descriptions":{"short":"An abstraction class for a foreign key constraint.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$localColumnNames","$foreignTableName","$foreignColumnNames"],"optionals":["$name","$options"],"docParameters":{"$localColumnNames":{"type":"array","description":"Names of the referencing table columns."},"$foreignTableName":{"type":"Table|string","description":"Referenced table."},"$foreignColumnNames":{"type":"array","description":"Names of the referenced table columns."},"$name":{"type":"string|null","description":"Name of the foreign key constraint."},"$options":{"type":"array","description":"Options associated with the foreign key constraint."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes the foreign key constraint.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Identifier":{"class":{"descriptions":{"short":"An abstraction class for an asset identifier.","long":"Wraps identifier names like column names in indexes \/ foreign keys\nin an abstract class for proper quotation capabilities.\n\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$identifier"],"optionals":["$quote"],"docParameters":{"$identifier":{"type":"string","description":"Identifier name to wrap."},"$quote":{"type":"bool","description":"Whether to force quoting the given identifier."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Index":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$indexName","$columns"],"optionals":["$isUnique","$isPrimary","$flags","$options"],"docParameters":{"$indexName":{"type":"string","description":null},"$columns":{"type":"string[]","description":null},"$isUnique":{"type":"boolean","description":null},"$isPrimary":{"type":"boolean","description":null},"$flags":{"type":"string[]","description":null},"$options":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\MySqlSchemaManager":{"class":{"descriptions":{"short":"Schema manager for the MySql RDBMS.","long":"@author Konsta Vesterinen <kvesteri@cc.hut.fi>\n@author Lukas Smith <smith@pooteeweet.org> (PEAR MDB2 library)\n@author Roman Borschel <roman@code-factory.org>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":["$platform"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Accepts the Connection instance to manage the schema for.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\OracleSchemaManager":{"class":{"descriptions":{"short":"Oracle Schema Manager.","long":"@author Konsta Vesterinen <kvesteri@cc.hut.fi>\n@author Lukas Smith <smith@pooteeweet.org> (PEAR MDB2 library)\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":["$platform"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Accepts the Connection instance to manage the schema for.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\PostgreSqlSchemaManager":{"class":{"descriptions":{"short":"PostgreSQL Schema Manager.","long":"@author Konsta Vesterinen <kvesteri@cc.hut.fi>\n@author Lukas Smith <smith@pooteeweet.org> (PEAR MDB2 library)\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":["$platform"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Accepts the Connection instance to manage the schema for.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\SQLAnywhereSchemaManager":{"class":{"descriptions":{"short":"SAP Sybase SQL Anywhere schema manager.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":["$platform"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Accepts the Connection instance to manage the schema for.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\SQLServerSchemaManager":{"class":{"descriptions":{"short":"SQL Server Schema Manager.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":["$platform"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Accepts the Connection instance to manage the schema for.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Schema":{"class":{"descriptions":{"short":"Object representation of a database schema.","long":"Different vendors have very inconsistent naming with regard to the concept\nof a \"schema\". Doctrine understands a schema as the entity that conceptually\nwraps a set of database objects such as tables, sequences, indexes and\nforeign keys that belong to each other into a namespace. A Doctrine Schema\nhas nothing to do with the \"SCHEMA\" defined as in PostgreSQL, it is more\nrelated to the concept of \"DATABASE\" that exists in MySQL and PostgreSQL.\n\nEvery asset in the doctrine schema has a name. A name consists of either a\nnamespace.local name pair or just a local unqualified name.\n\nThe abstraction layer that covers a PostgreSQL schema is the namespace of an\ndatabase object (asset). A schema can have a name, which will be used as\ndefault namespace for the unqualified database objects that are created in\nthe schema.\n\nIn the case of MySQL where cross-database queries are allowed this leads to\ndatabases being \"misinterpreted\" as namespaces. This is intentional, however\nthe CREATE\/DROP SQL visitors will just filter this queries and do not\nexecute them. Only the queries for the currently connected database are\nexecuted."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$tables","$sequences","$schemaConfig","$namespaces"],"docParameters":{"$tables":{"type":"\\Doctrine\\DBAL\\Schema\\Table[]","description":null},"$sequences":{"type":"\\Doctrine\\DBAL\\Schema\\Sequence[]","description":null},"$schemaConfig":{"type":"\\Doctrine\\DBAL\\Schema\\SchemaConfig","description":null},"$namespaces":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\SchemaConfig":{"class":{"descriptions":{"short":"Configuration for a Schema.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Schema\\SchemaDiff":{"class":{"descriptions":{"short":"Schema Diff.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$newTables","$changedTables","$removedTables","$fromSchema"],"docParameters":{"$newTables":{"type":"\\Doctrine\\DBAL\\Schema\\Table[]","description":null},"$changedTables":{"type":"\\Doctrine\\DBAL\\Schema\\TableDiff[]","description":null},"$removedTables":{"type":"\\Doctrine\\DBAL\\Schema\\Table[]","description":null},"$fromSchema":{"type":"\\Doctrine\\DBAL\\Schema\\Schema|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs an SchemaDiff object.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\SchemaException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Sequence":{"class":{"descriptions":{"short":"Sequence structure.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$allocationSize","$initialValue","$cache"],"docParameters":{"$name":{"type":"string","description":null},"$allocationSize":{"type":"integer","description":null},"$initialValue":{"type":"integer","description":null},"$cache":{"type":"integer|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\SqliteSchemaManager":{"class":{"descriptions":{"short":"Sqlite SchemaManager.","long":"@author Konsta Vesterinen <kvesteri@cc.hut.fi>\n@author Lukas Smith <smith@pooteeweet.org> (PEAR MDB2 library)\n@author Jonathan H. Wage <jonwage@gmail.com>\n@author Martin Haso\u0148 <martin.hason@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":["$platform"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$platform":{"type":"\\Doctrine\\DBAL\\Platforms\\AbstractPlatform|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor. Accepts the Connection instance to manage the schema for.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Synchronizer\\AbstractSchemaSynchronizer":{"class":{"descriptions":{"short":"Abstract schema synchronizer with methods for executing batches of SQL.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":[],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Synchronizer\\SchemaSynchronizer":{"class":{"descriptions":{"short":"The synchronizer knows how to synchronize a schema with the configured\ndatabase.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Schema\\Synchronizer\\SingleDatabaseSynchronizer":{"class":{"descriptions":{"short":"Schema Synchronizer for Default DBAL Connection.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":[],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Table":{"class":{"descriptions":{"short":"Object Representation of a table.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$tableName"],"optionals":["$columns","$indexes","$fkConstraints","$idGeneratorType","$options"],"docParameters":{"$tableName":{"type":"string","description":null},"$columns":{"type":"Column[]","description":null},"$indexes":{"type":"Index[]","description":null},"$fkConstraints":{"type":"ForeignKeyConstraint[]","description":null},"$idGeneratorType":{"type":"integer","description":null},"$options":{"type":"array","description":null}},"throws":{"DBALException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\TableDiff":{"class":{"descriptions":{"short":"Table Diff.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$tableName"],"optionals":["$addedColumns","$changedColumns","$removedColumns","$addedIndexes","$changedIndexes","$removedIndexes","$fromTable"],"docParameters":{"$tableName":{"type":"string","description":null},"$addedColumns":{"type":"\\Doctrine\\DBAL\\Schema\\Column[]","description":null},"$changedColumns":{"type":"\\Doctrine\\DBAL\\Schema\\ColumnDiff[]","description":null},"$removedColumns":{"type":"\\Doctrine\\DBAL\\Schema\\Column[]","description":null},"$addedIndexes":{"type":"\\Doctrine\\DBAL\\Schema\\Index[]","description":null},"$changedIndexes":{"type":"\\Doctrine\\DBAL\\Schema\\Index[]","description":null},"$removedIndexes":{"type":"\\Doctrine\\DBAL\\Schema\\Index[]","description":null},"$fromTable":{"type":"\\Doctrine\\DBAL\\Schema\\Table|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs an TableDiff object.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\View":{"class":{"descriptions":{"short":"Representation of a Database View.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$sql"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null},"$sql":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Visitor\\AbstractVisitor":{"class":{"descriptions":{"short":"Abstract Visitor with empty methods for easy extension.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Schema\\Visitor\\CreateSchemaSqlCollector":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$platform"],"optionals":[],"docParameters":{"$platform":{"type":"AbstractPlatform","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Visitor\\DropSchemaSqlCollector":{"class":{"descriptions":{"short":"Gathers SQL statements that allow to completely drop the current schema.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$platform"],"optionals":[],"docParameters":{"$platform":{"type":"AbstractPlatform","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Schema\\Visitor\\Graphviz":{"class":{"descriptions":{"short":"Create a Graphviz output of a Schema.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Schema\\Visitor\\NamespaceVisitor":{"class":{"descriptions":{"short":"Visitor that can visit schema namespaces.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Schema\\Visitor\\RemoveNamespacedAssets":{"class":{"descriptions":{"short":"Removes assets from a schema that are not in the default namespace.","long":"Some databases such as MySQL support cross databases joins, but don't\nallow to call DDLs to a database from another connected database.\nBefore a schema is serialized into SQL this visitor can cleanup schemas with\nnon default namespaces.\n\nThis visitor filters all these non-default namespaced tables and sequences\nand removes them from the SChema instance.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Schema\\Visitor\\SchemaDiffVisitor":{"class":{"descriptions":{"short":"Visit a SchemaDiff.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Schema\\Visitor\\Visitor":{"class":{"descriptions":{"short":"Schema Visitor used for Validation or Generation purposes.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Sharding\\PoolingShardConnection":{"class":{"descriptions":{"short":"Sharding implementation that pools many different connections\ninternally and serves data from the currently active connection.","long":"The internals of this class are:\n\n- All sharding clients are specified and given a shard-id during\nconfiguration.\n- By default, the global shard is selected. If no global shard is configured\nan exception is thrown on access.\n- Selecting a shard by distribution value delegates the mapping\n\"distributionValue\" => \"client\" to the ShardChooser interface.\n- An exception is thrown if trying to switch shards during an open\ntransaction.\n\nInstantiation through the DriverManager looks like:"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$params","$driver"],"optionals":["$config","$eventManager"],"docParameters":{"$params":{"type":"array","description":null},"$driver":{"type":"\\Doctrine\\DBAL\\Driver","description":null},"$config":{"type":"\\Doctrine\\DBAL\\Configuration","description":null},"$eventManager":{"type":"\\Doctrine\\Common\\EventManager","description":null}},"throws":{"\\InvalidArgumentException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Sharding\\PoolingShardManager":{"class":{"descriptions":{"short":"Shard Manager for the Connection Pooling Shard Strategy","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":[],"docParameters":{"$conn":{"type":"PoolingShardConnection","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Sharding\\SQLAzure\\SQLAzureFederationsSynchronizer":{"class":{"descriptions":{"short":"SQL Azure Schema Synchronizer.","long":"Will iterate over all shards when performing schema operations. This is done\nby partitioning the passed schema into subschemas for the federation and the\nglobal database and then applying the operations step by step using the\n{@see \\Doctrine\\DBAL\\Schema\\Synchronizer\\SingleDatabaseSynchronizer}.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn","$shardManager"],"optionals":["$sync"],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$shardManager":{"type":"\\Doctrine\\DBAL\\Sharding\\SQLAzure\\SQLAzureShardManager","description":null},"$sync":{"type":"\\Doctrine\\DBAL\\Schema\\Synchronizer\\SchemaSynchronizer|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Sharding\\SQLAzure\\SQLAzureShardManager":{"class":{"descriptions":{"short":"Sharding using the SQL Azure Federations support.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn"],"optionals":[],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null}},"throws":{"\\Doctrine\\DBAL\\Sharding\\ShardingException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Sharding\\SQLAzure\\Schema\\MultiTenantVisitor":{"class":{"descriptions":{"short":"Converts a single tenant schema into a multi-tenant schema for SQL Azure\nFederations under the following assumptions:","long":"- Every table is part of the multi-tenant application, only explicitly\nexcluded tables are non-federated. The behavior of the tables being in\nglobal or federated database is undefined. It depends on you selecting a\nfederation before DDL statements or not.\n- Every Primary key of a federated table is extended by another column\n'tenant_id' with a default value of the SQLAzure function\n`federation_filtering_value('tenant_id')`.\n- You always have to work with `filtering=On` when using federations with this\nmulti-tenant approach.\n- Primary keys are either using globally unique ids (GUID, Table Generator)\nor you explicitly add the tenent_id in every UPDATE or DELETE statement\n(otherwise they will affect the same-id rows from other tenents as well).\nSQLAzure throws errors when you try to create IDENTIY columns on federated\ntables.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$excludedTables","$tenantColumnName","$distributionName"],"docParameters":{"$excludedTables":{"type":"array","description":null},"$tenantColumnName":{"type":"string","description":null},"$distributionName":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Sharding\\ShardChoser\\MultiTenantShardChoser":{"class":{"descriptions":{"short":"The MultiTenant Shard choser assumes that the distribution value directly\nmaps to the shard id.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Sharding\\ShardChoser\\ShardChoser":{"class":{"descriptions":{"short":"Given a distribution value this shard-choser strategy will pick the shard to\nconnect to for retrieving rows with the distribution value.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Sharding\\ShardManager":{"class":{"descriptions":{"short":"Sharding Manager gives access to APIs to implementing sharding on top of\nDoctrine\\DBAL\\Connection instances.","long":"For simplicity and developer ease-of-use (and understanding) the sharding\nAPI only covers single shard queries, no fan-out support. It is primarily\nsuited for multi-tenant applications.\n\nThe assumption about sharding here\nis that a distribution value can be found that gives access to all the\nnecessary data for all use-cases. Switching between shards should be done with\ncaution, especially if lazy loading is implemented. Any query is always\nexecuted against the last shard that was selected. If a query is created for\na shard Y but then a shard X is selected when its actually executed you\nwill hit the wrong shard.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Sharding\\ShardingException":{"class":{"descriptions":{"short":"Sharding related Exceptions","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Statement":{"class":{"descriptions":{"short":"A thin wrapper around a Doctrine\\DBAL\\Driver\\Statement that adds support\nfor logging, DBAL mapping types, etc.","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sql","$conn"],"optionals":[],"docParameters":{"$sql":{"type":"string","description":"The SQL of the statement."},"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":"The connection on which the statement should be executed."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a new <tt>Statement<\/tt> for the given SQL and <tt>Connection<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Tools\\Console\\Command\\ImportCommand":{"class":{"descriptions":{"short":"Task for executing arbitrary SQL that can come from a file or directly from\nthe command line.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Tools\\Console\\Command\\ReservedWordsCommand":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Tools\\Console\\Command\\RunSqlCommand":{"class":{"descriptions":{"short":"Task for executing arbitrary SQL that can come from a file or directly from\nthe command line.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Tools\\Console\\ConsoleRunner":{"class":{"descriptions":{"short":"Handles running the Console Tools inside Symfony Console context.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\Tools\\Console\\Helper\\ConnectionHelper":{"class":{"descriptions":{"short":"Doctrine CLI Connection Helper.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$connection"],"optionals":[],"docParameters":{"$connection":{"type":"\\Doctrine\\DBAL\\Connection","description":"The Doctrine database Connection."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\ArrayType":{"class":{"descriptions":{"short":"Type that maps a PHP array to a clob SQL type.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\BigIntType":{"class":{"descriptions":{"short":"Type that maps a database BIGINT to a PHP string.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\BinaryType":{"class":{"descriptions":{"short":"Type that maps ab SQL BINARY\/VARBINARY to a PHP resource stream.","long":"@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\BlobType":{"class":{"descriptions":{"short":"Type that maps an SQL BLOB to a PHP resource stream.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\BooleanType":{"class":{"descriptions":{"short":"Type that maps an SQL boolean to a PHP boolean.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\ConversionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\DateTimeType":{"class":{"descriptions":{"short":"Type that maps an SQL DATETIME\/TIMESTAMP to a PHP DateTime object.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\DateTimeTzType":{"class":{"descriptions":{"short":"DateTime type saving additional timezone information.","long":"Caution: Databases are not necessarily experts at storing timezone related\ndata of dates. First, of all the supported vendors only PostgreSQL and Oracle\nsupport storing Timezone data. But those two don't save the actual timezone\nattached to a DateTime instance (for example \"Europe\/Berlin\" or \"America\/Montreal\")\nbut the current offset of them related to UTC. That means depending on daylight saving times\nor not you may get different offsets.\n\nThis datatype makes only sense to use, if your application works with an offset, not\nwith an actual timezone that uses transitions. Otherwise your DateTime instance\nattached with a timezone such as Europe\/Berlin gets saved into the database with\nthe offset and re-created from persistence with only the offset, not the original timezone\nattached."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\DateType":{"class":{"descriptions":{"short":"Type that maps an SQL DATE to a PHP Date object.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\DecimalType":{"class":{"descriptions":{"short":"Type that maps an SQL DECIMAL to a PHP string.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\FloatType":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\GuidType":{"class":{"descriptions":{"short":"Represents a GUID\/UUID datatype (both are actually synonyms) in the database.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\IntegerType":{"class":{"descriptions":{"short":"Type that maps an SQL INT to a PHP integer.","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\JsonArrayType":{"class":{"descriptions":{"short":"Array Type which can be used to generate json arrays.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\ObjectType":{"class":{"descriptions":{"short":"Type that maps a PHP object to a clob SQL type.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\SimpleArrayType":{"class":{"descriptions":{"short":"Array Type which can be used for simple values.","long":"Only use this type if you are sure that your values cannot contain a \",\"."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\SmallIntType":{"class":{"descriptions":{"short":"Type that maps a database SMALLINT to a PHP integer.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\StringType":{"class":{"descriptions":{"short":"Type that maps an SQL VARCHAR to a PHP string.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\TextType":{"class":{"descriptions":{"short":"Type that maps an SQL CLOB to a PHP string.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\TimeType":{"class":{"descriptions":{"short":"Type that maps an SQL TIME to a PHP DateTime object.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\Type":{"class":{"descriptions":{"short":"The base class for so-called Doctrine mapping types.","long":"A Type object is obtained by calling the static {@link getType()} method.\n\n@author Roman Borschel <roman@code-factory.org>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Types\\VarDateTimeType":{"class":{"descriptions":{"short":"Variable DateTime Type using date_create() instead of DateTime::createFromFormat().","long":"This type has performance implications as it runs twice as long as the regular\n{@see DateTimeType}, however in certain PostgreSQL configurations with\nTIMESTAMP(n) columns where n > 0 it is necessary to use this type."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Prevents instantiation and forces use of the factory method.","long":""},"deprecated":false}}}},"Doctrine\\DBAL\\Version":{"class":{"descriptions":{"short":"Class to store and retrieve the version of Doctrine.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\DBAL\\VersionAwarePlatformDriver":{"class":{"descriptions":{"short":"Contract for a driver that is able to create platform instances by version.","long":"Doctrine uses different platform classes for different vendor versions to\nsupport the correct features and SQL syntax of each version.\nThis interface should be implemented by drivers that are capable to do this\ndistinction.\n\n@author Steve M\u00fcller <st.mueller@dzh-online.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\AbstractQuery":{"class":{"descriptions":{"short":"Base contract for ORM queries. Base class for Query and NativeQuery.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from <tt>AbstractQuery<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Configuration":{"class":{"descriptions":{"short":"Configuration container for all configuration options of Doctrine.\nIt combines all configuration options from DBAL & ORM.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Decorator\\EntityManagerDecorator":{"class":{"descriptions":{"short":"Base class for EntityManager decorators","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$wrapped"],"optionals":[],"docParameters":{"$wrapped":{"type":"EntityManagerInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\EntityManager":{"class":{"descriptions":{"short":"The EntityManager is the central access point to ORM functionality.","long":"It is a facade to all different ORM subsystems such as UnitOfWork,\nQuery Language and Repository API. Instantiation is done through\nthe static create() method. The quickest way to obtain a fully\nconfigured EntityManager is:\n\nuse Doctrine\\ORM\\Tools\\Setup;\nuse Doctrine\\ORM\\EntityManager;\n\n$paths = array('\/path\/to\/entity\/mapping\/files');\n\n$config = Setup::createAnnotationMetadataConfiguration($paths);\n$dbParams = array('driver' => 'pdo_sqlite', 'memory' => true);\n$entityManager = EntityManager::create($dbParams, $config);\n\nFor more information see\n{@link http:\/\/docs.doctrine-project.org\/projects\/doctrine-orm\/en\/latest\/reference\/configuration.html}\n\nYou should never attempt to inherit from the EntityManager: Inheritance\nis not a valid extension point for the EntityManager. Instead you\nshould take a look at the {@see \\Doctrine\\ORM\\Decorator\\EntityManagerDecorator}\nand wrap your entity manager in a decorator."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conn","$config","$eventManager"],"optionals":[],"docParameters":{"$conn":{"type":"\\Doctrine\\DBAL\\Connection","description":null},"$config":{"type":"\\Doctrine\\ORM\\Configuration","description":null},"$eventManager":{"type":"\\Doctrine\\Common\\EventManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a new EntityManager that operates on the given database connection\nand uses the given Configuration and EventManager implementations.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\EntityManagerInterface":{"class":{"descriptions":{"short":"EntityManager interface","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\EntityNotFoundException":{"class":{"descriptions":{"short":"Exception thrown when a Proxy fails to retrieve an Entity result.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\EntityRepository":{"class":{"descriptions":{"short":"An EntityRepository serves as a repository for entities with generic as well as\nbusiness specific methods for retrieving entities.","long":"This class is designed for inheritance and users can subclass this class to\nwrite their own repositories with business-specific methods to locate entities."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em","$class"],"optionals":[],"docParameters":{"$em":{"type":"EntityManager","description":"The EntityManager to use."},"$class":{"type":"Mapping\\ClassMetadata","description":"The class descriptor."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>EntityRepository<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Event\\LifecycleEventArgs":{"class":{"descriptions":{"short":"Lifecycle Events are triggered by the UnitOfWork during lifecycle transitions\nof entities.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$object","$objectManager"],"optionals":[],"docParameters":{"$object":{"type":"object","description":null},"$objectManager":{"type":"ObjectManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Event\\ListenersInvoker":{"class":{"descriptions":{"short":"A method invoker based on entity lifecycle.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new ListenersInvoker instance.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Event\\LoadClassMetadataEventArgs":{"class":{"descriptions":{"short":"Class that holds event arguments for a loadMetadata event.","long":"@author Jonathan H. Wage <jonwage@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$classMetadata","$objectManager"],"optionals":[],"docParameters":{"$classMetadata":{"type":"ClassMetadata","description":null},"$objectManager":{"type":"ObjectManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Event\\OnClearEventArgs":{"class":{"descriptions":{"short":"Provides event arguments for the onClear event.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":["$entityClass"],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null},"$entityClass":{"type":"string|null","description":"Optional entity class."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Event\\OnFlushEventArgs":{"class":{"descriptions":{"short":"Provides event arguments for the preFlush event.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Event\\PostFlushEventArgs":{"class":{"descriptions":{"short":"Provides event arguments for the postFlush event.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Event\\PreFlushEventArgs":{"class":{"descriptions":{"short":"Provides event arguments for the preFlush event.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Event\\PreUpdateEventArgs":{"class":{"descriptions":{"short":"Class that holds event arguments for a preInsert\/preUpdate event.","long":"@author Guilherme Blanco <guilehrmeblanco@hotmail.com>\n@author Roman Borschel <roman@code-factory.org>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$entity","$em","&$changeSet"],"optionals":[],"docParameters":{"$entity":{"type":"object","description":null},"$em":{"type":"EntityManager","description":null},"$changeSet":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Events":{"class":{"descriptions":{"short":"Container for all ORM events.","long":"This class cannot be instantiated.\n\n@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Private constructor. This class is not meant to be instantiated.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Id\\AbstractIdGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Id\\AssignedGenerator":{"class":{"descriptions":{"short":"Special generator for application-assigned identifiers (doesn't really generate anything).","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator":{"class":{"descriptions":{"short":"Id generator that obtains IDs from special \"identity\" columns. These are columns\nthat automatically get a database-generated, auto-incremented identifier on INSERT.\nThis generator obtains the last insert id after such an insert.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequenceName"],"docParameters":{"$sequenceName":{"type":"string|null","description":"The name of the sequence to pass to lastInsertId() to obtain the last generated identifier within the current database session\/connection, if any."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Id\\IdentityGenerator":{"class":{"descriptions":{"short":"Id generator that obtains IDs from special \"identity\" columns. These are columns\nthat automatically get a database-generated, auto-incremented identifier on INSERT.\nThis generator obtains the last insert id after such an insert.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sequenceName"],"docParameters":{"$sequenceName":{"type":"string|null","description":"The name of the sequence to pass to lastInsertId() to obtain the last generated identifier within the current database session\/connection, if any."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Id\\SequenceGenerator":{"class":{"descriptions":{"short":"Represents an ID generator that uses a database sequence.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sequenceName","$allocationSize"],"optionals":[],"docParameters":{"$sequenceName":{"type":"string","description":"The name of the sequence."},"$allocationSize":{"type":"integer","description":"The allocation size of the sequence."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new sequence generator.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Id\\TableGenerator":{"class":{"descriptions":{"short":"Id generator that uses a single-row database table and a hi\/lo algorithm.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$tableName"],"optionals":["$sequenceName","$allocationSize"],"docParameters":{"$tableName":{"type":"string","description":null},"$sequenceName":{"type":"string","description":null},"$allocationSize":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Id\\UuidGenerator":{"class":{"descriptions":{"short":"Represents an ID generator that uses the database UUID expression","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Internal\\CommitOrderCalculator":{"class":{"descriptions":{"short":"The CommitOrderCalculator is used by the UnitOfWork to sort out the\ncorrect order in which changes to entities need to be persisted.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator":{"class":{"descriptions":{"short":"Base class for all hydrators. A hydrator is a class that provides some form\nof transformation of an SQL result set into another structure.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":"The EntityManager to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from <tt>AbstractHydrator<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator":{"class":{"descriptions":{"short":"The ArrayHydrator produces a nested array \"graph\" that is often (not always)\ninterchangeable with the corresponding object graph for read-only access.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":"The EntityManager to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from <tt>AbstractHydrator<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Internal\\Hydration\\HydrationException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Internal\\Hydration\\IterableResult":{"class":{"descriptions":{"short":"Represents a result structure that can be iterated over, hydrating row-by-row\nduring the iteration. An IterableResult is obtained by AbstractHydrator#iterate().","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$hydrator"],"optionals":[],"docParameters":{"$hydrator":{"type":"\\Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator":{"class":{"descriptions":{"short":"The ObjectHydrator constructs an object graph out of an SQL result set.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":"The EntityManager to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from <tt>AbstractHydrator<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Internal\\Hydration\\ScalarHydrator":{"class":{"descriptions":{"short":"Hydrator that produces flat, rectangular results of scalar data.\nThe created result is almost the same as a regular SQL result set, except\nthat column names are mapped to field names and data type conversions take place.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":"The EntityManager to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from <tt>AbstractHydrator<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":"The EntityManager to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from <tt>AbstractHydrator<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Internal\\Hydration\\SingleScalarHydrator":{"class":{"descriptions":{"short":"Hydrator that hydrates a single scalar value from the result set.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":"The EntityManager to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from <tt>AbstractHydrator<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Annotation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy":{"class":{"descriptions":{"short":"ANSI compliant quote strategy, this strategy does not apply any quote.\nTo use this strategy all mapped tables and columns should be ANSI compliant.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\AssociationOverride":{"class":{"descriptions":{"short":"This annotation is used to override association mapping of property for an entity relationship.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\AssociationOverrides":{"class":{"descriptions":{"short":"This annotation is used to override association mappings of relationship properties.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\AttributeOverride":{"class":{"descriptions":{"short":"This annotation is used to override the mapping of a entity property.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\AttributeOverrides":{"class":{"descriptions":{"short":"This annotation is used to override the mapping of a entity property.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$builder","$mapping","$type"],"optionals":[],"docParameters":{"$builder":{"type":"ClassMetadataBuilder","description":null},"$mapping":{"type":"array","description":null},"$type":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder":{"class":{"descriptions":{"short":"Builder Object for ClassMetadata","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$cm"],"optionals":[],"docParameters":{"$cm":{"type":"\\Doctrine\\ORM\\Mapping\\ClassMetadataInfo","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Builder\\EntityListenerBuilder":{"class":{"descriptions":{"short":"Builder for entity listeners.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder":{"class":{"descriptions":{"short":"Field Builder","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$builder","$mapping"],"optionals":[],"docParameters":{"$builder":{"type":"ClassMetadataBuilder","description":null},"$mapping":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Builder\\ManyToManyAssociationBuilder":{"class":{"descriptions":{"short":"ManyToMany Association Builder","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$builder","$mapping","$type"],"optionals":[],"docParameters":{"$builder":{"type":"ClassMetadataBuilder","description":null},"$mapping":{"type":"array","description":null},"$type":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Builder\\OneToManyAssociationBuilder":{"class":{"descriptions":{"short":"OneToMany Association Builder","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$builder","$mapping","$type"],"optionals":[],"docParameters":{"$builder":{"type":"ClassMetadataBuilder","description":null},"$mapping":{"type":"array","description":null},"$type":{"type":"int","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\ChangeTrackingPolicy":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\ClassMetadata":{"class":{"descriptions":{"short":"{@inheritDoc}","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$entityName"],"optionals":["$namingStrategy"],"docParameters":{"$entityName":{"type":"string","description":"The name of the entity class the new instance is used for."},"$namingStrategy":{"type":"NamingStrategy|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new ClassMetadata instance that will hold the object-relational mapping\nmetadata of the class with the given name.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\ClassMetadataFactory":{"class":{"descriptions":{"short":"The ClassMetadataFactory is used to create ClassMetadata objects that contain all the\nmetadata mapping information of a class which describes how a class should be mapped\nto a relational database.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\ClassMetadataInfo":{"class":{"descriptions":{"short":"A <tt>ClassMetadata<\/tt> instance holds all the object-relational mapping metadata\nof an entity and its associations.","long":"Once populated, ClassMetadata instances are usually cached in a serialized form.\n\n<b>IMPORTANT NOTE:<\/b>\n\nThe fields of this class are only public for 2 reasons:\n1) To allow fast READ access.\n2) To drastically reduce the size of a serialized instance (private\/protected members\nget the whole class name, namespace inclusive, prepended to every property in\nthe serialized representation).\n\n@author Roman Borschel <roman@code-factory.org>\n@author Jonathan H. Wage <jonwage@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$entityName"],"optionals":["$namingStrategy"],"docParameters":{"$entityName":{"type":"string","description":"The name of the entity class the new instance is used for."},"$namingStrategy":{"type":"NamingStrategy|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new ClassMetadata instance that will hold the object-relational mapping\nmetadata of the class with the given name.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Column":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\ColumnResult":{"class":{"descriptions":{"short":"References name of a column in the SELECT clause of a SQL query.\nScalar result types can be included in the query result by specifying this annotation in the metadata.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\CustomIdGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver":{"class":{"descriptions":{"short":"The default DefaultEntityListener","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\DefaultNamingStrategy":{"class":{"descriptions":{"short":"The default NamingStrategy","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy":{"class":{"descriptions":{"short":"A set of rules for determining the physical column, alias and table quotes","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\DiscriminatorColumn":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\DiscriminatorMap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver":{"class":{"descriptions":{"short":"The AnnotationDriver reads the mapping metadata from docblock annotations.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$reader"],"optionals":["$paths"],"docParameters":{"$reader":{"type":"AnnotationReader","description":"The AnnotationReader to use, duck-typed."},"$paths":{"type":"string|array|null","description":"One or multiple paths where mapping classes can be found."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new AnnotationDriver that uses the given AnnotationReader for reading\ndocblock annotations.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver":{"class":{"descriptions":{"short":"The DatabaseDriver reverse engineers the mapping metadata from a database.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$schemaManager"],"optionals":[],"docParameters":{"$schemaManager":{"type":"AbstractSchemaManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Driver\\DriverChain":{"class":{"descriptions":{"short":"{@inheritDoc}","long":""},"deprecated":true},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\Driver\\PHPDriver":{"class":{"descriptions":{"short":"{@inheritDoc}","long":""},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$locator"],"optionals":["$fileExtension"],"docParameters":{"$locator":{"type":"string|array|FileLocator","description":"A FileLocator or one\/multiple paths where mapping documents can be found."},"$fileExtension":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new FileDriver that looks in the given path(s) for mapping\ndocuments and operates in the specified operating mode.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver":{"class":{"descriptions":{"short":"XmlDriver that additionally looks for mapping information in a global file.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locator"],"optionals":["$fileExtension"],"docParameters":{"$locator":{"type":"string|array|FileLocator","description":"A FileLocator or one\/multiple paths where mapping documents can be found."},"$fileExtension":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new FileDriver that looks in the given path(s) for mapping\ndocuments and operates in the specified operating mode.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver":{"class":{"descriptions":{"short":"YamlDriver that additionally looks for mapping information in a global file.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locator"],"optionals":["$fileExtension"],"docParameters":{"$locator":{"type":"string|array|FileLocator","description":"A FileLocator or one\/multiple paths where mapping documents can be found."},"$fileExtension":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new FileDriver that looks in the given path(s) for mapping\ndocuments and operates in the specified operating mode.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver":{"class":{"descriptions":{"short":"{@inheritDoc}","long":""},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$paths"],"optionals":[],"docParameters":{"$paths":{"type":"array|string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Driver\\XmlDriver":{"class":{"descriptions":{"short":"XmlDriver is a metadata driver that enables mapping through XML files.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locator"],"optionals":["$fileExtension"],"docParameters":{"$locator":{"type":"string|array|FileLocator","description":"A FileLocator or one\/multiple paths where mapping documents can be found."},"$fileExtension":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new FileDriver that looks in the given path(s) for mapping\ndocuments and operates in the specified operating mode.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\Driver\\YamlDriver":{"class":{"descriptions":{"short":"The YamlDriver reads the mapping metadata from yaml schema files.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$locator"],"optionals":["$fileExtension"],"docParameters":{"$locator":{"type":"string|array|FileLocator","description":"A FileLocator or one\/multiple paths where mapping documents can be found."},"$fileExtension":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new FileDriver that looks in the given path(s) for mapping\ndocuments and operates in the specified operating mode.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\ElementCollection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\Entity":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\EntityListenerResolver":{"class":{"descriptions":{"short":"A resolver is used to instantiate an entity listener.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\EntityListeners":{"class":{"descriptions":{"short":"The EntityListeners annotation specifies the callback listener classes to be used for an entity or mapped superclass.\nThe EntityListeners annotation may be applied to an entity class or mapped superclass.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\EntityResult":{"class":{"descriptions":{"short":"References an entity in the SELECT clause of a SQL query.\nIf this annotation is used, the SQL statement should select all of the columns that are mapped to the entity object.\nThis should include foreign key columns to related entities.\nThe results obtained when insufficient data is available are undefined.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\FieldResult":{"class":{"descriptions":{"short":"Is used to map the columns specified in the SELECT list of the query to the properties or fields of the entity class.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\GeneratedValue":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\Id":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\Index":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\InheritanceType":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\JoinColumn":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\JoinColumns":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\JoinTable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\ManyToMany":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\ManyToOne":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\MappedSuperclass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\MappingException":{"class":{"descriptions":{"short":"A MappingException indicates that something is wrong with the mapping setup.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\NamedNativeQueries":{"class":{"descriptions":{"short":"Is used to specify an array of native SQL named queries.\nThe NamedNativeQueries annotation can be applied to an entity or mapped superclass.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\NamedNativeQuery":{"class":{"descriptions":{"short":"Is used to specify a native SQL named query.\nThe NamedNativeQuery annotation can be applied to an entity or mapped superclass.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\NamedQueries":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\NamedQuery":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\NamingStrategy":{"class":{"descriptions":{"short":"A set of rules for determining the physical column and table names","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\OneToMany":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\OneToOne":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\OrderBy":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\PostLoad":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\PostPersist":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\PostRemove":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\PostUpdate":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\PreFlush":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\PrePersist":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\PreRemove":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\PreUpdate":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\QuoteStrategy":{"class":{"descriptions":{"short":"A set of rules for determining the column, alias and table quotes.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\SequenceGenerator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\SqlResultSetMapping":{"class":{"descriptions":{"short":"The SqlResultSetMapping annotation is used to specify the mapping of the result of a native SQL query.\nThe SqlResultSetMapping annotation can be applied to an entity or mapped superclass.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\SqlResultSetMappings":{"class":{"descriptions":{"short":"Is used to specify an array of mappings.\nThe SqlResultSetMappings annotation can be applied to an entity or mapped superclass.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\Table":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy":{"class":{"descriptions":{"short":"Naming strategy implementing the underscore naming convention.\nConverts 'MyEntity' to 'my_entity' or 'MY_ENTITY'.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$case"],"docParameters":{"$case":{"type":"integer","description":"CASE_LOWER | CASE_UPPER"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Underscore naming strategy construct.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Mapping\\UniqueConstraint":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Mapping\\Version":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\NativeQuery":{"class":{"descriptions":{"short":"Represents a native SQL query.","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from <tt>AbstractQuery<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\NoResultException":{"class":{"descriptions":{"short":"Exception thrown when an ORM query unexpectedly does not return any results.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\NonUniqueResultException":{"class":{"descriptions":{"short":"Exception thrown when an ORM query unexpectedly returns more than one result.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\ORMException":{"class":{"descriptions":{"short":"Base exception class for all ORM exceptions.","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\ORMInvalidArgumentException":{"class":{"descriptions":{"short":"Contains exception messages for all invalid lifecycle state exceptions inside UnitOfWork","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\OptimisticLockException":{"class":{"descriptions":{"short":"An OptimisticLockException is thrown when a version check on an object\nthat uses optimistic locking through a version field fails.","long":"@author Roman Borschel <roman@code-factory.org>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$msg","$entity"],"optionals":[],"docParameters":{"$msg":{"type":"string","description":null},"$entity":{"type":"object","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\PersistentCollection":{"class":{"descriptions":{"short":"A PersistentCollection represents a collection of elements that have persistent state.","long":"Collections of entities represent only the associations (links) to those entities.\nThat means, if the collection is part of a many-many mapping and you remove\nentities from the collection, only the links in the relation table are removed (on flush).\nSimilarly, if you remove entities from a collection that is part of a one-many\nmapping this will only result in the nulling out of the foreign keys on flush."},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em","$class","$coll"],"optionals":[],"docParameters":{"$em":{"type":"EntityManager","description":"The EntityManager the collection will be associated with."},"$class":{"type":"ClassMetadata","description":"The class descriptor of the entity type of this collection."},"$coll":{"type":"array","description":"The collection elements."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a new persistent collection.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\AbstractCollectionPersister":{"class":{"descriptions":{"short":"Base class for all collection persisters.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from AbstractCollectionPersister.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister":{"class":{"descriptions":{"short":"Base class for entity persisters that implement a certain inheritance mapping strategy.\nAll these persisters are assumed to use a discriminator column to discriminate entity\ntypes in the hierarchy.","long":"@author Roman Borschel <roman@code-factory.org>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em","$class"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null},"$class":{"type":"\\Doctrine\\ORM\\Mapping\\ClassMetadata","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>BasicEntityPersister<\/tt> that uses the given EntityManager\nand persists instances of the class described by the given ClassMetadata descriptor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\BasicEntityPersister":{"class":{"descriptions":{"short":"A BasicEntityPersister maps an entity to a single table in a relational database.","long":"A persister is always responsible for a single entity type.\n\nEntityPersisters are used during a UnitOfWork to apply any changes to the persistent\nstate of entities onto a relational database when the UnitOfWork is committed,\nas well as for basic querying of entities and their associations (not DQL).\n\nThe persisting operations that are invoked during a commit of a UnitOfWork to\npersist the persistent entity state are:\n\n- {@link addInsert} : To schedule an entity for insertion.\n- {@link executeInserts} : To execute all scheduled insertions.\n- {@link update} : To update the persistent state of an entity.\n- {@link delete} : To delete the persistent state of an entity.\n\nAs can be seen from the above list, insertions are batched and executed all at once\nfor increased efficiency.\n\nThe querying operations invoked during a UnitOfWork, either through direct find\nrequests or lazy-loading, are the following:\n\n- {@link load} : Loads (the state of) a single, managed entity.\n- {@link loadAll} : Loads multiple, managed entities.\n- {@link loadOneToOneEntity} : Loads a one\/many-to-one entity association (lazy-loading).\n- {@link loadOneToManyCollection} : Loads a one-to-many entity association (lazy-loading).\n- {@link loadManyToManyCollection} : Loads a many-to-many entity association (lazy-loading).\n\nThe BasicEntityPersister implementation provides the default behavior for\npersisting and querying entities that are mapped to a single database table.\n\nSubclasses can be created to provide custom persisting and querying strategies,\ni.e. spanning multiple tables.\n\n@author Roman Borschel <roman@code-factory.org>\n@author Giorgio Sironi <piccoloprincipeazzurro@gmail.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Alexander <iam.asm89@gmail.com>\n@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em","$class"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null},"$class":{"type":"\\Doctrine\\ORM\\Mapping\\ClassMetadata","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>BasicEntityPersister<\/tt> that uses the given EntityManager\nand persists instances of the class described by the given ClassMetadata descriptor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\ElementCollectionPersister":{"class":{"descriptions":{"short":"Persister for collections of basic elements \/ value types.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from AbstractCollectionPersister.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\JoinedSubclassPersister":{"class":{"descriptions":{"short":"The joined subclass persister maps a single entity instance to several tables in the\ndatabase as it is defined by the <tt>Class Table Inheritance<\/tt> strategy.","long":"@author Roman Borschel <roman@code-factory.org>\n@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Alexander <iam.asm89@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em","$class"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null},"$class":{"type":"\\Doctrine\\ORM\\Mapping\\ClassMetadata","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>BasicEntityPersister<\/tt> that uses the given EntityManager\nand persists instances of the class described by the given ClassMetadata descriptor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\ManyToManyPersister":{"class":{"descriptions":{"short":"Persister for many-to-many collections.","long":"@author  Roman Borschel <roman@code-factory.org>\n@author  Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author  Alexander <iam.asm89@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from AbstractCollectionPersister.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\OneToManyPersister":{"class":{"descriptions":{"short":"Persister for one-to-many collections.","long":"@author  Roman Borschel <roman@code-factory.org>\n@author  Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author  Alexander <iam.asm89@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from AbstractCollectionPersister.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\PersisterException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\SingleTablePersister":{"class":{"descriptions":{"short":"Persister for entities that participate in a hierarchy mapped with the\nSINGLE_TABLE strategy.","long":"@author Roman Borschel <roman@code-factory.org>\n@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Alexander <iam.asm89@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em","$class"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null},"$class":{"type":"\\Doctrine\\ORM\\Mapping\\ClassMetadata","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>BasicEntityPersister<\/tt> that uses the given EntityManager\nand persists instances of the class described by the given ClassMetadata descriptor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\SqlExpressionVisitor":{"class":{"descriptions":{"short":"Visit Expressions and generate SQL WHERE conditions from them.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$persister","$classMetadata"],"optionals":[],"docParameters":{"$persister":{"type":"\\Doctrine\\ORM\\Persisters\\BasicEntityPersister","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Persisters\\SqlValueVisitor":{"class":{"descriptions":{"short":"Extract the values from a criteria\/expression","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Persisters\\UnionSubclassPersister":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em","$class"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null},"$class":{"type":"\\Doctrine\\ORM\\Mapping\\ClassMetadata","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>BasicEntityPersister<\/tt> that uses the given EntityManager\nand persists instances of the class described by the given ClassMetadata descriptor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\PessimisticLockException":{"class":{"descriptions":{"short":"Pessimistic Lock Exception","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Proxy\\Autoloader":{"class":{"descriptions":{"short":"","long":""},"deprecated":true},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Proxy\\Proxy":{"class":{"descriptions":{"short":"Interface for proxy classes.","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Proxy\\ProxyFactory":{"class":{"descriptions":{"short":"This factory is used to create proxy objects for entities at runtime.","long":"@author Roman Borschel <roman@code-factory.org>\n@author Giorgio Sironi <piccoloprincipeazzurro@gmail.com>\n@author Marco Pivetta  <ocramius@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em","$proxyDir","$proxyNs"],"optionals":["$autoGenerate"],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":"The EntityManager the new factory works for."},"$proxyDir":{"type":"string","description":"The directory to use for the proxy classes. It must exist."},"$proxyNs":{"type":"string","description":"The namespace to use for the proxy classes."},"$autoGenerate":{"type":"boolean","description":"Whether to automatically generate proxy classes."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of the <tt>ProxyFactory<\/tt> class that is\nconnected to the given <tt>EntityManager<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query":{"class":{"descriptions":{"short":"A Query object represents a DQL query.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of a class derived from <tt>AbstractQuery<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\QueryBuilder":{"class":{"descriptions":{"short":"This class is responsible for building DQL query strings via an object oriented\nPHP interface.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"EntityManager","description":"The EntityManager to use."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>QueryBuilder<\/tt> that uses the given <tt>EntityManager<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\ASTException":{"class":{"descriptions":{"short":"Base exception class for AST exceptions.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\AggregateExpression":{"class":{"descriptions":{"short":"Description of AggregateExpression.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$functionName","$pathExpression","$isDistinct"],"optionals":[],"docParameters":{"$functionName":{"type":"string","description":null},"$pathExpression":{"type":"PathExpression|SimpleArithmeticExpression","description":null},"$isDistinct":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\ArithmeticExpression":{"class":{"descriptions":{"short":"ArithmeticExpression ::= SimpleArithmeticExpression | \"(\" Subselect \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Query\\AST\\ArithmeticFactor":{"class":{"descriptions":{"short":"ArithmeticFactor ::= [(\"+\" | \"-\")] ArithmeticPrimary","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$arithmeticPrimary"],"optionals":["$sign"],"docParameters":{"$arithmeticPrimary":{"type":"mixed","description":null},"$sign":{"type":"null|bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\ArithmeticTerm":{"class":{"descriptions":{"short":"ArithmeticTerm ::= ArithmeticFactor {(\"*\" | \"\/\") ArithmeticFactor}*","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$arithmeticFactors"],"optionals":[],"docParameters":{"$arithmeticFactors":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\BetweenExpression":{"class":{"descriptions":{"short":"Description of BetweenExpression.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expr","$leftExpr","$rightExpr"],"optionals":[],"docParameters":{"$expr":{"type":"ArithmeticExpression","description":null},"$leftExpr":{"type":"ArithmeticExpression","description":null},"$rightExpr":{"type":"ArithmeticExpression","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\CoalesceExpression":{"class":{"descriptions":{"short":"CoalesceExpression ::= \"COALESCE\" \"(\" ScalarExpression {\",\" ScalarExpression}* \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$scalarExpressions"],"optionals":[],"docParameters":{"$scalarExpressions":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\CollectionMemberExpression":{"class":{"descriptions":{"short":"CollectionMemberExpression ::= EntityExpression [\"NOT\"] \"MEMBER\" [\"OF\"] CollectionValuedPathExpression","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$entityExpr","$collValuedPathExpr"],"optionals":[],"docParameters":{"$entityExpr":{"type":"mixed","description":null},"$collValuedPathExpr":{"type":"PathExpression","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\ComparisonExpression":{"class":{"descriptions":{"short":"ComparisonExpression ::= ArithmeticExpression ComparisonOperator ( QuantifiedExpression | ArithmeticExpression ) |\nStringExpression ComparisonOperator (StringExpression | QuantifiedExpression) |\nBooleanExpression (\"=\" | \"<>\" | \"!=\") (BooleanExpression | QuantifiedExpression) |\nEnumExpression (\"=\" | \"<>\" | \"!=\") (EnumExpression | QuantifiedExpression) |\nDatetimeExpression ComparisonOperator (DatetimeExpression | QuantifiedExpression) |\nEntityExpression (\"=\" | \"<>\") (EntityExpression | QuantifiedExpression)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$leftExpr","$operator","$rightExpr"],"optionals":[],"docParameters":{"$leftExpr":{"type":"Node","description":null},"$operator":{"type":"string","description":null},"$rightExpr":{"type":"Node","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\ConditionalExpression":{"class":{"descriptions":{"short":"ConditionalExpression ::= ConditionalTerm {\"OR\" ConditionalTerm}*","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conditionalTerms"],"optionals":[],"docParameters":{"$conditionalTerms":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\ConditionalFactor":{"class":{"descriptions":{"short":"ConditionalFactor ::= [\"NOT\"] ConditionalPrimary","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conditionalPrimary"],"optionals":[],"docParameters":{"$conditionalPrimary":{"type":"ConditionalPrimary","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\ConditionalPrimary":{"class":{"descriptions":{"short":"ConditionalPrimary ::= SimpleConditionalExpression | \"(\" ConditionalExpression \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Query\\AST\\ConditionalTerm":{"class":{"descriptions":{"short":"ConditionalTerm ::= ConditionalFactor {\"AND\" ConditionalFactor}*","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conditionalFactors"],"optionals":[],"docParameters":{"$conditionalFactors":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\DeleteClause":{"class":{"descriptions":{"short":"DeleteClause ::= \"DELETE\" [\"FROM\"] AbstractSchemaName [[\"AS\"] AliasIdentificationVariable]","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$abstractSchemaName"],"optionals":[],"docParameters":{"$abstractSchemaName":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\DeleteStatement":{"class":{"descriptions":{"short":"DeleteStatement = DeleteClause [WhereClause]","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$deleteClause"],"optionals":[],"docParameters":{"$deleteClause":{"type":"DeleteClause","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\EmptyCollectionComparisonExpression":{"class":{"descriptions":{"short":"EmptyCollectionComparisonExpression ::= CollectionValuedPathExpression \"IS\" [\"NOT\"] \"EMPTY\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expression"],"optionals":[],"docParameters":{"$expression":{"type":"PathExpression","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\ExistsExpression":{"class":{"descriptions":{"short":"ExistsExpression ::= [\"NOT\"] \"EXISTS\" \"(\" Subselect \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$subselect"],"optionals":[],"docParameters":{"$subselect":{"type":"Subselect","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\FromClause":{"class":{"descriptions":{"short":"FromClause ::= \"FROM\" IdentificationVariableDeclaration {\",\" IdentificationVariableDeclaration}","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$identificationVariableDeclarations"],"optionals":[],"docParameters":{"$identificationVariableDeclarations":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\AbsFunction":{"class":{"descriptions":{"short":"\"ABS\" \"(\" SimpleArithmeticExpression \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\BitAndFunction":{"class":{"descriptions":{"short":"\"BIT_AND\" \"(\" ArithmeticPrimary \",\" ArithmeticPrimary \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\BitOrFunction":{"class":{"descriptions":{"short":"\"BIT_OR\" \"(\" ArithmeticPrimary \",\" ArithmeticPrimary \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\ConcatFunction":{"class":{"descriptions":{"short":"\"CONCAT\" \"(\" StringPrimary \",\" StringPrimary {\",\" StringPrimary }* \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\CurrentDateFunction":{"class":{"descriptions":{"short":"\"CURRENT_DATE\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimeFunction":{"class":{"descriptions":{"short":"\"CURRENT_TIME\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimestampFunction":{"class":{"descriptions":{"short":"\"CURRENT_TIMESTAMP\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\DateAddFunction":{"class":{"descriptions":{"short":"\"DATE_ADD\" \"(\" ArithmeticPrimary \",\" ArithmeticPrimary \",\" StringPrimary \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\DateDiffFunction":{"class":{"descriptions":{"short":"\"DATE_DIFF\" \"(\" ArithmeticPrimary \",\" ArithmeticPrimary \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\DateSubFunction":{"class":{"descriptions":{"short":"\"DATE_ADD(date1, interval, unit)\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode":{"class":{"descriptions":{"short":"Abstract Function Node.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\IdentityFunction":{"class":{"descriptions":{"short":"\"IDENTITY\" \"(\" SingleValuedAssociationPathExpression {\",\" string} \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\LengthFunction":{"class":{"descriptions":{"short":"\"LENGTH\" \"(\" StringPrimary \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\LocateFunction":{"class":{"descriptions":{"short":"\"LOCATE\" \"(\" StringPrimary \",\" StringPrimary [\",\" SimpleArithmeticExpression]\")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\LowerFunction":{"class":{"descriptions":{"short":"\"LOWER\" \"(\" StringPrimary \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\ModFunction":{"class":{"descriptions":{"short":"\"MOD\" \"(\" SimpleArithmeticExpression \",\" SimpleArithmeticExpression \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\SizeFunction":{"class":{"descriptions":{"short":"\"SIZE\" \"(\" CollectionValuedPathExpression \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\SqrtFunction":{"class":{"descriptions":{"short":"\"SQRT\" \"(\" SimpleArithmeticExpression \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\SubstringFunction":{"class":{"descriptions":{"short":"\"SUBSTRING\" \"(\" StringPrimary \",\" SimpleArithmeticExpression \",\" SimpleArithmeticExpression \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\TrimFunction":{"class":{"descriptions":{"short":"\"TRIM\" \"(\" [[\"LEADING\" | \"TRAILING\" | \"BOTH\"] [char] \"FROM\"] StringPrimary \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Functions\\UpperFunction":{"class":{"descriptions":{"short":"\"UPPER\" \"(\" StringPrimary \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\GeneralCaseExpression":{"class":{"descriptions":{"short":"GeneralCaseExpression ::= \"CASE\" WhenClause {WhenClause}* \"ELSE\" ScalarExpression \"END\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$whenClauses","$elseScalarExpression"],"optionals":[],"docParameters":{"$whenClauses":{"type":"array","description":null},"$elseScalarExpression":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\GroupByClause":{"class":{"descriptions":{"short":"Description of GroupByClause.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$groupByItems"],"optionals":[],"docParameters":{"$groupByItems":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\HavingClause":{"class":{"descriptions":{"short":"Description of HavingClause.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conditionalExpression"],"optionals":[],"docParameters":{"$conditionalExpression":{"type":"ConditionalExpression","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\IdentificationVariableDeclaration":{"class":{"descriptions":{"short":"IdentificationVariableDeclaration ::= RangeVariableDeclaration [IndexBy] {JoinVariableDeclaration}*","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$rangeVariableDecl","$indexBy","$joins"],"optionals":[],"docParameters":{"$rangeVariableDecl":{"type":"RangeVariableDeclaration|null","description":null},"$indexBy":{"type":"IndexBy|null","description":null},"$joins":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\InExpression":{"class":{"descriptions":{"short":"InExpression ::= StateFieldPathExpression [\"NOT\"] \"IN\" \"(\" (Literal {\",\" Literal}* | Subselect) \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expression"],"optionals":[],"docParameters":{"$expression":{"type":"ArithmeticExpression","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\IndexBy":{"class":{"descriptions":{"short":"IndexBy ::= \"INDEX\" \"BY\" SimpleStateFieldPathExpression","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$simpleStateFieldPathExpression"],"optionals":[],"docParameters":{"$simpleStateFieldPathExpression":{"type":"PathExpression","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\InputParameter":{"class":{"descriptions":{"short":"Description of InputParameter.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":{"$value":{"type":"string","description":null}},"throws":{"\\Doctrine\\ORM\\Query\\QueryException":""},"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\InstanceOfExpression":{"class":{"descriptions":{"short":"InstanceOfExpression ::= IdentificationVariable [\"NOT\"] \"INSTANCE\" [\"OF\"] (InstanceOfParameter | \"(\" InstanceOfParameter {\",\" InstanceOfParameter}* \")\")\nInstanceOfParameter  ::= AbstractSchemaName | InputParameter","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$identVariable"],"optionals":[],"docParameters":{"$identVariable":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Join":{"class":{"descriptions":{"short":"Join ::= [\"LEFT\" [\"OUTER\"] | \"INNER\"] \"JOIN\" JoinAssociationPathExpression\n[\"AS\"] AliasIdentificationVariable [(\"ON\" | \"WITH\") ConditionalExpression]","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$joinType","$joinAssociationDeclaration"],"optionals":[],"docParameters":{"$joinType":{"type":"int","description":null},"$joinAssociationDeclaration":{"type":"Node","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\JoinAssociationDeclaration":{"class":{"descriptions":{"short":"JoinAssociationDeclaration ::= JoinAssociationPathExpression [\"AS\"] AliasIdentificationVariable","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$joinAssociationPathExpression","$aliasIdentificationVariable","$indexBy"],"optionals":[],"docParameters":{"$joinAssociationPathExpression":{"type":"JoinAssociationPathExpression","description":null},"$aliasIdentificationVariable":{"type":"string","description":null},"$indexBy":{"type":"IndexBy|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\JoinAssociationPathExpression":{"class":{"descriptions":{"short":"JoinAssociationPathExpression ::= IdentificationVariable \".\" (SingleValuedAssociationField | CollectionValuedAssociationField)","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$identificationVariable","$associationField"],"optionals":[],"docParameters":{"$identificationVariable":{"type":"string","description":null},"$associationField":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\JoinClassPathExpression":{"class":{"descriptions":{"short":"JoinClassPathExpression ::= AbstractSchemaName [\"AS\"] AliasIdentificationVariable","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$abstractSchemaName","$aliasIdentificationVar"],"optionals":[],"docParameters":{"$abstractSchemaName":{"type":"mixed","description":null},"$aliasIdentificationVar":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\LikeExpression":{"class":{"descriptions":{"short":"LikeExpression ::= StringExpression [\"NOT\"] \"LIKE\" string [\"ESCAPE\" char]","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stringExpression","$stringPattern"],"optionals":["$escapeChar"],"docParameters":{"$stringExpression":{"type":"Node","description":null},"$stringPattern":{"type":"InputParameter","description":null},"$escapeChar":{"type":"Literal|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Literal":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$type","$value"],"optionals":[],"docParameters":{"$type":{"type":"int","description":null},"$value":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\NewObjectExpression":{"class":{"descriptions":{"short":"NewObjectExpression ::= \"NEW\" IdentificationVariable \"(\" NewObjectArg {\",\" NewObjectArg}* \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$className","$args"],"optionals":[],"docParameters":{"$className":{"type":"string","description":null},"$args":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Node":{"class":{"descriptions":{"short":"Abstract class of an AST node.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Query\\AST\\NullComparisonExpression":{"class":{"descriptions":{"short":"NullComparisonExpression ::= (SingleValuedPathExpression | InputParameter) \"IS\" [\"NOT\"] \"NULL\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expression"],"optionals":[],"docParameters":{"$expression":{"type":"Node","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\NullIfExpression":{"class":{"descriptions":{"short":"NullIfExpression ::= \"NULLIF\" \"(\" ScalarExpression \",\" ScalarExpression \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$firstExpression","$secondExpression"],"optionals":[],"docParameters":{"$firstExpression":{"type":"mixed","description":null},"$secondExpression":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\OrderByClause":{"class":{"descriptions":{"short":"OrderByClause ::= \"ORDER\" \"BY\" OrderByItem {\",\" OrderByItem}*","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$orderByItems"],"optionals":[],"docParameters":{"$orderByItems":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\OrderByItem":{"class":{"descriptions":{"short":"OrderByItem ::= (ResultVariable | StateFieldPathExpression) [\"ASC\" | \"DESC\"]","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expression"],"optionals":[],"docParameters":{"$expression":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\ParenthesisExpression":{"class":{"descriptions":{"short":"ParenthesisExpression ::= \"(\" ArithmeticPrimary \")\"","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expression"],"optionals":[],"docParameters":{"$expression":{"type":"\\Doctrine\\ORM\\Query\\AST\\Node","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\PartialObjectExpression":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$identificationVariable","$partialFieldSet"],"optionals":[],"docParameters":{"$identificationVariable":{"type":"string","description":null},"$partialFieldSet":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\PathExpression":{"class":{"descriptions":{"short":"AssociationPathExpression ::= CollectionValuedPathExpression | SingleValuedAssociationPathExpression\nSingleValuedPathExpression ::= StateFieldPathExpression | SingleValuedAssociationPathExpression\nStateFieldPathExpression ::= SimpleStateFieldPathExpression | SimpleStateFieldAssociationPathExpression\nSingleValuedAssociationPathExpression ::= IdentificationVariable \".\" SingleValuedAssociationField\nCollectionValuedPathExpression ::= IdentificationVariable \".\" CollectionValuedAssociationField\nStateField ::= {EmbeddedClassStateField \".\"}* SimpleStateField\nSimpleStateFieldPathExpression ::= IdentificationVariable \".\" StateField","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expectedType","$identificationVariable"],"optionals":["$field"],"docParameters":{"$expectedType":{"type":"int","description":null},"$identificationVariable":{"type":"string","description":null},"$field":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\QuantifiedExpression":{"class":{"descriptions":{"short":"QuantifiedExpression ::= (\"ALL\" | \"ANY\" | \"SOME\") \"(\" Subselect \")\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$subselect"],"optionals":[],"docParameters":{"$subselect":{"type":"Subselect","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\RangeVariableDeclaration":{"class":{"descriptions":{"short":"RangeVariableDeclaration ::= AbstractSchemaName [\"AS\"] AliasIdentificationVariable","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$abstractSchemaName","$aliasIdentificationVar"],"optionals":["$isRoot"],"docParameters":{"$abstractSchemaName":{"type":"string","description":null},"$aliasIdentificationVar":{"type":"string","description":null},"$isRoot":{"type":"boolean","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\SelectClause":{"class":{"descriptions":{"short":"SelectClause = \"SELECT\" [\"DISTINCT\"] SelectExpression {\",\" SelectExpression}","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$selectExpressions","$isDistinct"],"optionals":[],"docParameters":{"$selectExpressions":{"type":"array","description":null},"$isDistinct":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\SelectExpression":{"class":{"descriptions":{"short":"SelectExpression ::= IdentificationVariable [\".\" \"*\"] | StateFieldPathExpression |\n(AggregateExpression | \"(\" Subselect \")\") [[\"AS\"] [\"HIDDEN\"] FieldAliasIdentificationVariable]","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expression","$fieldIdentificationVariable"],"optionals":["$hiddenAliasResultVariable"],"docParameters":{"$expression":{"type":"mixed","description":null},"$fieldIdentificationVariable":{"type":"string|null","description":null},"$hiddenAliasResultVariable":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\SelectStatement":{"class":{"descriptions":{"short":"SelectStatement = SelectClause FromClause [WhereClause] [GroupByClause] [HavingClause] [OrderByClause]","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$selectClause","$fromClause"],"optionals":[],"docParameters":{"$selectClause":{"type":"SelectClause","description":null},"$fromClause":{"type":"FromClause","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\SimpleArithmeticExpression":{"class":{"descriptions":{"short":"SimpleArithmeticExpression ::= ArithmeticTerm {(\"+\" | \"-\") ArithmeticTerm}*","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$arithmeticTerms"],"optionals":[],"docParameters":{"$arithmeticTerms":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\SimpleCaseExpression":{"class":{"descriptions":{"short":"SimpleCaseExpression ::= \"CASE\" CaseOperand SimpleWhenClause {SimpleWhenClause}* \"ELSE\" ScalarExpression \"END\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$caseOperand","$simpleWhenClauses","$elseScalarExpression"],"optionals":[],"docParameters":{"$caseOperand":{"type":"PathExpression","description":null},"$simpleWhenClauses":{"type":"array","description":null},"$elseScalarExpression":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\SimpleSelectClause":{"class":{"descriptions":{"short":"SimpleSelectClause  ::= \"SELECT\" [\"DISTINCT\"] SimpleSelectExpression","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$simpleSelectExpression","$isDistinct"],"optionals":[],"docParameters":{"$simpleSelectExpression":{"type":"SimpleSelectExpression","description":null},"$isDistinct":{"type":"bool","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\SimpleSelectExpression":{"class":{"descriptions":{"short":"SimpleSelectExpression ::= StateFieldPathExpression | IdentificationVariable\n| (AggregateExpression [[\"AS\"] FieldAliasIdentificationVariable])","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$expression"],"optionals":[],"docParameters":{"$expression":{"type":"Node","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\SimpleWhenClause":{"class":{"descriptions":{"short":"SimpleWhenClause ::= \"WHEN\" ScalarExpression \"THEN\" ScalarExpression","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$caseScalarExpression","$thenScalarExpression"],"optionals":[],"docParameters":{"$caseScalarExpression":{"type":"mixed","description":null},"$thenScalarExpression":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\Subselect":{"class":{"descriptions":{"short":"Subselect ::= SimpleSelectClause SubselectFromClause [WhereClause] [GroupByClause] [HavingClause] [OrderByClause]","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$simpleSelectClause","$subselectFromClause"],"optionals":[],"docParameters":{"$simpleSelectClause":{"type":"SimpleSelectClause","description":null},"$subselectFromClause":{"type":"SubselectFromClause","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\SubselectFromClause":{"class":{"descriptions":{"short":"SubselectFromClause ::= \"FROM\" SubselectIdentificationVariableDeclaration {\",\" SubselectIdentificationVariableDeclaration}*","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$identificationVariableDeclarations"],"optionals":[],"docParameters":{"$identificationVariableDeclarations":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\UpdateClause":{"class":{"descriptions":{"short":"UpdateClause ::= \"UPDATE\" AbstractSchemaName [[\"AS\"] AliasIdentificationVariable] \"SET\" UpdateItem {\",\" UpdateItem}*","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$abstractSchemaName","$updateItems"],"optionals":[],"docParameters":{"$abstractSchemaName":{"type":"string","description":null},"$updateItems":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\UpdateItem":{"class":{"descriptions":{"short":"UpdateItem ::= [IdentificationVariable \".\"] {StateField | SingleValuedAssociationField} \"=\" NewValue\nNewValue ::= SimpleArithmeticExpression | StringPrimary | DatetimePrimary | BooleanPrimary |\nEnumPrimary | SimpleEntityExpression | \"NULL\"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$pathExpression","$newValue"],"optionals":[],"docParameters":{"$pathExpression":{"type":"PathExpression","description":null},"$newValue":{"type":"InputParameter|ArithmeticExpression|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\UpdateStatement":{"class":{"descriptions":{"short":"UpdateStatement = UpdateClause [WhereClause]","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$updateClause"],"optionals":[],"docParameters":{"$updateClause":{"type":"UpdateClause","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\WhenClause":{"class":{"descriptions":{"short":"WhenClause ::= \"WHEN\" ConditionalExpression \"THEN\" ScalarExpression","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$caseConditionExpression","$thenScalarExpression"],"optionals":[],"docParameters":{"$caseConditionExpression":{"type":"ConditionalExpression","description":null},"$thenScalarExpression":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\AST\\WhereClause":{"class":{"descriptions":{"short":"WhereClause ::= \"WHERE\" ConditionalExpression","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$conditionalExpression"],"optionals":[],"docParameters":{"$conditionalExpression":{"type":"ConditionalExpression","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor":{"class":{"descriptions":{"short":"Base class for SQL statement executors.","long":"@author      Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Query\\Exec\\MultiTableDeleteExecutor":{"class":{"descriptions":{"short":"Executes the SQL statements for bulk DQL DELETE statements on classes in\nClass Table Inheritance (JOINED).","long":"@author      Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$AST","$sqlWalker"],"optionals":[],"docParameters":{"$AST":{"type":"\\Doctrine\\ORM\\Query\\AST\\Node","description":"The root AST node of the DQL query."},"$sqlWalker":{"type":"\\Doctrine\\ORM\\Query\\SqlWalker","description":"The walker used for SQL generation from the AST."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>MultiTableDeleteExecutor<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Exec\\MultiTableUpdateExecutor":{"class":{"descriptions":{"short":"Executes the SQL statements for bulk DQL UPDATE statements on classes in\nClass Table Inheritance (JOINED).","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$AST","$sqlWalker"],"optionals":[],"docParameters":{"$AST":{"type":"\\Doctrine\\ORM\\Query\\AST\\Node","description":"The root AST node of the DQL query."},"$sqlWalker":{"type":"\\Doctrine\\ORM\\Query\\SqlWalker","description":"The walker used for SQL generation from the AST."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new <tt>MultiTableUpdateExecutor<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor":{"class":{"descriptions":{"short":"Executor that executes the SQL statement for simple DQL SELECT statements.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$AST","$sqlWalker"],"optionals":[],"docParameters":{"$AST":{"type":"\\Doctrine\\ORM\\Query\\AST\\SelectStatement","description":null},"$sqlWalker":{"type":"\\Doctrine\\ORM\\Query\\SqlWalker","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Exec\\SingleTableDeleteUpdateExecutor":{"class":{"descriptions":{"short":"Executor that executes the SQL statements for DQL DELETE\/UPDATE statements on classes\nthat are mapped to a single table.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$AST","$sqlWalker"],"optionals":[],"docParameters":{"$AST":{"type":"\\Doctrine\\ORM\\Query\\AST\\Node","description":null},"$sqlWalker":{"type":"\\Doctrine\\ORM\\Query\\SqlWalker","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr":{"class":{"descriptions":{"short":"This class is used to generate DQL expressions via a set of PHP static functions.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Query\\Expr\\Andx":{"class":{"descriptions":{"short":"Expression class for building DQL and parts.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$args"],"docParameters":{"$args":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\Base":{"class":{"descriptions":{"short":"Abstract base Expr class for building DQL parts.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$args"],"docParameters":{"$args":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\Comparison":{"class":{"descriptions":{"short":"Expression class for DQL comparison expressions.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$leftExpr","$operator","$rightExpr"],"optionals":[],"docParameters":{"$leftExpr":{"type":"mixed","description":null},"$operator":{"type":"string","description":null},"$rightExpr":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a comparison expression with the given arguments.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\Composite":{"class":{"descriptions":{"short":"Expression class for building DQL and parts.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$args"],"docParameters":{"$args":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\From":{"class":{"descriptions":{"short":"Expression class for DQL from.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$from","$alias"],"optionals":["$indexBy"],"docParameters":{"$from":{"type":"string","description":"The class name."},"$alias":{"type":"string","description":"The alias of the class."},"$indexBy":{"type":"string","description":"The index for the from."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\Func":{"class":{"descriptions":{"short":"Expression class for generating DQL functions.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$arguments"],"optionals":[],"docParameters":{"$name":{"type":"string","description":null},"$arguments":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a function, with the given argument.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\GroupBy":{"class":{"descriptions":{"short":"Expression class for building DQL Group By parts.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$args"],"docParameters":{"$args":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\Join":{"class":{"descriptions":{"short":"Expression class for DQL join.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$joinType","$join"],"optionals":["$alias","$conditionType","$condition","$indexBy"],"docParameters":{"$joinType":{"type":"string","description":"The condition type constant. Either INNER_JOIN or LEFT_JOIN."},"$join":{"type":"string","description":"The relationship to join."},"$alias":{"type":"string|null","description":"The alias of the join."},"$conditionType":{"type":"string|null","description":"The condition type constant. Either ON or WITH."},"$condition":{"type":"string|null","description":"The condition for the join."},"$indexBy":{"type":"string|null","description":"The index for the join."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\Literal":{"class":{"descriptions":{"short":"Expression class for generating DQL functions.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$args"],"docParameters":{"$args":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\Math":{"class":{"descriptions":{"short":"Expression class for DQL math statements.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$leftExpr","$operator","$rightExpr"],"optionals":[],"docParameters":{"$leftExpr":{"type":"mixed","description":null},"$operator":{"type":"string","description":null},"$rightExpr":{"type":"mixed","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a mathematical expression with the given arguments.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\OrderBy":{"class":{"descriptions":{"short":"Expression class for building DQL Order By parts.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$sort","$order"],"docParameters":{"$sort":{"type":"string|null","description":null},"$order":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\Orx":{"class":{"descriptions":{"short":"Expression class for building DQL OR clauses.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$args"],"docParameters":{"$args":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Expr\\Select":{"class":{"descriptions":{"short":"Expression class for building DQL select statements.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$args"],"docParameters":{"$args":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\FilterCollection":{"class":{"descriptions":{"short":"Collection class for all the query filters.","long":"@author Alexander <iam.asm89@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Filter\\SQLFilter":{"class":{"descriptions":{"short":"The base class that user defined filters should extend.","long":"Handles the setting and escaping of parameters.\n\n@author Alexander <iam.asm89@gmail.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"EntityManager","description":"The entity manager."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs the SQLFilter object.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Lexer":{"class":{"descriptions":{"short":"Scans a DQL query for tokens.","long":"@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Janne Vanhala <jpvanhal@cc.hut.fi>\n@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$input"],"optionals":[],"docParameters":{"$input":{"type":"string","description":"A query string."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a new query scanner object.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Parameter":{"class":{"descriptions":{"short":"Defines a Query Parameter.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name","$value"],"optionals":["$type"],"docParameters":{"$name":{"type":"string","description":"Parameter name"},"$value":{"type":"mixed","description":"Parameter value"},"$type":{"type":"mixed","description":"Parameter type"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\ParameterTypeInferer":{"class":{"descriptions":{"short":"Provides an enclosed support for parameter inferring.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Query\\Parser":{"class":{"descriptions":{"short":"An LL(*) recursive-descent parser for the context-free grammar of the Doctrine Query Language.\nParses a DQL query, reports any errors in it, and generates an AST.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":[],"docParameters":{"$query":{"type":"Query","description":"The Query to parse."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Creates a new query parser object.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\ParserResult":{"class":{"descriptions":{"short":"Encapsulates the resulting components from a DQL query parsing process that\ncan be serialized.","long":"@author      Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author      Janne Vanhala <jpvanhal@cc.hut.fi>\n@author\t\tRoman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new instance of the <tt>ParserResult<\/tt> class.\nThe new instance is initialized with an empty <tt>ResultSetMapping<\/tt>.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\Printer":{"class":{"descriptions":{"short":"A parse tree printer for Doctrine Query Language parser.","long":"@author      Janne Vanhala <jpvanhal@cc.hut.fi>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$silent"],"docParameters":{"$silent":{"type":"bool","description":"Parse tree will not be printed if true."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructs a new parse tree printer.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\QueryException":{"class":{"descriptions":{"short":"Description of QueryException.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\QueryExpressionVisitor":{"class":{"descriptions":{"short":"Converts Collection expressions to Query expressions.","long":"@author Kirill chEbba Chebunin <iam@chebba.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$rootAlias"],"optionals":[],"docParameters":{"$rootAlias":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\ResultSetMapping":{"class":{"descriptions":{"short":"A ResultSetMapping describes how a result set of an SQL query maps to a Doctrine result.","long":"IMPORTANT NOTE:\nThe properties of this class are only public for fast internal READ access and to (drastically)\nreduce the size of serialized instances for more effective caching due to better (un-)serialization\nperformance.\n\n<b>Users should use the public methods.<\/b>\n\n@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Query\\ResultSetMappingBuilder":{"class":{"descriptions":{"short":"A ResultSetMappingBuilder uses the EntityManager to automatically populate entity fields.","long":"@author Michael Ridgway <mcridgway@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":["$defaultRenameMode"],"docParameters":{"$em":{"type":"EntityManager","description":null},"$defaultRenameMode":{"type":"integer","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\SqlWalker":{"class":{"descriptions":{"short":"The SqlWalker is a TreeWalker that walks over a DQL AST and constructs\nthe corresponding SQL.","long":"@author Guilherme Blanco <guilhermeblanco@hotmail.com>\n@author Roman Borschel <roman@code-factory.org>\n@author Benjamin Eberlei <kontakt@beberlei.de>\n@author Alexander <iam.asm89@gmail.com>\n@author Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$parserResult","$queryComponents"],"optionals":[],"docParameters":{"$query":{"type":"\\Doctrine\\ORM\\AbstractQuery","description":"The parsed Query."},"$parserResult":{"type":"\\Doctrine\\ORM\\Query\\ParserResult","description":"The result of the parsing process."},"$queryComponents":{"type":"array","description":"The query components (symbol table)."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes TreeWalker with important information about the ASTs to be walked.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\TreeWalker":{"class":{"descriptions":{"short":"Interface for walkers of DQL ASTs (abstract syntax trees).","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Query\\TreeWalkerAdapter":{"class":{"descriptions":{"short":"An adapter implementation of the TreeWalker interface. The methods in this class\nare empty. \ufeffThis class exists as convenience for creating tree walkers.","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$parserResult","$queryComponents"],"optionals":[],"docParameters":{"$query":{"type":"\\Doctrine\\ORM\\AbstractQuery","description":"The parsed Query."},"$parserResult":{"type":"\\Doctrine\\ORM\\Query\\ParserResult","description":"The result of the parsing process."},"$queryComponents":{"type":"array","description":"The query components (symbol table)."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes TreeWalker with important information about the ASTs to be walked.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Query\\TreeWalkerChain":{"class":{"descriptions":{"short":"Represents a chain of tree walkers that modify an AST and finally emit output.\nOnly the last walker in the chain can emit output. Any previous walkers can modify\nthe AST to influence the final output produced by the last walker.","long":"@author Roman Borschel <roman@code-factory.org>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$parserResult","$queryComponents"],"optionals":[],"docParameters":{"$query":{"type":"\\Doctrine\\ORM\\AbstractQuery","description":"The parsed Query."},"$parserResult":{"type":"\\Doctrine\\ORM\\Query\\ParserResult","description":"The result of the parsing process."},"$queryComponents":{"type":"array","description":"The query components (symbol table)."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes TreeWalker with important information about the ASTs to be walked.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Repository\\DefaultRepositoryFactory":{"class":{"descriptions":{"short":"This factory is used to create default repository objects for entities at runtime.","long":"@author Guilherme Blanco <guilhermeblanco@hotmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Repository\\RepositoryFactory":{"class":{"descriptions":{"short":"Interface for entity repository factory.","long":"@author Guilherme Blanco <guilhermeblanco@hotmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\MetadataCommand":{"class":{"descriptions":{"short":"Command to clear the metadata cache of the various cache drivers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\QueryCommand":{"class":{"descriptions":{"short":"Command to clear the query cache of the various cache drivers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\ResultCommand":{"class":{"descriptions":{"short":"Command to clear the result cache of the various cache drivers.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand":{"class":{"descriptions":{"short":"Command to convert a Doctrine 1 schema to a Doctrine 2 mapping file.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\ConvertMappingCommand":{"class":{"descriptions":{"short":"Command to convert your mapping information between the various formats.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\EnsureProductionSettingsCommand":{"class":{"descriptions":{"short":"Command to ensure that Doctrine is properly configured for a production environment.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\GenerateEntitiesCommand":{"class":{"descriptions":{"short":"Command to generate entity classes and method stubs from your mapping information.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\GenerateProxiesCommand":{"class":{"descriptions":{"short":"Command to (re)generate the proxy classes used by doctrine.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\GenerateRepositoriesCommand":{"class":{"descriptions":{"short":"Command to generate repository classes for mapping information.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\InfoCommand":{"class":{"descriptions":{"short":"Show information about mapped entities.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\RunDqlCommand":{"class":{"descriptions":{"short":"Command to execute DQL queries in a given EntityManager.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\AbstractCommand":{"class":{"descriptions":{"short":"Base class for CreateCommand, DropCommand and UpdateCommand.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\CreateCommand":{"class":{"descriptions":{"short":"Command to create the database schema for a set of classes based on their mappings.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\DropCommand":{"class":{"descriptions":{"short":"Command to drop the database schema for a set of classes based on their mappings.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\UpdateCommand":{"class":{"descriptions":{"short":"Command to generate the SQL needed to update the database schema to match\nthe current mapping information.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\Command\\ValidateSchemaCommand":{"class":{"descriptions":{"short":"Command to validate that the current mapping is valid.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\ConsoleRunner":{"class":{"descriptions":{"short":"Handles running the Console Tools inside Symfony Console context.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Tools\\Console\\Helper\\EntityManagerHelper":{"class":{"descriptions":{"short":"Doctrine CLI Connection Helper.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"EntityManagerInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Console\\MetadataFilter":{"class":{"descriptions":{"short":"Used by CLI Tools to restrict entity-based commands to given patterns.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$metadata","$filter"],"optionals":[],"docParameters":{"$metadata":{"type":"\\ArrayIterator","description":null},"$filter":{"type":"array|string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\ConvertDoctrine1Schema":{"class":{"descriptions":{"short":"Class to help with converting Doctrine 1 schema files to Doctrine 2 mapping files","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$from"],"optionals":[],"docParameters":{"$from":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor passes the directory or array of directories\nto convert the Doctrine 1 schema files from.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\DebugUnitOfWorkListener":{"class":{"descriptions":{"short":"Use this logger to dump the identity map during the onFlush event. This is useful for debugging\nweird UnitOfWork behavior with complex operations.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$file","$context"],"docParameters":{"$file":{"type":"string","description":null},"$context":{"type":"string","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Pass a stream and context information for the debugging session.","long":"The stream can be php:\/\/output to print to the screen."},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\DisconnectedClassMetadataFactory":{"class":{"descriptions":{"short":"The DisconnectedClassMetadataFactory is used to create ClassMetadataInfo objects\nthat do not require the entity class actually exist. This allows us to\nload some mapping information and use it to do things like generate code\nfrom the mapping information.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Tools\\EntityGenerator":{"class":{"descriptions":{"short":"Generic class used to generate PHP5 entity classes from ClassMetadataInfo instances.","long":"[php]\n$classes = $em->getClassMetadataFactory()->getAllMetadata();\n\n$generator = new \\Doctrine\\ORM\\Tools\\EntityGenerator();\n$generator->setGenerateAnnotations(true);\n$generator->setGenerateStubMethods(true);\n$generator->setRegenerateEntityIfExists(false);\n$generator->setUpdateEntityIfExists(true);\n$generator->generate($classes, '\/path\/to\/generate\/entities');"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\EntityRepositoryGenerator":{"class":{"descriptions":{"short":"Class to generate entity repository classes","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Tools\\Event\\GenerateSchemaEventArgs":{"class":{"descriptions":{"short":"Event Args used for the Events::postGenerateSchema event.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em","$schema"],"optionals":[],"docParameters":{"$em":{"type":"EntityManager","description":null},"$schema":{"type":"Schema","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs":{"class":{"descriptions":{"short":"Event Args used for the Events::postGenerateSchemaTable event.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$classMetadata","$schema","$classTable"],"optionals":[],"docParameters":{"$classMetadata":{"type":"ClassMetadata","description":null},"$schema":{"type":"Schema","description":null},"$classTable":{"type":"Table","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Export\\ClassMetadataExporter":{"class":{"descriptions":{"short":"Class used for converting your mapping information between the\nsupported formats: yaml, xml, and php\/annotation.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter":{"class":{"descriptions":{"short":"Abstract base class which is to be used for the Exporter drivers\nwhich can be found in \\Doctrine\\ORM\\Tools\\Export\\Driver.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dir"],"docParameters":{"$dir":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Export\\Driver\\AnnotationExporter":{"class":{"descriptions":{"short":"ClassMetadata exporter for PHP classes with annotations.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dir"],"docParameters":{"$dir":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Export\\Driver\\PhpExporter":{"class":{"descriptions":{"short":"ClassMetadata exporter for PHP code.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dir"],"docParameters":{"$dir":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Export\\Driver\\XmlExporter":{"class":{"descriptions":{"short":"ClassMetadata exporter for Doctrine XML mapping files.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dir"],"docParameters":{"$dir":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Export\\Driver\\YamlExporter":{"class":{"descriptions":{"short":"ClassMetadata exporter for Doctrine YAML mapping files.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$dir"],"docParameters":{"$dir":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Export\\ExportException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Pagination\\CountOutputWalker":{"class":{"descriptions":{"short":"Wraps the query in order to accurately count the root objects.","long":"Given a DQL like `SELECT u FROM User u` it will generate an SQL query like:\nSELECT COUNT(*) (SELECT DISTINCT <id> FROM (<original SQL>))\n\nWorks with composite keys but cannot deal with queries that have multiple\nroot entities (e.g. `SELECT f, b from Foo, Bar`)\n\n@author Sander Marechal <s.marechal@jejik.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$parserResult","$queryComponents"],"optionals":[],"docParameters":{"$query":{"type":"\\Doctrine\\ORM\\Query","description":null},"$parserResult":{"type":"\\Doctrine\\ORM\\Query\\ParserResult","description":null},"$queryComponents":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Stores various parameters that are otherwise unavailable\nbecause Doctrine\\ORM\\Query\\SqlWalker keeps everything private without\naccessors."},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Pagination\\CountWalker":{"class":{"descriptions":{"short":"Replaces the selectClause of the AST with a COUNT statement.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$parserResult","$queryComponents"],"optionals":[],"docParameters":{"$query":{"type":"\\Doctrine\\ORM\\AbstractQuery","description":"The parsed Query."},"$parserResult":{"type":"\\Doctrine\\ORM\\Query\\ParserResult","description":"The result of the parsing process."},"$queryComponents":{"type":"array","description":"The query components (symbol table)."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes TreeWalker with important information about the ASTs to be walked.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryOutputWalker":{"class":{"descriptions":{"short":"Wraps the query in order to select root entity IDs for pagination.","long":"Given a DQL like `SELECT u FROM User u` it will generate an SQL query like:\nSELECT DISTINCT <id> FROM (<original SQL>) LIMIT x OFFSET y\n\nWorks with composite keys but cannot deal with queries that have multiple\nroot entities (e.g. `SELECT f, b from Foo, Bar`)\n\n@author Sander Marechal <s.marechal@jejik.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$parserResult","$queryComponents"],"optionals":[],"docParameters":{"$query":{"type":"\\Doctrine\\ORM\\Query","description":null},"$parserResult":{"type":"\\Doctrine\\ORM\\Query\\ParserResult","description":null},"$queryComponents":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"Stores various parameters that are otherwise unavailable\nbecause Doctrine\\ORM\\Query\\SqlWalker keeps everything private without\naccessors."},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryWalker":{"class":{"descriptions":{"short":"Replaces the selectClause of the AST with a SELECT DISTINCT root.id equivalent.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$parserResult","$queryComponents"],"optionals":[],"docParameters":{"$query":{"type":"\\Doctrine\\ORM\\AbstractQuery","description":"The parsed Query."},"$parserResult":{"type":"\\Doctrine\\ORM\\Query\\ParserResult","description":"The result of the parsing process."},"$queryComponents":{"type":"array","description":"The query components (symbol table)."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes TreeWalker with important information about the ASTs to be walked.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Pagination\\Paginator":{"class":{"descriptions":{"short":"The paginator can handle various complex scenarios with DQL.","long":"@author Pablo D\u00edez <pablodip@gmail.com>\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query"],"optionals":["$fetchJoinCollection"],"docParameters":{"$query":{"type":"Query|QueryBuilder","description":"A Doctrine ORM query or query builder."},"$fetchJoinCollection":{"type":"boolean","description":"Whether the query joins a collection (true by default)."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Pagination\\WhereInWalker":{"class":{"descriptions":{"short":"Replaces the whereClause of the AST with a WHERE id IN (:foo_1, :foo_2) equivalent.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$query","$parserResult","$queryComponents"],"optionals":[],"docParameters":{"$query":{"type":"\\Doctrine\\ORM\\AbstractQuery","description":"The parsed Query."},"$parserResult":{"type":"\\Doctrine\\ORM\\Query\\ParserResult","description":"The result of the parsing process."},"$queryComponents":{"type":"array","description":"The query components (symbol table)."}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes TreeWalker with important information about the ASTs to be walked.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\ResolveTargetEntityListener":{"class":{"descriptions":{"short":"ResolveTargetEntityListener","long":"Mechanism to overwrite interfaces or classes specified as association\ntargets.\n\n@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Tools\\SchemaTool":{"class":{"descriptions":{"short":"The SchemaTool is a tool to create\/drop\/update database schemas based on\n<tt>ClassMetadata<\/tt> class descriptors.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManagerInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new SchemaTool instance that uses the connection of the\nprovided EntityManager.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\SchemaValidator":{"class":{"descriptions":{"short":"Performs strict validation of the mapping schema","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"EntityManagerInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Tools\\Setup":{"class":{"descriptions":{"short":"Convenience class for setting up Doctrine from different installations and configurations.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Tools\\ToolEvents":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Doctrine\\ORM\\Tools\\ToolsException":{"class":{"descriptions":{"short":"Tools related Exceptions.","long":"@author Benjamin Eberlei <kontakt@beberlei.de>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\TransactionRequiredException":{"class":{"descriptions":{"short":"Is thrown when a transaction is required for the current operation, but there is none open.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\UnexpectedResultException":{"class":{"descriptions":{"short":"Exception for a unexpected query result.","long":"@author  Fabio B. Silva <fabio.bat.silva@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Doctrine\\ORM\\UnitOfWork":{"class":{"descriptions":{"short":"The UnitOfWork is responsible for tracking changes to objects during an\n\"object-level\" transaction and for writing out changes to the database\nin the correct order.","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$em"],"optionals":[],"docParameters":{"$em":{"type":"\\Doctrine\\ORM\\EntityManager","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes a new UnitOfWork instance, bound to the given EntityManager.","long":""},"deprecated":false}}}},"Doctrine\\ORM\\Version":{"class":{"descriptions":{"short":"Class to store and retrieve the version of Doctrine","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Product":{"class":{"descriptions":{"short":"@Entity @Table(name=\"products\")","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\AbstractLogger":{"class":{"descriptions":{"short":"This is a simple Logger implementation that other Loggers can inherit from.","long":"It simply delegates all log-level-specific methods to the `log` method to\nreduce boilerplate code that a simple Logger that does the same thing with\nmessages regardless of the error level has to implement."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Psr\\Log\\LogLevel":{"class":{"descriptions":{"short":"Describes log levels.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerAwareInterface":{"class":{"descriptions":{"short":"Describes a logger-aware instance.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerAwareTrait":{"class":{"descriptions":{"short":"Basic Implementation of LoggerAwareInterface.","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerInterface":{"class":{"descriptions":{"short":"Describes a logger instance.","long":"The message MUST be a string or object implementing __toString().\n\nThe message MAY contain placeholders in the form: {foo} where foo\nwill be replaced by the context data in key \"foo\".\n\nThe context array can contain arbitrary data. The only assumption that\ncan be made by implementors is that if an Exception instance is given\nto produce a stack trace, it MUST be in a key named \"exception\".\n\nSee https:\/\/github.com\/php-fig\/fig-standards\/blob\/master\/accepted\/PSR-3-logger-interface.md\nfor the full interface specification."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\LoggerTrait":{"class":{"descriptions":{"short":"This is a simple Logger trait that classes unable to extend AbstractLogger\n(because they extend another class, etc) can include.","long":"It simply delegates all log-level-specific methods to the `log` method to\nreduce boilerplate code that a simple Logger that does the same thing with\nmessages regardless of the error level has to implement."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Psr\\Log\\NullLogger":{"class":{"descriptions":{"short":"This Logger can be used to avoid conditional log calls.","long":"Logging should always be optional, and if no logger is provided to your\nlibrary creating a NullLogger instance to have something to throw logs at\nis a good way to avoid littering your code with `if ($this->logger) { }`\nblocks."},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Application":{"class":{"descriptions":{"short":"An Application is the container for a collection of commands.","long":"It is the main entry point of a Console application.\n\nThis class is optimized for a standard CLI environment.\n\nUsage:\n\n$app = new Application('myapp', '1.0 (stable)');\n$app->add(new SimpleCommand());\n$app->run();\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name","$version"],"docParameters":{"$name":{"type":"string","description":"The name of the application"},"$version":{"type":"string","description":"The version of the application"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Command\\Command":{"class":{"descriptions":{"short":"Base class for all commands.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Command\\HelpCommand":{"class":{"descriptions":{"short":"HelpCommand displays the help for a given command.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Command\\ListCommand":{"class":{"descriptions":{"short":"ListCommand displays the list of all available commands for the application.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$name"],"docParameters":{"$name":{"type":"string|null","description":"The name of the command; passing null means it must be set in configure()"}},"throws":{"LogicException":"When the command name is empty"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\ConsoleEvents":{"class":{"descriptions":{"short":"Contains all events dispatched by an Application.","long":"@author Francesco Levorato <git@flevour.net>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Descriptor\\ApplicationDescription":{"class":{"descriptions":{"short":"@author Jean-Fran\u00e7ois Simon <jeanfrancois.simon@sensiolabs.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$application"],"optionals":["$namespace"],"docParameters":{"$application":{"type":"Application","description":null},"$namespace":{"type":"string|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Descriptor\\Descriptor":{"class":{"descriptions":{"short":"@author Jean-Fran\u00e7ois Simon <jeanfrancois.simon@sensiolabs.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Descriptor\\DescriptorInterface":{"class":{"descriptions":{"short":"Descriptor interface.","long":"@author Jean-Fran\u00e7ois Simon <contact@jfsimon.fr>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Descriptor\\JsonDescriptor":{"class":{"descriptions":{"short":"JSON descriptor.","long":"@author Jean-Fran\u00e7ois Simon <contact@jfsimon.fr>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Descriptor\\MarkdownDescriptor":{"class":{"descriptions":{"short":"Markdown descriptor.","long":"@author Jean-Fran\u00e7ois Simon <contact@jfsimon.fr>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Descriptor\\TextDescriptor":{"class":{"descriptions":{"short":"Text descriptor.","long":"@author Jean-Fran\u00e7ois Simon <contact@jfsimon.fr>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Descriptor\\XmlDescriptor":{"class":{"descriptions":{"short":"XML descriptor.","long":"@author Jean-Fran\u00e7ois Simon <contact@jfsimon.fr>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Exception\\CommandNotFoundException":{"class":{"descriptions":{"short":"Represents an incorrect command name typed in the console.","long":"@author J\u00e9r\u00f4me Tamarelle <jerome@tamarelle.net>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$alternatives","$code","$previous"],"docParameters":{"$message":{"type":"string","description":"Exception message to throw"},"$alternatives":{"type":"array","description":"List of similar defined names"},"$code":{"type":"int","description":"Exception code"},"$previous":{"type":"Exception","description":"previous exception used for the exception chaining"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Exception\\ExceptionInterface":{"class":{"descriptions":{"short":"ExceptionInterface.","long":"@author J\u00e9r\u00f4me Tamarelle <jerome@tamarelle.net>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Exception\\InvalidArgumentException":{"class":{"descriptions":{"short":"@author J\u00e9r\u00f4me Tamarelle <jerome@tamarelle.net>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Exception\\InvalidOptionException":{"class":{"descriptions":{"short":"Represents an incorrect option name typed in the console.","long":"@author J\u00e9r\u00f4me Tamarelle <jerome@tamarelle.net>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Exception\\LogicException":{"class":{"descriptions":{"short":"@author J\u00e9r\u00f4me Tamarelle <jerome@tamarelle.net>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Exception\\RuntimeException":{"class":{"descriptions":{"short":"@author J\u00e9r\u00f4me Tamarelle <jerome@tamarelle.net>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Formatter\\OutputFormatter":{"class":{"descriptions":{"short":"Formatter class for console output.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$decorated","$styles"],"docParameters":{"$decorated":{"type":"bool","description":"Whether this formatter should actually decorate strings"},"$styles":{"type":"OutputFormatterStyleInterface[]","description":"Array of \"name => FormatterStyle\" instances"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes console output formatter.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Formatter\\OutputFormatterInterface":{"class":{"descriptions":{"short":"Formatter interface for console output.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Formatter\\OutputFormatterStyle":{"class":{"descriptions":{"short":"Formatter style class for defining styles.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$foreground","$background","$options"],"docParameters":{"$foreground":{"type":"string|null","description":"The style foreground color name"},"$background":{"type":"string|null","description":"The style background color name"},"$options":{"type":"array","description":"The style options"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Initializes output formatter style.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Formatter\\OutputFormatterStyleInterface":{"class":{"descriptions":{"short":"Formatter style interface for defining styles.","long":"@author Konstantin Kudryashov <ever.zet@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Formatter\\OutputFormatterStyleStack":{"class":{"descriptions":{"short":"@author Jean-Fran\u00e7ois Simon <contact@jfsimon.fr>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$emptyStyle"],"docParameters":{"$emptyStyle":{"type":"OutputFormatterStyleInterface|null","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\DebugFormatterHelper":{"class":{"descriptions":{"short":"Helps outputting debug information when running an external program from a command.","long":"An external program can be a Process, an HTTP request, or anything else.\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Helper\\DescriptorHelper":{"class":{"descriptions":{"short":"This class adds helper method to describe objects in various formats.","long":"@author Jean-Fran\u00e7ois Simon <contact@jfsimon.fr>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\DialogHelper":{"class":{"descriptions":{"short":"The Dialog class provides helpers to interact with the user.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$triggerDeprecationError"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\FormatterHelper":{"class":{"descriptions":{"short":"The Formatter class provides helpers to format messages.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Helper\\Helper":{"class":{"descriptions":{"short":"Helper is the base class for all helper classes.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Helper\\HelperInterface":{"class":{"descriptions":{"short":"HelperInterface is the interface all helpers must implement.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Helper\\HelperSet":{"class":{"descriptions":{"short":"HelperSet represents a set of helpers to be used with a command.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$helpers"],"docParameters":{"$helpers":{"type":"Helper[]","description":"An array of helper"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\InputAwareHelper":{"class":{"descriptions":{"short":"An implementation of InputAwareInterface for Helpers.","long":"@author Wouter J <waldio.webdesign@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Helper\\ProcessHelper":{"class":{"descriptions":{"short":"The ProcessHelper class provides helpers to run external processes.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Helper\\ProgressBar":{"class":{"descriptions":{"short":"The ProgressBar provides helpers to display progress output.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author Chris Jones <leeked@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$output"],"optionals":["$max"],"docParameters":{"$output":{"type":"OutputInterface","description":"An OutputInterface instance"},"$max":{"type":"int","description":"Maximum steps (0 if unknown)"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\ProgressHelper":{"class":{"descriptions":{"short":"The Progress class provides helpers to display progress output.","long":"@author Chris Jones <leeked@gmail.com>\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$triggerDeprecationError"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\ProgressIndicator":{"class":{"descriptions":{"short":"@author Kevin Bond <kevinbond@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$output"],"optionals":["$format","$indicatorChangeInterval","$indicatorValues"],"docParameters":{"$output":{"type":"OutputInterface","description":null},"$format":{"type":"string|null","description":"Indicator format"},"$indicatorChangeInterval":{"type":"int","description":"Change interval in milliseconds"},"$indicatorValues":{"type":"array|null","description":"Animated indicator characters"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\QuestionHelper":{"class":{"descriptions":{"short":"The QuestionHelper class provides helpers to interact with the user.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Helper\\SymfonyQuestionHelper":{"class":{"descriptions":{"short":"Symfony Style Guide compliant question helper.","long":"@author Kevin Bond <kevinbond@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Helper\\Table":{"class":{"descriptions":{"short":"Provides helpers to display a table.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author \u0421\u0430\u0448\u0430 \u0421\u0442\u0430\u043c\u0435\u043d\u043a\u043e\u0432\u0438\u045b <umpirsky@gmail.com>\n@author Abdellatif Ait boudad <a.aitboudad@gmail.com>\n@author Max Grigorian <maxakawizard@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$output"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\TableCell":{"class":{"descriptions":{"short":"@author Abdellatif Ait boudad <a.aitboudad@gmail.com>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value","$options"],"docParameters":{"$value":{"type":"string","description":null},"$options":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\TableHelper":{"class":{"descriptions":{"short":"Provides helpers to display table output.","long":"@author \u0421\u0430\u0448\u0430 \u0421\u0442\u0430\u043c\u0435\u043d\u043a\u043e\u0432\u0438\u045b <umpirsky@gmail.com>\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$triggerDeprecationError"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\TableSeparator":{"class":{"descriptions":{"short":"Marks a row as being a separator.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options"],"docParameters":{"$options":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Helper\\TableStyle":{"class":{"descriptions":{"short":"Defines the styles for a Table.","long":"@author Fabien Potencier <fabien@symfony.com>\n@author \u0421\u0430\u0448\u0430 \u0421\u0442\u0430\u043c\u0435\u043d\u043a\u043e\u0432\u0438\u045b <umpirsky@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Input\\ArgvInput":{"class":{"descriptions":{"short":"ArgvInput represents an input coming from the CLI arguments.","long":"Usage:\n\n$input = new ArgvInput();\n\nBy default, the `$_SERVER['argv']` array is used for the input values.\n\nThis can be overridden by explicitly passing the input values in the constructor:\n\n$input = new ArgvInput($_SERVER['argv']);\n\nIf you pass it yourself, don't forget that the first element of the array\nis the name of the running application.\n\nWhen passing an argument to the constructor, be sure that it respects\nthe same rules as the argv one. It's almost always better to use the\n`StringInput` when you want to provide your own input.\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$argv","$definition"],"docParameters":{"$argv":{"type":"array|null","description":"An array of parameters from the CLI (in the argv format)"},"$definition":{"type":"InputDefinition|null","description":"A InputDefinition instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Input\\ArrayInput":{"class":{"descriptions":{"short":"ArrayInput represents an input provided as an array.","long":"Usage:\n\n$input = new ArrayInput(array('name' => 'foo', '--bar' => 'foobar'));\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$parameters"],"optionals":["$definition"],"docParameters":{"$parameters":{"type":"array","description":"An array of parameters"},"$definition":{"type":"InputDefinition|null","description":"A InputDefinition instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Input\\Input":{"class":{"descriptions":{"short":"Input is the base class for all concrete Input classes.","long":"Three concrete classes are provided by default:\n\n* `ArgvInput`: The input comes from the CLI arguments (argv)\n* `StringInput`: The input is provided as a string\n* `ArrayInput`: The input is provided as an array\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$definition"],"docParameters":{"$definition":{"type":"InputDefinition|null","description":"A InputDefinition instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Input\\InputArgument":{"class":{"descriptions":{"short":"Represents a command line argument.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$mode","$description","$default"],"docParameters":{"$name":{"type":"string","description":"The argument name"},"$mode":{"type":"int","description":"The argument mode: self::REQUIRED or self::OPTIONAL"},"$description":{"type":"string","description":"A description text"},"$default":{"type":"mixed","description":"The default value (for self::OPTIONAL mode only)"}},"throws":{"InvalidArgumentException":"When argument mode is not valid"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Input\\InputAwareInterface":{"class":{"descriptions":{"short":"InputAwareInterface should be implemented by classes that depends on the\nConsole Input.","long":"@author Wouter J <waldio.webdesign@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Input\\InputDefinition":{"class":{"descriptions":{"short":"A InputDefinition represents a set of valid command line arguments and options.","long":"Usage:\n\n$definition = new InputDefinition(array(\nnew InputArgument('name', InputArgument::REQUIRED),\nnew InputOption('foo', 'f', InputOption::VALUE_REQUIRED),\n));\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$definition"],"docParameters":{"$definition":{"type":"array","description":"An array of InputArgument and InputOption instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Input\\InputInterface":{"class":{"descriptions":{"short":"InputInterface is the interface implemented by all input classes.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Input\\InputOption":{"class":{"descriptions":{"short":"Represents a command line option.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$shortcut","$mode","$description","$default"],"docParameters":{"$name":{"type":"string","description":"The option name"},"$shortcut":{"type":"string|array","description":"The shortcuts, can be null, a string of shortcuts delimited by | or an array of shortcuts"},"$mode":{"type":"int","description":"The option mode: One of the VALUE_* constants"},"$description":{"type":"string","description":"A description text"},"$default":{"type":"mixed","description":"The default value (must be null for self::VALUE_NONE)"}},"throws":{"InvalidArgumentException":"If option mode is invalid or incompatible"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Input\\StringInput":{"class":{"descriptions":{"short":"StringInput represents an input provided as a string.","long":"Usage:\n\n$input = new StringInput('foo --bar=\"foobar\"');\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$input"],"optionals":["$definition"],"docParameters":{"$input":{"type":"string","description":"An array of parameters from the CLI (in the argv format)"},"$definition":{"type":"InputDefinition","description":"A InputDefinition instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":true}}}},"Symfony\\Component\\Console\\Logger\\ConsoleLogger":{"class":{"descriptions":{"short":"PSR-3 compliant console logger.","long":"@author K\u00e9vin Dunglas <dunglas@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$output"],"optionals":["$verbosityLevelMap","$formatLevelMap"],"docParameters":{"$output":{"type":"OutputInterface","description":null},"$verbosityLevelMap":{"type":"array","description":null},"$formatLevelMap":{"type":"array","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Output\\BufferedOutput":{"class":{"descriptions":{"short":"@author Jean-Fran\u00e7ois Simon <contact@jfsimon.fr>","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$verbosity","$decorated","$formatter"],"docParameters":{"$verbosity":{"type":"int","description":"The verbosity level (one of the VERBOSITY constants in OutputInterface)"},"$decorated":{"type":"bool","description":"Whether to decorate messages"},"$formatter":{"type":"OutputFormatterInterface|null","description":"Output formatter instance (null to use default OutputFormatter)"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Output\\ConsoleOutput":{"class":{"descriptions":{"short":"ConsoleOutput is the default class for all CLI output. It uses STDOUT.","long":"This class is a convenient wrapper around `StreamOutput`.\n\n$output = new ConsoleOutput();\n\nThis is equivalent to:\n\n$output = new StreamOutput(fopen('php:\/\/stdout', 'w'));\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$verbosity","$decorated","$formatter"],"docParameters":{"$verbosity":{"type":"int","description":"The verbosity level (one of the VERBOSITY constants in OutputInterface)"},"$decorated":{"type":"bool|null","description":"Whether to decorate messages (null for auto-guessing)"},"$formatter":{"type":"OutputFormatterInterface|null","description":"Output formatter instance (null to use default OutputFormatter)"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Output\\ConsoleOutputInterface":{"class":{"descriptions":{"short":"ConsoleOutputInterface is the interface implemented by ConsoleOutput class.\nThis adds information about stderr output stream.","long":"@author Dariusz G\u00f3recki <darek.krk@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Output\\NullOutput":{"class":{"descriptions":{"short":"NullOutput suppresses all output.","long":"$output = new NullOutput();\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Output\\Output":{"class":{"descriptions":{"short":"Base class for output classes.","long":"There are five levels of verbosity:\n\n* normal: no option passed (normal output)\n* verbose: -v (more output)\n* very verbose: -vv (highly extended output)\n* debug: -vvv (all debug output)\n* quiet: -q (no output)\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$verbosity","$decorated","$formatter"],"docParameters":{"$verbosity":{"type":"int","description":"The verbosity level (one of the VERBOSITY constants in OutputInterface)"},"$decorated":{"type":"bool","description":"Whether to decorate messages"},"$formatter":{"type":"OutputFormatterInterface|null","description":"Output formatter instance (null to use default OutputFormatter)"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Output\\OutputInterface":{"class":{"descriptions":{"short":"OutputInterface is the interface implemented by all Output classes.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Output\\StreamOutput":{"class":{"descriptions":{"short":"StreamOutput writes the output to a given stream.","long":"Usage:\n\n$output = new StreamOutput(fopen('php:\/\/stdout', 'w'));\n\nAs `StreamOutput` can use any stream, you can also use a file:\n\n$output = new StreamOutput(fopen('\/path\/to\/output.log', 'a', false));\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$stream"],"optionals":["$verbosity","$decorated","$formatter"],"docParameters":{"$stream":{"type":"resource","description":"A stream resource"},"$verbosity":{"type":"int","description":"The verbosity level (one of the VERBOSITY constants in OutputInterface)"},"$decorated":{"type":"bool|null","description":"Whether to decorate messages (null for auto-guessing)"},"$formatter":{"type":"OutputFormatterInterface|null","description":"Output formatter instance (null to use default OutputFormatter)"}},"throws":{"InvalidArgumentException":"When first argument is not a real stream"},"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Question\\ChoiceQuestion":{"class":{"descriptions":{"short":"Represents a choice question.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$question","$choices"],"optionals":["$default"],"docParameters":{"$question":{"type":"string","description":"The question to ask to the user"},"$choices":{"type":"array","description":"The list of available choices"},"$default":{"type":"mixed","description":"The default answer to return"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Question\\ConfirmationQuestion":{"class":{"descriptions":{"short":"Represents a yes\/no question.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$question"],"optionals":["$default","$trueAnswerRegex"],"docParameters":{"$question":{"type":"string","description":"The question to ask to the user"},"$default":{"type":"bool","description":"The default answer to return, true or false"},"$trueAnswerRegex":{"type":"string","description":"A regex to match the \"yes\" answer"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Question\\Question":{"class":{"descriptions":{"short":"Represents a Question.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$question"],"optionals":["$default"],"docParameters":{"$question":{"type":"string","description":"The question to ask to the user"},"$default":{"type":"mixed","description":"The default answer to return if the user enters nothing"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Shell":{"class":{"descriptions":{"short":"A Shell wraps an Application to add shell capabilities to it.","long":"Support for history and completion only works with a PHP compiled\nwith readline support (either --with-readline or --with-libedit)"},"deprecated":true},"methods":{"constructor":{"has":true,"args":{"parameters":["$application"],"optionals":[],"docParameters":{"$application":{"type":"Application","description":"An application instance"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":"If there is no readline support for the current PHP executable\na \\RuntimeException exception is thrown."},"deprecated":false}}}},"Symfony\\Component\\Console\\Style\\OutputStyle":{"class":{"descriptions":{"short":"Decorates output to add console style guide helpers.","long":"@author Kevin Bond <kevinbond@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$output"],"optionals":[],"docParameters":{"$output":{"type":"OutputInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Style\\StyleInterface":{"class":{"descriptions":{"short":"Output style helpers.","long":"@author Kevin Bond <kevinbond@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Console\\Style\\SymfonyStyle":{"class":{"descriptions":{"short":"Output decorator helpers for the Symfony Style Guide.","long":"@author Kevin Bond <kevinbond@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$input","$output"],"optionals":[],"docParameters":{"$input":{"type":"InputInterface","description":null},"$output":{"type":"OutputInterface","description":null}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Tester\\ApplicationTester":{"class":{"descriptions":{"short":"Eases the testing of console applications.","long":"When testing an application, don't forget to disable the auto exit flag:\n\n$application = new Application();\n$application->setAutoExit(false);\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$application"],"optionals":[],"docParameters":{"$application":{"type":"Application","description":"An Application instance to test"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Console\\Tester\\CommandTester":{"class":{"descriptions":{"short":"Eases the testing of console commands.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$command"],"optionals":[],"docParameters":{"$command":{"type":"Command","description":"A Command instance to test"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\BufferingLogger":{"class":{"descriptions":{"short":"A buffering logger that stacks logs for later.","long":"@author Nicolas Grekas <p@tchwork.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Debug\\Debug":{"class":{"descriptions":{"short":"Registers all the debug tools.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Debug\\DebugClassLoader":{"class":{"descriptions":{"short":"Autoloader checking if the class is really defined in the file found.","long":"The ClassLoader will wrap all registered autoloaders\nand will throw an exception if a file is found but does\nnot declare the class.\n\n@author Fabien Potencier <fabien@symfony.com>\n@author Christophe Coevoet <stof@notk.org>\n@author Nicolas Grekas <p@tchwork.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$classLoader"],"optionals":[],"docParameters":{"$classLoader":{"type":"callable","description":"A class loader"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\ErrorHandler":{"class":{"descriptions":{"short":"A generic ErrorHandler for the PHP engine.","long":"Provides five bit fields that control how errors are handled:\n- thrownErrors: errors thrown as \\ErrorException\n- loggedErrors: logged errors, when not @-silenced\n- scopedErrors: errors thrown or logged with their local context\n- tracedErrors: errors logged with their stack trace, only once for repeated errors\n- screamedErrors: never @-silenced errors\n\nEach error level can be logged by a dedicated PSR-3 logger object.\nScreaming only applies to logging.\nThrowing takes precedence over logging.\nUncaught exceptions are logged as E_ERROR.\nE_DEPRECATED and E_USER_DEPRECATED levels never throw.\nE_RECOVERABLE_ERROR and E_USER_ERROR levels always throw.\nNon catchable errors that can be detected at shutdown time are logged when the scream bit field allows so.\nAs errors have a performance cost, repeated errors are all logged, so that the developer\ncan see them and weight them as more important to fix than others of the same level.\n\n@author Nicolas Grekas <p@tchwork.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$bootstrappingLogger"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\ExceptionHandler":{"class":{"descriptions":{"short":"ExceptionHandler converts an exception to a Response object.","long":"It is mostly useful in debug mode to replace the default PHP\/XDebug\noutput with something prettier and more useful.\n\nAs this class is mainly used during Kernel boot, where nothing is yet\navailable, the Response content is always HTML.\n\n@author Fabien Potencier <fabien@symfony.com>\n@author Nicolas Grekas <p@tchwork.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$debug","$charset","$fileLinkFormat"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\Exception\\ClassNotFoundException":{"class":{"descriptions":{"short":"Class (or Trait or Interface) Not Found Exception.","long":"@author Konstanton Myakshin <koc-dp@yandex.ru>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$previous"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\Exception\\ContextErrorException":{"class":{"descriptions":{"short":"Error Exception with Variable Context.","long":"@author Christian Sciberras <uuf6429@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$severity","$filename","$lineno"],"optionals":["$context"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\Exception\\FatalErrorException":{"class":{"descriptions":{"short":"Fatal Error Exception.","long":"@author Konstanton Myakshin <koc-dp@yandex.ru>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$severity","$filename","$lineno"],"optionals":["$traceOffset","$traceArgs","$trace"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\Exception\\FatalThrowableError":{"class":{"descriptions":{"short":"Fatal Throwable Error.","long":"@author Nicolas Grekas <p@tchwork.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$e"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\Exception\\FlattenException":{"class":{"descriptions":{"short":"FlattenException wraps a PHP Exception to be able to serialize it.","long":"Basically, this class removes all objects from the trace.\n\n@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Debug\\Exception\\OutOfMemoryException":{"class":{"descriptions":{"short":"Out of memory exception.","long":"@author Nicolas Grekas <p@tchwork.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$code","$severity","$filename","$lineno"],"optionals":["$traceOffset","$traceArgs","$trace"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\Exception\\UndefinedFunctionException":{"class":{"descriptions":{"short":"Undefined Function Exception.","long":"@author Konstanton Myakshin <koc-dp@yandex.ru>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$previous"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\Exception\\UndefinedMethodException":{"class":{"descriptions":{"short":"Undefined Method Exception.","long":"@author Gr\u00e9goire Pineau <lyrixx@lyrixx.info>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message","$previous"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Debug\\FatalErrorHandler\\ClassNotFoundFatalErrorHandler":{"class":{"descriptions":{"short":"ErrorHandler for classes that do not exist.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Debug\\FatalErrorHandler\\FatalErrorHandlerInterface":{"class":{"descriptions":{"short":"Attempts to convert fatal errors to exceptions.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Debug\\FatalErrorHandler\\UndefinedFunctionFatalErrorHandler":{"class":{"descriptions":{"short":"ErrorHandler for undefined functions.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Debug\\FatalErrorHandler\\UndefinedMethodFatalErrorHandler":{"class":{"descriptions":{"short":"ErrorHandler for undefined methods.","long":"@author Gr\u00e9goire Pineau <lyrixx@lyrixx.info>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Yaml\\Dumper":{"class":{"descriptions":{"short":"Dumper dumps PHP variables to YAML strings.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Yaml\\Escaper":{"class":{"descriptions":{"short":"Escaper encapsulates escaping rules for single and double-quoted\nYAML strings.","long":"@author Matthew Lewinski <matthew@lewinski.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Yaml\\Exception\\DumpException":{"class":{"descriptions":{"short":"Exception class thrown when an error occurs during dumping.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Exception\\ExceptionInterface":{"class":{"descriptions":{"short":"Exception interface for all exceptions thrown by the component.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Yaml\\Exception\\ParseException":{"class":{"descriptions":{"short":"Exception class thrown when an error occurs during parsing.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$message"],"optionals":["$parsedLine","$snippet","$parsedFile","$previous"],"docParameters":{"$message":{"type":"string","description":"The error message"},"$parsedLine":{"type":"int","description":"The line where the error occurred"},"$snippet":{"type":"int","description":"The snippet of code near the problem"},"$parsedFile":{"type":"string","description":"The file name where the error occurred"},"$previous":{"type":"\\Exception","description":"The previous exception"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Exception\\RuntimeException":{"class":{"descriptions":{"short":"Exception class thrown when an error occurs during parsing.","long":"@author Romain Neutron <imprec@gmail.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Inline":{"class":{"descriptions":{"short":"Inline implements a YAML parser\/dumper for the YAML inline syntax.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Yaml\\Parser":{"class":{"descriptions":{"short":"Parser parses YAML strings to convert them to PHP arrays.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$offset","$totalNumberOfLines","$skippedLineNumbers"],"docParameters":{"$offset":{"type":"int","description":"The offset of YAML document (used for line numbers in error messages)"},"$totalNumberOfLines":{"type":"int|null","description":"The overall number of lines being parsed"},"$skippedLineNumbers":{"type":"int[]","description":"Number of comment lines that have been skipped by the parser"}},"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"Constructor.","long":""},"deprecated":false}}}},"Symfony\\Component\\Yaml\\Unescaper":{"class":{"descriptions":{"short":"Unescaper encapsulates unescaping rules for single and double-quoted\nYAML strings.","long":"@author Matthew Lewinski <matthew@lewinski.org>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Component\\Yaml\\Yaml":{"class":{"descriptions":{"short":"Yaml offers convenience methods to load and dump YAML.","long":"@author Fabien Potencier <fabien@symfony.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Symfony\\Polyfill\\Mbstring\\Mbstring":{"class":{"descriptions":{"short":"Partial mbstring implementation in PHP, iconv based, UTF-8 centric.","long":"Implemented:\n- mb_chr                  - Returns a specific character from its Unicode code point\n- mb_convert_encoding     - Convert character encoding\n- mb_convert_variables    - Convert character code in variable(s)\n- mb_decode_mimeheader    - Decode string in MIME header field\n- mb_encode_mimeheader    - Encode string for MIME header XXX NATIVE IMPLEMENTATION IS REALLY BUGGED\n- mb_convert_case         - Perform case folding on a string\n- mb_get_info             - Get internal settings of mbstring\n- mb_http_input           - Detect HTTP input character encoding\n- mb_http_output          - Set\/Get HTTP output character encoding\n- mb_internal_encoding    - Set\/Get internal character encoding\n- mb_list_encodings       - Returns an array of all supported encodings\n- mb_ord                  - Returns the Unicode code point of a character\n- mb_output_handler       - Callback function converts character encoding in output buffer\n- mb_scrub                - Replaces ill-formed byte sequences with substitute characters\n- mb_strlen               - Get string length\n- mb_strpos               - Find position of first occurrence of string in a string\n- mb_strrpos              - Find position of last occurrence of a string in a string\n- mb_strtolower           - Make a string lowercase\n- mb_strtoupper           - Make a string uppercase\n- mb_substitute_character - Set\/Get substitution character\n- mb_substr               - Get part of string\n- mb_stripos              - Finds position of first occurrence of a string within another, case insensitive\n- mb_stristr              - Finds first occurrence of a string within another, case insensitive\n- mb_strrchr              - Finds the last occurrence of a character in a string within another\n- mb_strrichr             - Finds the last occurrence of a character in a string within another, case insensitive\n- mb_strripos             - Finds position of last occurrence of a string within another, case insensitive\n- mb_strstr               - Finds first occurrence of a string within anothers\n- mb_strwidth             - Return width of string\n- mb_substr_count         - Count the number of substring occurrences\n\nNot implemented:\n- mb_convert_kana         - Convert \"kana\" one from another (\"zen-kaku\", \"han-kaku\" and more)\n- mb_decode_numericentity - Decode HTML numeric string reference to character\n- mb_encode_numericentity - Encode character to HTML numeric string reference\n- mb_ereg_*               - Regular expression with multibyte support\n- mb_parse_str            - Parse GET\/POST\/COOKIE data and set global variable\n- mb_preferred_mime_name  - Get MIME charset string\n- mb_regex_encoding       - Returns current encoding for multibyte regex as string\n- mb_regex_set_options    - Set\/Get the default options for mbregex functions\n- mb_send_mail            - Send encoded mail\n- mb_split                - Split multibyte string using regular expression\n- mb_strcut               - Get part of string\n- mb_strimwidth           - Get truncated string with specified width\n\n@author Nicolas Grekas <p@tchwork.com>"},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"User":{"class":{"descriptions":{"short":"@Entity @Table(name=\"users\")","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"stdClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ErrorException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$severity","$filename","$lineno","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Closure":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Generator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DateTime":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$object"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateTimeImmutable":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$time","$object"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateTimeZone":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$timezone"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DateInterval":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$interval_spec"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DatePeriod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$start","$interval","$end"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LibXMLError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SQLite3":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename","$flags","$encryption_key"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SQLite3Stmt":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$sqlite3"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SQLite3Result":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CURLFile":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$mimetype","$postname"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMStringList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNameList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementationList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementationSource":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMImplementation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNameSpaceNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMDocumentFragment":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMDocument":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$version","$encoding"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMNodeList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNamedNodeMap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMCharacterData":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMAttr":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value","$uri"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMText":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMComment":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMTypeinfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMUserDataHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMDomError":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMErrorHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMLocator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMConfiguration":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMCdataSection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$value"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMDocumentType":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMNotation":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMEntity":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMEntityReference":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMProcessingInstruction":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":["$value"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DOMStringExtend":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"DOMXPath":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$doc"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"finfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$options","$arg"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LogicException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"BadFunctionCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"BadMethodCallException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DomainException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"InvalidArgumentException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LengthException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OutOfRangeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RuntimeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OutOfBoundsException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"OverflowException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RangeException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"UnderflowException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"UnexpectedValueException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveIteratorIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$mode","$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"IteratorIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CallbackFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$callback"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveCallbackFilterIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$callback"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ParentIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"LimitIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$offset","$count"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"CachingIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveCachingIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"NoRewindIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"AppendIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"InfiniteIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RegexIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$regex"],"optionals":["$mode","$flags","$preg_flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveRegexIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator","$regex"],"optionals":["$mode","$flags","$preg_flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"EmptyIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"RecursiveTreeIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$iterator"],"optionals":["$flags","$caching_it_flags","$mode"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArrayObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ArrayIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveArrayIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$array"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplFileInfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file_name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"DirectoryIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"FilesystemIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"RecursiveDirectoryIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"GlobIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$path"],"optionals":["$flags"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplFileObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$file_name"],"optionals":["$open_mode","$use_include_path","$context"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplTempFileObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$max_memory"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplDoublyLinkedList":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplQueue":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplStack":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplMinHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplMaxHeap":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplPriorityQueue":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"SplFixedArray":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$size"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SplObjectStorage":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"MultipleIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$flags"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SessionHandler":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"__PHP_Incomplete_Class":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"php_user_filter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"Directory":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"mysqli_sql_exception":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_driver":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"mysqli":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$host","$user","$password","$database","$port","$socket"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_warning":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_result":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"mysqli_stmt":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDOException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDO":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$dsn"],"optionals":["$username","$passwd","$options"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PDOStatement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PDORow":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"PharException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Phar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$flags","$alias","$fileformat"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PharData":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":["$flags","$alias","$fileformat"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"PharFileInfo":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$filename"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"Reflection":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionFunctionAbstract":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ReflectionFunction":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionParameter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$function","$parameter"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionMethod":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class_or_method"],"optionals":["$name"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionClass":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argument"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionObject":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$argument"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionProperty":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$class","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionExtension":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"ReflectionZendExtension":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SimpleXMLElement":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":["$options","$data_is_url","$ns","$is_prefix"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SimpleXMLIterator":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data"],"optionals":["$options","$data_is_url","$ns","$is_prefix"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SNMP":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$version","$host","$community"],"optionals":["$timeout","$retries"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SNMPException":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":["$message","$code","$previous"],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapClient":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$wsdl"],"optionals":["$options"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapVar":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data","$encoding"],"optionals":["$type_name","$type_namespace","$node_name","$node_namespace"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapServer":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$wsdl"],"optionals":["$options"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapFault":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$faultcode","$faultstring"],"optionals":["$faultactor","$detail","$faultname","$headerfault"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapParam":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$data","$name"],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"SoapHeader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":["$namespace","$name"],"optionals":["$data","$mustunderstand","$actor"],"docParameters":[],"throws":[],"return":{"type":"void","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"tidy":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"tidyNode":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":true,"args":{"parameters":[],"optionals":[],"docParameters":[],"throws":[],"return":{"type":"self","description":null},"descriptions":{"short":"","long":""},"deprecated":false}}}},"XMLReader":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"XMLWriter":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"XSLTProcessor":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}},"ZipArchive":{"class":{"descriptions":{"short":"","long":""},"deprecated":false},"methods":{"constructor":{"has":false,"args":[]}}}},"autocomplete":["Bug","Doctrine\\Common\\Annotations\\Annotation","Doctrine\\Common\\Annotations\\AnnotationException","Doctrine\\Common\\Annotations\\AnnotationReader","Doctrine\\Common\\Annotations\\AnnotationRegistry","Doctrine\\Common\\Annotations\\Annotation\\Attribute","Doctrine\\Common\\Annotations\\Annotation\\Attributes","Doctrine\\Common\\Annotations\\Annotation\\Enum","Doctrine\\Common\\Annotations\\Annotation\\IgnoreAnnotation","Doctrine\\Common\\Annotations\\Annotation\\Required","Doctrine\\Common\\Annotations\\Annotation\\Target","Doctrine\\Common\\Annotations\\CachedReader","Doctrine\\Common\\Annotations\\DocLexer","Doctrine\\Common\\Annotations\\DocParser","Doctrine\\Common\\Annotations\\FileCacheReader","Doctrine\\Common\\Annotations\\IndexedReader","Doctrine\\Common\\Annotations\\PhpParser","Doctrine\\Common\\Annotations\\Reader","Doctrine\\Common\\Annotations\\SimpleAnnotationReader","Doctrine\\Common\\Annotations\\TokenParser","Doctrine\\Common\\Cache\\ApcCache","Doctrine\\Common\\Cache\\ApcuCache","Doctrine\\Common\\Cache\\ArrayCache","Doctrine\\Common\\Cache\\Cache","Doctrine\\Common\\Cache\\CacheProvider","Doctrine\\Common\\Cache\\ChainCache","Doctrine\\Common\\Cache\\ClearableCache","Doctrine\\Common\\Cache\\CouchbaseCache","Doctrine\\Common\\Cache\\FileCache","Doctrine\\Common\\Cache\\FilesystemCache","Doctrine\\Common\\Cache\\FlushableCache","Doctrine\\Common\\Cache\\MemcacheCache","Doctrine\\Common\\Cache\\MemcachedCache","Doctrine\\Common\\Cache\\MongoDBCache","Doctrine\\Common\\Cache\\MultiGetCache","Doctrine\\Common\\Cache\\MultiPutCache","Doctrine\\Common\\Cache\\PhpFileCache","Doctrine\\Common\\Cache\\PredisCache","Doctrine\\Common\\Cache\\RedisCache","Doctrine\\Common\\Cache\\RiakCache","Doctrine\\Common\\Cache\\SQLite3Cache","Doctrine\\Common\\Cache\\Version","Doctrine\\Common\\Cache\\VoidCache","Doctrine\\Common\\Cache\\WinCacheCache","Doctrine\\Common\\Cache\\XcacheCache","Doctrine\\Common\\Cache\\ZendDataCache","Doctrine\\Common\\ClassLoader","Doctrine\\Common\\Collections\\AbstractLazyCollection","Doctrine\\Common\\Collections\\ArrayCollection","Doctrine\\Common\\Collections\\Collection","Doctrine\\Common\\Collections\\Criteria","Doctrine\\Common\\Collections\\Expr\\ClosureExpressionVisitor","Doctrine\\Common\\Collections\\Expr\\Comparison","Doctrine\\Common\\Collections\\Expr\\CompositeExpression","Doctrine\\Common\\Collections\\Expr\\Expression","Doctrine\\Common\\Collections\\Expr\\ExpressionVisitor","Doctrine\\Common\\Collections\\Expr\\Value","Doctrine\\Common\\Collections\\ExpressionBuilder","Doctrine\\Common\\Collections\\Selectable","Doctrine\\Common\\CommonException","Doctrine\\Common\\Comparable","Doctrine\\Common\\EventArgs","Doctrine\\Common\\EventManager","Doctrine\\Common\\EventSubscriber","Doctrine\\Common\\Inflector\\Inflector","Doctrine\\Common\\Lexer","Doctrine\\Common\\Lexer\\AbstractLexer","Doctrine\\Common\\NotifyPropertyChanged","Doctrine\\Common\\Persistence\\AbstractManagerRegistry","Doctrine\\Common\\Persistence\\ConnectionRegistry","Doctrine\\Common\\Persistence\\Event\\LifecycleEventArgs","Doctrine\\Common\\Persistence\\Event\\LoadClassMetadataEventArgs","Doctrine\\Common\\Persistence\\Event\\ManagerEventArgs","Doctrine\\Common\\Persistence\\Event\\OnClearEventArgs","Doctrine\\Common\\Persistence\\Event\\PreUpdateEventArgs","Doctrine\\Common\\Persistence\\ManagerRegistry","Doctrine\\Common\\Persistence\\Mapping\\AbstractClassMetadataFactory","Doctrine\\Common\\Persistence\\Mapping\\ClassMetadata","Doctrine\\Common\\Persistence\\Mapping\\ClassMetadataFactory","Doctrine\\Common\\Persistence\\Mapping\\Driver\\AnnotationDriver","Doctrine\\Common\\Persistence\\Mapping\\Driver\\DefaultFileLocator","Doctrine\\Common\\Persistence\\Mapping\\Driver\\FileDriver","Doctrine\\Common\\Persistence\\Mapping\\Driver\\FileLocator","Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriver","Doctrine\\Common\\Persistence\\Mapping\\Driver\\MappingDriverChain","Doctrine\\Common\\Persistence\\Mapping\\Driver\\PHPDriver","Doctrine\\Common\\Persistence\\Mapping\\Driver\\StaticPHPDriver","Doctrine\\Common\\Persistence\\Mapping\\Driver\\SymfonyFileLocator","Doctrine\\Common\\Persistence\\Mapping\\MappingException","Doctrine\\Common\\Persistence\\Mapping\\ReflectionService","Doctrine\\Common\\Persistence\\Mapping\\RuntimeReflectionService","Doctrine\\Common\\Persistence\\Mapping\\StaticReflectionService","Doctrine\\Common\\Persistence\\ObjectManager","Doctrine\\Common\\Persistence\\ObjectManagerAware","Doctrine\\Common\\Persistence\\ObjectManagerDecorator","Doctrine\\Common\\Persistence\\ObjectRepository","Doctrine\\Common\\Persistence\\PersistentObject","Doctrine\\Common\\Persistence\\Proxy","Doctrine\\Common\\PropertyChangedListener","Doctrine\\Common\\Proxy\\AbstractProxyFactory","Doctrine\\Common\\Proxy\\Autoloader","Doctrine\\Common\\Proxy\\Exception\\InvalidArgumentException","Doctrine\\Common\\Proxy\\Exception\\OutOfBoundsException","Doctrine\\Common\\Proxy\\Exception\\ProxyException","Doctrine\\Common\\Proxy\\Exception\\UnexpectedValueException","Doctrine\\Common\\Proxy\\Proxy","Doctrine\\Common\\Proxy\\ProxyDefinition","Doctrine\\Common\\Proxy\\ProxyGenerator","Doctrine\\Common\\Reflection\\ClassFinderInterface","Doctrine\\Common\\Reflection\\Psr0FindFile","Doctrine\\Common\\Reflection\\ReflectionProviderInterface","Doctrine\\Common\\Reflection\\RuntimePublicReflectionProperty","Doctrine\\Common\\Reflection\\StaticReflectionClass","Doctrine\\Common\\Reflection\\StaticReflectionMethod","Doctrine\\Common\\Reflection\\StaticReflectionParser","Doctrine\\Common\\Reflection\\StaticReflectionProperty","Doctrine\\Common\\Util\\ClassUtils","Doctrine\\Common\\Util\\Debug","Doctrine\\Common\\Util\\Inflector","Doctrine\\Common\\Version","Doctrine\\DBAL\\Cache\\ArrayStatement","Doctrine\\DBAL\\Cache\\CacheException","Doctrine\\DBAL\\Cache\\QueryCacheProfile","Doctrine\\DBAL\\Cache\\ResultCacheStatement","Doctrine\\DBAL\\Configuration","Doctrine\\DBAL\\Connection","Doctrine\\DBAL\\ConnectionException","Doctrine\\DBAL\\Connections\\MasterSlaveConnection","Doctrine\\DBAL\\DBALException","Doctrine\\DBAL\\Driver","Doctrine\\DBAL\\DriverManager","Doctrine\\DBAL\\Driver\\AbstractDB2Driver","Doctrine\\DBAL\\Driver\\AbstractDriverException","Doctrine\\DBAL\\Driver\\AbstractMySQLDriver","Doctrine\\DBAL\\Driver\\AbstractOracleDriver","Doctrine\\DBAL\\Driver\\AbstractPostgreSQLDriver","Doctrine\\DBAL\\Driver\\AbstractSQLAnywhereDriver","Doctrine\\DBAL\\Driver\\AbstractSQLServerDriver","Doctrine\\DBAL\\Driver\\AbstractSQLiteDriver","Doctrine\\DBAL\\Driver\\Connection","Doctrine\\DBAL\\Driver\\DriverException","Doctrine\\DBAL\\Driver\\DrizzlePDOMySql\\Connection","Doctrine\\DBAL\\Driver\\DrizzlePDOMySql\\Driver","Doctrine\\DBAL\\Driver\\ExceptionConverterDriver","Doctrine\\DBAL\\Driver\\IBMDB2\\DB2Connection","Doctrine\\DBAL\\Driver\\IBMDB2\\DB2Driver","Doctrine\\DBAL\\Driver\\IBMDB2\\DB2Exception","Doctrine\\DBAL\\Driver\\IBMDB2\\DB2Statement","Doctrine\\DBAL\\Driver\\Mysqli\\Driver","Doctrine\\DBAL\\Driver\\Mysqli\\MysqliConnection","Doctrine\\DBAL\\Driver\\Mysqli\\MysqliException","Doctrine\\DBAL\\Driver\\Mysqli\\MysqliStatement","Doctrine\\DBAL\\Driver\\OCI8\\Driver","Doctrine\\DBAL\\Driver\\OCI8\\OCI8Connection","Doctrine\\DBAL\\Driver\\OCI8\\OCI8Exception","Doctrine\\DBAL\\Driver\\OCI8\\OCI8Statement","Doctrine\\DBAL\\Driver\\PDOConnection","Doctrine\\DBAL\\Driver\\PDOException","Doctrine\\DBAL\\Driver\\PDOIbm\\Driver","Doctrine\\DBAL\\Driver\\PDOMySql\\Driver","Doctrine\\DBAL\\Driver\\PDOOracle\\Driver","Doctrine\\DBAL\\Driver\\PDOPgSql\\Driver","Doctrine\\DBAL\\Driver\\PDOSqlite\\Driver","Doctrine\\DBAL\\Driver\\PDOSqlsrv\\Connection","Doctrine\\DBAL\\Driver\\PDOSqlsrv\\Driver","Doctrine\\DBAL\\Driver\\PDOSqlsrv\\Statement","Doctrine\\DBAL\\Driver\\PDOStatement","Doctrine\\DBAL\\Driver\\PingableConnection","Doctrine\\DBAL\\Driver\\ResultStatement","Doctrine\\DBAL\\Driver\\SQLAnywhere\\Driver","Doctrine\\DBAL\\Driver\\SQLAnywhere\\SQLAnywhereConnection","Doctrine\\DBAL\\Driver\\SQLAnywhere\\SQLAnywhereException","Doctrine\\DBAL\\Driver\\SQLAnywhere\\SQLAnywhereStatement","Doctrine\\DBAL\\Driver\\SQLSrv\\Driver","Doctrine\\DBAL\\Driver\\SQLSrv\\LastInsertId","Doctrine\\DBAL\\Driver\\SQLSrv\\SQLSrvConnection","Doctrine\\DBAL\\Driver\\SQLSrv\\SQLSrvException","Doctrine\\DBAL\\Driver\\SQLSrv\\SQLSrvStatement","Doctrine\\DBAL\\Driver\\ServerInfoAwareConnection","Doctrine\\DBAL\\Driver\\Statement","Doctrine\\DBAL\\Event\\ConnectionEventArgs","Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit","Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit","Doctrine\\DBAL\\Event\\Listeners\\SQLSessionInit","Doctrine\\DBAL\\Event\\SchemaAlterTableAddColumnEventArgs","Doctrine\\DBAL\\Event\\SchemaAlterTableChangeColumnEventArgs","Doctrine\\DBAL\\Event\\SchemaAlterTableEventArgs","Doctrine\\DBAL\\Event\\SchemaAlterTableRemoveColumnEventArgs","Doctrine\\DBAL\\Event\\SchemaAlterTableRenameColumnEventArgs","Doctrine\\DBAL\\Event\\SchemaColumnDefinitionEventArgs","Doctrine\\DBAL\\Event\\SchemaCreateTableColumnEventArgs","Doctrine\\DBAL\\Event\\SchemaCreateTableEventArgs","Doctrine\\DBAL\\Event\\SchemaDropTableEventArgs","Doctrine\\DBAL\\Event\\SchemaEventArgs","Doctrine\\DBAL\\Event\\SchemaIndexDefinitionEventArgs","Doctrine\\DBAL\\Events","Doctrine\\DBAL\\Exception\\ConnectionException","Doctrine\\DBAL\\Exception\\ConstraintViolationException","Doctrine\\DBAL\\Exception\\DatabaseObjectExistsException","Doctrine\\DBAL\\Exception\\DatabaseObjectNotFoundException","Doctrine\\DBAL\\Exception\\DriverException","Doctrine\\DBAL\\Exception\\ForeignKeyConstraintViolationException","Doctrine\\DBAL\\Exception\\InvalidArgumentException","Doctrine\\DBAL\\Exception\\InvalidFieldNameException","Doctrine\\DBAL\\Exception\\NonUniqueFieldNameException","Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException","Doctrine\\DBAL\\Exception\\ReadOnlyException","Doctrine\\DBAL\\Exception\\ServerException","Doctrine\\DBAL\\Exception\\SyntaxErrorException","Doctrine\\DBAL\\Exception\\TableExistsException","Doctrine\\DBAL\\Exception\\TableNotFoundException","Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException","Doctrine\\DBAL\\Id\\TableGenerator","Doctrine\\DBAL\\Id\\TableGeneratorSchemaVisitor","Doctrine\\DBAL\\LockMode","Doctrine\\DBAL\\Logging\\DebugStack","Doctrine\\DBAL\\Logging\\EchoSQLLogger","Doctrine\\DBAL\\Logging\\LoggerChain","Doctrine\\DBAL\\Logging\\SQLLogger","Doctrine\\DBAL\\Platforms\\AbstractPlatform","Doctrine\\DBAL\\Platforms\\DB2Platform","Doctrine\\DBAL\\Platforms\\DrizzlePlatform","Doctrine\\DBAL\\Platforms\\Keywords\\DB2Keywords","Doctrine\\DBAL\\Platforms\\Keywords\\DrizzleKeywords","Doctrine\\DBAL\\Platforms\\Keywords\\KeywordList","Doctrine\\DBAL\\Platforms\\Keywords\\MsSQLKeywords","Doctrine\\DBAL\\Platforms\\Keywords\\MySQL57Keywords","Doctrine\\DBAL\\Platforms\\Keywords\\MySQLKeywords","Doctrine\\DBAL\\Platforms\\Keywords\\OracleKeywords","Doctrine\\DBAL\\Platforms\\Keywords\\PostgreSQL91Keywords","Doctrine\\DBAL\\Platforms\\Keywords\\PostgreSQL92Keywords","Doctrine\\DBAL\\Platforms\\Keywords\\PostgreSQLKeywords","Doctrine\\DBAL\\Platforms\\Keywords\\ReservedKeywordsValidator","Doctrine\\DBAL\\Platforms\\Keywords\\SQLAnywhere11Keywords","Doctrine\\DBAL\\Platforms\\Keywords\\SQLAnywhere12Keywords","Doctrine\\DBAL\\Platforms\\Keywords\\SQLAnywhere16Keywords","Doctrine\\DBAL\\Platforms\\Keywords\\SQLAnywhereKeywords","Doctrine\\DBAL\\Platforms\\Keywords\\SQLServer2005Keywords","Doctrine\\DBAL\\Platforms\\Keywords\\SQLServer2008Keywords","Doctrine\\DBAL\\Platforms\\Keywords\\SQLServer2012Keywords","Doctrine\\DBAL\\Platforms\\Keywords\\SQLServerKeywords","Doctrine\\DBAL\\Platforms\\Keywords\\SQLiteKeywords","Doctrine\\DBAL\\Platforms\\MySQL57Platform","Doctrine\\DBAL\\Platforms\\MySqlPlatform","Doctrine\\DBAL\\Platforms\\OraclePlatform","Doctrine\\DBAL\\Platforms\\PostgreSQL91Platform","Doctrine\\DBAL\\Platforms\\PostgreSQL92Platform","Doctrine\\DBAL\\Platforms\\PostgreSqlPlatform","Doctrine\\DBAL\\Platforms\\SQLAnywhere11Platform","Doctrine\\DBAL\\Platforms\\SQLAnywhere12Platform","Doctrine\\DBAL\\Platforms\\SQLAnywhere16Platform","Doctrine\\DBAL\\Platforms\\SQLAnywherePlatform","Doctrine\\DBAL\\Platforms\\SQLAzurePlatform","Doctrine\\DBAL\\Platforms\\SQLServer2005Platform","Doctrine\\DBAL\\Platforms\\SQLServer2008Platform","Doctrine\\DBAL\\Platforms\\SQLServer2012Platform","Doctrine\\DBAL\\Platforms\\SQLServerPlatform","Doctrine\\DBAL\\Platforms\\SqlitePlatform","Doctrine\\DBAL\\Portability\\Connection","Doctrine\\DBAL\\Portability\\Statement","Doctrine\\DBAL\\Query\\Expression\\CompositeExpression","Doctrine\\DBAL\\Query\\Expression\\ExpressionBuilder","Doctrine\\DBAL\\Query\\QueryBuilder","Doctrine\\DBAL\\Query\\QueryException","Doctrine\\DBAL\\SQLParserUtils","Doctrine\\DBAL\\SQLParserUtilsException","Doctrine\\DBAL\\Schema\\AbstractAsset","Doctrine\\DBAL\\Schema\\AbstractSchemaManager","Doctrine\\DBAL\\Schema\\Column","Doctrine\\DBAL\\Schema\\ColumnDiff","Doctrine\\DBAL\\Schema\\Comparator","Doctrine\\DBAL\\Schema\\Constraint","Doctrine\\DBAL\\Schema\\DB2SchemaManager","Doctrine\\DBAL\\Schema\\DrizzleSchemaManager","Doctrine\\DBAL\\Schema\\ForeignKeyConstraint","Doctrine\\DBAL\\Schema\\Identifier","Doctrine\\DBAL\\Schema\\Index","Doctrine\\DBAL\\Schema\\MySqlSchemaManager","Doctrine\\DBAL\\Schema\\OracleSchemaManager","Doctrine\\DBAL\\Schema\\PostgreSqlSchemaManager","Doctrine\\DBAL\\Schema\\SQLAnywhereSchemaManager","Doctrine\\DBAL\\Schema\\SQLServerSchemaManager","Doctrine\\DBAL\\Schema\\Schema","Doctrine\\DBAL\\Schema\\SchemaConfig","Doctrine\\DBAL\\Schema\\SchemaDiff","Doctrine\\DBAL\\Schema\\SchemaException","Doctrine\\DBAL\\Schema\\Sequence","Doctrine\\DBAL\\Schema\\SqliteSchemaManager","Doctrine\\DBAL\\Schema\\Synchronizer\\AbstractSchemaSynchronizer","Doctrine\\DBAL\\Schema\\Synchronizer\\SchemaSynchronizer","Doctrine\\DBAL\\Schema\\Synchronizer\\SingleDatabaseSynchronizer","Doctrine\\DBAL\\Schema\\Table","Doctrine\\DBAL\\Schema\\TableDiff","Doctrine\\DBAL\\Schema\\View","Doctrine\\DBAL\\Schema\\Visitor\\AbstractVisitor","Doctrine\\DBAL\\Schema\\Visitor\\CreateSchemaSqlCollector","Doctrine\\DBAL\\Schema\\Visitor\\DropSchemaSqlCollector","Doctrine\\DBAL\\Schema\\Visitor\\Graphviz","Doctrine\\DBAL\\Schema\\Visitor\\NamespaceVisitor","Doctrine\\DBAL\\Schema\\Visitor\\RemoveNamespacedAssets","Doctrine\\DBAL\\Schema\\Visitor\\SchemaDiffVisitor","Doctrine\\DBAL\\Schema\\Visitor\\Visitor","Doctrine\\DBAL\\Sharding\\PoolingShardConnection","Doctrine\\DBAL\\Sharding\\PoolingShardManager","Doctrine\\DBAL\\Sharding\\SQLAzure\\SQLAzureFederationsSynchronizer","Doctrine\\DBAL\\Sharding\\SQLAzure\\SQLAzureShardManager","Doctrine\\DBAL\\Sharding\\SQLAzure\\Schema\\MultiTenantVisitor","Doctrine\\DBAL\\Sharding\\ShardChoser\\MultiTenantShardChoser","Doctrine\\DBAL\\Sharding\\ShardChoser\\ShardChoser","Doctrine\\DBAL\\Sharding\\ShardManager","Doctrine\\DBAL\\Sharding\\ShardingException","Doctrine\\DBAL\\Statement","Doctrine\\DBAL\\Tools\\Console\\Command\\ImportCommand","Doctrine\\DBAL\\Tools\\Console\\Command\\ReservedWordsCommand","Doctrine\\DBAL\\Tools\\Console\\Command\\RunSqlCommand","Doctrine\\DBAL\\Tools\\Console\\ConsoleRunner","Doctrine\\DBAL\\Tools\\Console\\Helper\\ConnectionHelper","Doctrine\\DBAL\\Types\\ArrayType","Doctrine\\DBAL\\Types\\BigIntType","Doctrine\\DBAL\\Types\\BinaryType","Doctrine\\DBAL\\Types\\BlobType","Doctrine\\DBAL\\Types\\BooleanType","Doctrine\\DBAL\\Types\\ConversionException","Doctrine\\DBAL\\Types\\DateTimeType","Doctrine\\DBAL\\Types\\DateTimeTzType","Doctrine\\DBAL\\Types\\DateType","Doctrine\\DBAL\\Types\\DecimalType","Doctrine\\DBAL\\Types\\FloatType","Doctrine\\DBAL\\Types\\GuidType","Doctrine\\DBAL\\Types\\IntegerType","Doctrine\\DBAL\\Types\\JsonArrayType","Doctrine\\DBAL\\Types\\ObjectType","Doctrine\\DBAL\\Types\\SimpleArrayType","Doctrine\\DBAL\\Types\\SmallIntType","Doctrine\\DBAL\\Types\\StringType","Doctrine\\DBAL\\Types\\TextType","Doctrine\\DBAL\\Types\\TimeType","Doctrine\\DBAL\\Types\\Type","Doctrine\\DBAL\\Types\\VarDateTimeType","Doctrine\\DBAL\\Version","Doctrine\\DBAL\\VersionAwarePlatformDriver","Doctrine\\ORM\\AbstractQuery","Doctrine\\ORM\\Configuration","Doctrine\\ORM\\Decorator\\EntityManagerDecorator","Doctrine\\ORM\\EntityManager","Doctrine\\ORM\\EntityManagerInterface","Doctrine\\ORM\\EntityNotFoundException","Doctrine\\ORM\\EntityRepository","Doctrine\\ORM\\Event\\LifecycleEventArgs","Doctrine\\ORM\\Event\\ListenersInvoker","Doctrine\\ORM\\Event\\LoadClassMetadataEventArgs","Doctrine\\ORM\\Event\\OnClearEventArgs","Doctrine\\ORM\\Event\\OnFlushEventArgs","Doctrine\\ORM\\Event\\PostFlushEventArgs","Doctrine\\ORM\\Event\\PreFlushEventArgs","Doctrine\\ORM\\Event\\PreUpdateEventArgs","Doctrine\\ORM\\Events","Doctrine\\ORM\\Id\\AbstractIdGenerator","Doctrine\\ORM\\Id\\AssignedGenerator","Doctrine\\ORM\\Id\\BigIntegerIdentityGenerator","Doctrine\\ORM\\Id\\IdentityGenerator","Doctrine\\ORM\\Id\\SequenceGenerator","Doctrine\\ORM\\Id\\TableGenerator","Doctrine\\ORM\\Id\\UuidGenerator","Doctrine\\ORM\\Internal\\CommitOrderCalculator","Doctrine\\ORM\\Internal\\Hydration\\AbstractHydrator","Doctrine\\ORM\\Internal\\Hydration\\ArrayHydrator","Doctrine\\ORM\\Internal\\Hydration\\HydrationException","Doctrine\\ORM\\Internal\\Hydration\\IterableResult","Doctrine\\ORM\\Internal\\Hydration\\ObjectHydrator","Doctrine\\ORM\\Internal\\Hydration\\ScalarHydrator","Doctrine\\ORM\\Internal\\Hydration\\SimpleObjectHydrator","Doctrine\\ORM\\Internal\\Hydration\\SingleScalarHydrator","Doctrine\\ORM\\Mapping\\Annotation","Doctrine\\ORM\\Mapping\\AnsiQuoteStrategy","Doctrine\\ORM\\Mapping\\AssociationOverride","Doctrine\\ORM\\Mapping\\AssociationOverrides","Doctrine\\ORM\\Mapping\\AttributeOverride","Doctrine\\ORM\\Mapping\\AttributeOverrides","Doctrine\\ORM\\Mapping\\Builder\\AssociationBuilder","Doctrine\\ORM\\Mapping\\Builder\\ClassMetadataBuilder","Doctrine\\ORM\\Mapping\\Builder\\EntityListenerBuilder","Doctrine\\ORM\\Mapping\\Builder\\FieldBuilder","Doctrine\\ORM\\Mapping\\Builder\\ManyToManyAssociationBuilder","Doctrine\\ORM\\Mapping\\Builder\\OneToManyAssociationBuilder","Doctrine\\ORM\\Mapping\\ChangeTrackingPolicy","Doctrine\\ORM\\Mapping\\ClassMetadata","Doctrine\\ORM\\Mapping\\ClassMetadataFactory","Doctrine\\ORM\\Mapping\\ClassMetadataInfo","Doctrine\\ORM\\Mapping\\Column","Doctrine\\ORM\\Mapping\\ColumnResult","Doctrine\\ORM\\Mapping\\CustomIdGenerator","Doctrine\\ORM\\Mapping\\DefaultEntityListenerResolver","Doctrine\\ORM\\Mapping\\DefaultNamingStrategy","Doctrine\\ORM\\Mapping\\DefaultQuoteStrategy","Doctrine\\ORM\\Mapping\\DiscriminatorColumn","Doctrine\\ORM\\Mapping\\DiscriminatorMap","Doctrine\\ORM\\Mapping\\Driver\\AnnotationDriver","Doctrine\\ORM\\Mapping\\Driver\\DatabaseDriver","Doctrine\\ORM\\Mapping\\Driver\\DriverChain","Doctrine\\ORM\\Mapping\\Driver\\PHPDriver","Doctrine\\ORM\\Mapping\\Driver\\SimplifiedXmlDriver","Doctrine\\ORM\\Mapping\\Driver\\SimplifiedYamlDriver","Doctrine\\ORM\\Mapping\\Driver\\StaticPHPDriver","Doctrine\\ORM\\Mapping\\Driver\\XmlDriver","Doctrine\\ORM\\Mapping\\Driver\\YamlDriver","Doctrine\\ORM\\Mapping\\ElementCollection","Doctrine\\ORM\\Mapping\\Entity","Doctrine\\ORM\\Mapping\\EntityListenerResolver","Doctrine\\ORM\\Mapping\\EntityListeners","Doctrine\\ORM\\Mapping\\EntityResult","Doctrine\\ORM\\Mapping\\FieldResult","Doctrine\\ORM\\Mapping\\GeneratedValue","Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks","Doctrine\\ORM\\Mapping\\Id","Doctrine\\ORM\\Mapping\\Index","Doctrine\\ORM\\Mapping\\InheritanceType","Doctrine\\ORM\\Mapping\\JoinColumn","Doctrine\\ORM\\Mapping\\JoinColumns","Doctrine\\ORM\\Mapping\\JoinTable","Doctrine\\ORM\\Mapping\\ManyToMany","Doctrine\\ORM\\Mapping\\ManyToOne","Doctrine\\ORM\\Mapping\\MappedSuperclass","Doctrine\\ORM\\Mapping\\MappingException","Doctrine\\ORM\\Mapping\\NamedNativeQueries","Doctrine\\ORM\\Mapping\\NamedNativeQuery","Doctrine\\ORM\\Mapping\\NamedQueries","Doctrine\\ORM\\Mapping\\NamedQuery","Doctrine\\ORM\\Mapping\\NamingStrategy","Doctrine\\ORM\\Mapping\\OneToMany","Doctrine\\ORM\\Mapping\\OneToOne","Doctrine\\ORM\\Mapping\\OrderBy","Doctrine\\ORM\\Mapping\\PostLoad","Doctrine\\ORM\\Mapping\\PostPersist","Doctrine\\ORM\\Mapping\\PostRemove","Doctrine\\ORM\\Mapping\\PostUpdate","Doctrine\\ORM\\Mapping\\PreFlush","Doctrine\\ORM\\Mapping\\PrePersist","Doctrine\\ORM\\Mapping\\PreRemove","Doctrine\\ORM\\Mapping\\PreUpdate","Doctrine\\ORM\\Mapping\\QuoteStrategy","Doctrine\\ORM\\Mapping\\SequenceGenerator","Doctrine\\ORM\\Mapping\\SqlResultSetMapping","Doctrine\\ORM\\Mapping\\SqlResultSetMappings","Doctrine\\ORM\\Mapping\\Table","Doctrine\\ORM\\Mapping\\UnderscoreNamingStrategy","Doctrine\\ORM\\Mapping\\UniqueConstraint","Doctrine\\ORM\\Mapping\\Version","Doctrine\\ORM\\NativeQuery","Doctrine\\ORM\\NoResultException","Doctrine\\ORM\\NonUniqueResultException","Doctrine\\ORM\\ORMException","Doctrine\\ORM\\ORMInvalidArgumentException","Doctrine\\ORM\\OptimisticLockException","Doctrine\\ORM\\PersistentCollection","Doctrine\\ORM\\Persisters\\AbstractCollectionPersister","Doctrine\\ORM\\Persisters\\AbstractEntityInheritancePersister","Doctrine\\ORM\\Persisters\\BasicEntityPersister","Doctrine\\ORM\\Persisters\\ElementCollectionPersister","Doctrine\\ORM\\Persisters\\JoinedSubclassPersister","Doctrine\\ORM\\Persisters\\ManyToManyPersister","Doctrine\\ORM\\Persisters\\OneToManyPersister","Doctrine\\ORM\\Persisters\\PersisterException","Doctrine\\ORM\\Persisters\\SingleTablePersister","Doctrine\\ORM\\Persisters\\SqlExpressionVisitor","Doctrine\\ORM\\Persisters\\SqlValueVisitor","Doctrine\\ORM\\Persisters\\UnionSubclassPersister","Doctrine\\ORM\\PessimisticLockException","Doctrine\\ORM\\Proxy\\Autoloader","Doctrine\\ORM\\Proxy\\Proxy","Doctrine\\ORM\\Proxy\\ProxyFactory","Doctrine\\ORM\\Query","Doctrine\\ORM\\QueryBuilder","Doctrine\\ORM\\Query\\AST\\ASTException","Doctrine\\ORM\\Query\\AST\\AggregateExpression","Doctrine\\ORM\\Query\\AST\\ArithmeticExpression","Doctrine\\ORM\\Query\\AST\\ArithmeticFactor","Doctrine\\ORM\\Query\\AST\\ArithmeticTerm","Doctrine\\ORM\\Query\\AST\\BetweenExpression","Doctrine\\ORM\\Query\\AST\\CoalesceExpression","Doctrine\\ORM\\Query\\AST\\CollectionMemberExpression","Doctrine\\ORM\\Query\\AST\\ComparisonExpression","Doctrine\\ORM\\Query\\AST\\ConditionalExpression","Doctrine\\ORM\\Query\\AST\\ConditionalFactor","Doctrine\\ORM\\Query\\AST\\ConditionalPrimary","Doctrine\\ORM\\Query\\AST\\ConditionalTerm","Doctrine\\ORM\\Query\\AST\\DeleteClause","Doctrine\\ORM\\Query\\AST\\DeleteStatement","Doctrine\\ORM\\Query\\AST\\EmptyCollectionComparisonExpression","Doctrine\\ORM\\Query\\AST\\ExistsExpression","Doctrine\\ORM\\Query\\AST\\FromClause","Doctrine\\ORM\\Query\\AST\\Functions\\AbsFunction","Doctrine\\ORM\\Query\\AST\\Functions\\BitAndFunction","Doctrine\\ORM\\Query\\AST\\Functions\\BitOrFunction","Doctrine\\ORM\\Query\\AST\\Functions\\ConcatFunction","Doctrine\\ORM\\Query\\AST\\Functions\\CurrentDateFunction","Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimeFunction","Doctrine\\ORM\\Query\\AST\\Functions\\CurrentTimestampFunction","Doctrine\\ORM\\Query\\AST\\Functions\\DateAddFunction","Doctrine\\ORM\\Query\\AST\\Functions\\DateDiffFunction","Doctrine\\ORM\\Query\\AST\\Functions\\DateSubFunction","Doctrine\\ORM\\Query\\AST\\Functions\\FunctionNode","Doctrine\\ORM\\Query\\AST\\Functions\\IdentityFunction","Doctrine\\ORM\\Query\\AST\\Functions\\LengthFunction","Doctrine\\ORM\\Query\\AST\\Functions\\LocateFunction","Doctrine\\ORM\\Query\\AST\\Functions\\LowerFunction","Doctrine\\ORM\\Query\\AST\\Functions\\ModFunction","Doctrine\\ORM\\Query\\AST\\Functions\\SizeFunction","Doctrine\\ORM\\Query\\AST\\Functions\\SqrtFunction","Doctrine\\ORM\\Query\\AST\\Functions\\SubstringFunction","Doctrine\\ORM\\Query\\AST\\Functions\\TrimFunction","Doctrine\\ORM\\Query\\AST\\Functions\\UpperFunction","Doctrine\\ORM\\Query\\AST\\GeneralCaseExpression","Doctrine\\ORM\\Query\\AST\\GroupByClause","Doctrine\\ORM\\Query\\AST\\HavingClause","Doctrine\\ORM\\Query\\AST\\IdentificationVariableDeclaration","Doctrine\\ORM\\Query\\AST\\InExpression","Doctrine\\ORM\\Query\\AST\\IndexBy","Doctrine\\ORM\\Query\\AST\\InputParameter","Doctrine\\ORM\\Query\\AST\\InstanceOfExpression","Doctrine\\ORM\\Query\\AST\\Join","Doctrine\\ORM\\Query\\AST\\JoinAssociationDeclaration","Doctrine\\ORM\\Query\\AST\\JoinAssociationPathExpression","Doctrine\\ORM\\Query\\AST\\JoinClassPathExpression","Doctrine\\ORM\\Query\\AST\\LikeExpression","Doctrine\\ORM\\Query\\AST\\Literal","Doctrine\\ORM\\Query\\AST\\NewObjectExpression","Doctrine\\ORM\\Query\\AST\\Node","Doctrine\\ORM\\Query\\AST\\NullComparisonExpression","Doctrine\\ORM\\Query\\AST\\NullIfExpression","Doctrine\\ORM\\Query\\AST\\OrderByClause","Doctrine\\ORM\\Query\\AST\\OrderByItem","Doctrine\\ORM\\Query\\AST\\ParenthesisExpression","Doctrine\\ORM\\Query\\AST\\PartialObjectExpression","Doctrine\\ORM\\Query\\AST\\PathExpression","Doctrine\\ORM\\Query\\AST\\QuantifiedExpression","Doctrine\\ORM\\Query\\AST\\RangeVariableDeclaration","Doctrine\\ORM\\Query\\AST\\SelectClause","Doctrine\\ORM\\Query\\AST\\SelectExpression","Doctrine\\ORM\\Query\\AST\\SelectStatement","Doctrine\\ORM\\Query\\AST\\SimpleArithmeticExpression","Doctrine\\ORM\\Query\\AST\\SimpleCaseExpression","Doctrine\\ORM\\Query\\AST\\SimpleSelectClause","Doctrine\\ORM\\Query\\AST\\SimpleSelectExpression","Doctrine\\ORM\\Query\\AST\\SimpleWhenClause","Doctrine\\ORM\\Query\\AST\\Subselect","Doctrine\\ORM\\Query\\AST\\SubselectFromClause","Doctrine\\ORM\\Query\\AST\\UpdateClause","Doctrine\\ORM\\Query\\AST\\UpdateItem","Doctrine\\ORM\\Query\\AST\\UpdateStatement","Doctrine\\ORM\\Query\\AST\\WhenClause","Doctrine\\ORM\\Query\\AST\\WhereClause","Doctrine\\ORM\\Query\\Exec\\AbstractSqlExecutor","Doctrine\\ORM\\Query\\Exec\\MultiTableDeleteExecutor","Doctrine\\ORM\\Query\\Exec\\MultiTableUpdateExecutor","Doctrine\\ORM\\Query\\Exec\\SingleSelectExecutor","Doctrine\\ORM\\Query\\Exec\\SingleTableDeleteUpdateExecutor","Doctrine\\ORM\\Query\\Expr","Doctrine\\ORM\\Query\\Expr\\Andx","Doctrine\\ORM\\Query\\Expr\\Base","Doctrine\\ORM\\Query\\Expr\\Comparison","Doctrine\\ORM\\Query\\Expr\\Composite","Doctrine\\ORM\\Query\\Expr\\From","Doctrine\\ORM\\Query\\Expr\\Func","Doctrine\\ORM\\Query\\Expr\\GroupBy","Doctrine\\ORM\\Query\\Expr\\Join","Doctrine\\ORM\\Query\\Expr\\Literal","Doctrine\\ORM\\Query\\Expr\\Math","Doctrine\\ORM\\Query\\Expr\\OrderBy","Doctrine\\ORM\\Query\\Expr\\Orx","Doctrine\\ORM\\Query\\Expr\\Select","Doctrine\\ORM\\Query\\FilterCollection","Doctrine\\ORM\\Query\\Filter\\SQLFilter","Doctrine\\ORM\\Query\\Lexer","Doctrine\\ORM\\Query\\Parameter","Doctrine\\ORM\\Query\\ParameterTypeInferer","Doctrine\\ORM\\Query\\Parser","Doctrine\\ORM\\Query\\ParserResult","Doctrine\\ORM\\Query\\Printer","Doctrine\\ORM\\Query\\QueryException","Doctrine\\ORM\\Query\\QueryExpressionVisitor","Doctrine\\ORM\\Query\\ResultSetMapping","Doctrine\\ORM\\Query\\ResultSetMappingBuilder","Doctrine\\ORM\\Query\\SqlWalker","Doctrine\\ORM\\Query\\TreeWalker","Doctrine\\ORM\\Query\\TreeWalkerAdapter","Doctrine\\ORM\\Query\\TreeWalkerChain","Doctrine\\ORM\\Repository\\DefaultRepositoryFactory","Doctrine\\ORM\\Repository\\RepositoryFactory","Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\MetadataCommand","Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\QueryCommand","Doctrine\\ORM\\Tools\\Console\\Command\\ClearCache\\ResultCommand","Doctrine\\ORM\\Tools\\Console\\Command\\ConvertDoctrine1SchemaCommand","Doctrine\\ORM\\Tools\\Console\\Command\\ConvertMappingCommand","Doctrine\\ORM\\Tools\\Console\\Command\\EnsureProductionSettingsCommand","Doctrine\\ORM\\Tools\\Console\\Command\\GenerateEntitiesCommand","Doctrine\\ORM\\Tools\\Console\\Command\\GenerateProxiesCommand","Doctrine\\ORM\\Tools\\Console\\Command\\GenerateRepositoriesCommand","Doctrine\\ORM\\Tools\\Console\\Command\\InfoCommand","Doctrine\\ORM\\Tools\\Console\\Command\\RunDqlCommand","Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\AbstractCommand","Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\CreateCommand","Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\DropCommand","Doctrine\\ORM\\Tools\\Console\\Command\\SchemaTool\\UpdateCommand","Doctrine\\ORM\\Tools\\Console\\Command\\ValidateSchemaCommand","Doctrine\\ORM\\Tools\\Console\\ConsoleRunner","Doctrine\\ORM\\Tools\\Console\\Helper\\EntityManagerHelper","Doctrine\\ORM\\Tools\\Console\\MetadataFilter","Doctrine\\ORM\\Tools\\ConvertDoctrine1Schema","Doctrine\\ORM\\Tools\\DebugUnitOfWorkListener","Doctrine\\ORM\\Tools\\DisconnectedClassMetadataFactory","Doctrine\\ORM\\Tools\\EntityGenerator","Doctrine\\ORM\\Tools\\EntityRepositoryGenerator","Doctrine\\ORM\\Tools\\Event\\GenerateSchemaEventArgs","Doctrine\\ORM\\Tools\\Event\\GenerateSchemaTableEventArgs","Doctrine\\ORM\\Tools\\Export\\ClassMetadataExporter","Doctrine\\ORM\\Tools\\Export\\Driver\\AbstractExporter","Doctrine\\ORM\\Tools\\Export\\Driver\\AnnotationExporter","Doctrine\\ORM\\Tools\\Export\\Driver\\PhpExporter","Doctrine\\ORM\\Tools\\Export\\Driver\\XmlExporter","Doctrine\\ORM\\Tools\\Export\\Driver\\YamlExporter","Doctrine\\ORM\\Tools\\Export\\ExportException","Doctrine\\ORM\\Tools\\Pagination\\CountOutputWalker","Doctrine\\ORM\\Tools\\Pagination\\CountWalker","Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryOutputWalker","Doctrine\\ORM\\Tools\\Pagination\\LimitSubqueryWalker","Doctrine\\ORM\\Tools\\Pagination\\Paginator","Doctrine\\ORM\\Tools\\Pagination\\WhereInWalker","Doctrine\\ORM\\Tools\\ResolveTargetEntityListener","Doctrine\\ORM\\Tools\\SchemaTool","Doctrine\\ORM\\Tools\\SchemaValidator","Doctrine\\ORM\\Tools\\Setup","Doctrine\\ORM\\Tools\\ToolEvents","Doctrine\\ORM\\Tools\\ToolsException","Doctrine\\ORM\\TransactionRequiredException","Doctrine\\ORM\\UnexpectedResultException","Doctrine\\ORM\\UnitOfWork","Doctrine\\ORM\\Version","Product","Psr\\Log\\AbstractLogger","Psr\\Log\\InvalidArgumentException","Psr\\Log\\LogLevel","Psr\\Log\\LoggerAwareInterface","Psr\\Log\\LoggerAwareTrait","Psr\\Log\\LoggerInterface","Psr\\Log\\LoggerTrait","Psr\\Log\\NullLogger","Symfony\\Component\\Console\\Application","Symfony\\Component\\Console\\Command\\Command","Symfony\\Component\\Console\\Command\\HelpCommand","Symfony\\Component\\Console\\Command\\ListCommand","Symfony\\Component\\Console\\ConsoleEvents","Symfony\\Component\\Console\\Descriptor\\ApplicationDescription","Symfony\\Component\\Console\\Descriptor\\Descriptor","Symfony\\Component\\Console\\Descriptor\\DescriptorInterface","Symfony\\Component\\Console\\Descriptor\\JsonDescriptor","Symfony\\Component\\Console\\Descriptor\\MarkdownDescriptor","Symfony\\Component\\Console\\Descriptor\\TextDescriptor","Symfony\\Component\\Console\\Descriptor\\XmlDescriptor","Symfony\\Component\\Console\\Exception\\CommandNotFoundException","Symfony\\Component\\Console\\Exception\\ExceptionInterface","Symfony\\Component\\Console\\Exception\\InvalidArgumentException","Symfony\\Component\\Console\\Exception\\InvalidOptionException","Symfony\\Component\\Console\\Exception\\LogicException","Symfony\\Component\\Console\\Exception\\RuntimeException","Symfony\\Component\\Console\\Formatter\\OutputFormatter","Symfony\\Component\\Console\\Formatter\\OutputFormatterInterface","Symfony\\Component\\Console\\Formatter\\OutputFormatterStyle","Symfony\\Component\\Console\\Formatter\\OutputFormatterStyleInterface","Symfony\\Component\\Console\\Formatter\\OutputFormatterStyleStack","Symfony\\Component\\Console\\Helper\\DebugFormatterHelper","Symfony\\Component\\Console\\Helper\\DescriptorHelper","Symfony\\Component\\Console\\Helper\\DialogHelper","Symfony\\Component\\Console\\Helper\\FormatterHelper","Symfony\\Component\\Console\\Helper\\Helper","Symfony\\Component\\Console\\Helper\\HelperInterface","Symfony\\Component\\Console\\Helper\\HelperSet","Symfony\\Component\\Console\\Helper\\InputAwareHelper","Symfony\\Component\\Console\\Helper\\ProcessHelper","Symfony\\Component\\Console\\Helper\\ProgressBar","Symfony\\Component\\Console\\Helper\\ProgressHelper","Symfony\\Component\\Console\\Helper\\ProgressIndicator","Symfony\\Component\\Console\\Helper\\QuestionHelper","Symfony\\Component\\Console\\Helper\\SymfonyQuestionHelper","Symfony\\Component\\Console\\Helper\\Table","Symfony\\Component\\Console\\Helper\\TableCell","Symfony\\Component\\Console\\Helper\\TableHelper","Symfony\\Component\\Console\\Helper\\TableSeparator","Symfony\\Component\\Console\\Helper\\TableStyle","Symfony\\Component\\Console\\Input\\ArgvInput","Symfony\\Component\\Console\\Input\\ArrayInput","Symfony\\Component\\Console\\Input\\Input","Symfony\\Component\\Console\\Input\\InputArgument","Symfony\\Component\\Console\\Input\\InputAwareInterface","Symfony\\Component\\Console\\Input\\InputDefinition","Symfony\\Component\\Console\\Input\\InputInterface","Symfony\\Component\\Console\\Input\\InputOption","Symfony\\Component\\Console\\Input\\StringInput","Symfony\\Component\\Console\\Logger\\ConsoleLogger","Symfony\\Component\\Console\\Output\\BufferedOutput","Symfony\\Component\\Console\\Output\\ConsoleOutput","Symfony\\Component\\Console\\Output\\ConsoleOutputInterface","Symfony\\Component\\Console\\Output\\NullOutput","Symfony\\Component\\Console\\Output\\Output","Symfony\\Component\\Console\\Output\\OutputInterface","Symfony\\Component\\Console\\Output\\StreamOutput","Symfony\\Component\\Console\\Question\\ChoiceQuestion","Symfony\\Component\\Console\\Question\\ConfirmationQuestion","Symfony\\Component\\Console\\Question\\Question","Symfony\\Component\\Console\\Shell","Symfony\\Component\\Console\\Style\\OutputStyle","Symfony\\Component\\Console\\Style\\StyleInterface","Symfony\\Component\\Console\\Style\\SymfonyStyle","Symfony\\Component\\Console\\Tester\\ApplicationTester","Symfony\\Component\\Console\\Tester\\CommandTester","Symfony\\Component\\Debug\\BufferingLogger","Symfony\\Component\\Debug\\Debug","Symfony\\Component\\Debug\\DebugClassLoader","Symfony\\Component\\Debug\\ErrorHandler","Symfony\\Component\\Debug\\ExceptionHandler","Symfony\\Component\\Debug\\Exception\\ClassNotFoundException","Symfony\\Component\\Debug\\Exception\\ContextErrorException","Symfony\\Component\\Debug\\Exception\\FatalErrorException","Symfony\\Component\\Debug\\Exception\\FatalThrowableError","Symfony\\Component\\Debug\\Exception\\FlattenException","Symfony\\Component\\Debug\\Exception\\OutOfMemoryException","Symfony\\Component\\Debug\\Exception\\UndefinedFunctionException","Symfony\\Component\\Debug\\Exception\\UndefinedMethodException","Symfony\\Component\\Debug\\FatalErrorHandler\\ClassNotFoundFatalErrorHandler","Symfony\\Component\\Debug\\FatalErrorHandler\\FatalErrorHandlerInterface","Symfony\\Component\\Debug\\FatalErrorHandler\\UndefinedFunctionFatalErrorHandler","Symfony\\Component\\Debug\\FatalErrorHandler\\UndefinedMethodFatalErrorHandler","Symfony\\Component\\Yaml\\Dumper","Symfony\\Component\\Yaml\\Escaper","Symfony\\Component\\Yaml\\Exception\\DumpException","Symfony\\Component\\Yaml\\Exception\\ExceptionInterface","Symfony\\Component\\Yaml\\Exception\\ParseException","Symfony\\Component\\Yaml\\Exception\\RuntimeException","Symfony\\Component\\Yaml\\Inline","Symfony\\Component\\Yaml\\Parser","Symfony\\Component\\Yaml\\Unescaper","Symfony\\Component\\Yaml\\Yaml","Symfony\\Polyfill\\Mbstring\\Mbstring","User","stdClass","Exception","ErrorException","Closure","Generator","DateTime","DateTimeImmutable","DateTimeZone","DateInterval","DatePeriod","LibXMLError","SQLite3","SQLite3Stmt","SQLite3Result","CURLFile","DOMException","DOMStringList","DOMNameList","DOMImplementationList","DOMImplementationSource","DOMImplementation","DOMNode","DOMNameSpaceNode","DOMDocumentFragment","DOMDocument","DOMNodeList","DOMNamedNodeMap","DOMCharacterData","DOMAttr","DOMElement","DOMText","DOMComment","DOMTypeinfo","DOMUserDataHandler","DOMDomError","DOMErrorHandler","DOMLocator","DOMConfiguration","DOMCdataSection","DOMDocumentType","DOMNotation","DOMEntity","DOMEntityReference","DOMProcessingInstruction","DOMStringExtend","DOMXPath","finfo","LogicException","BadFunctionCallException","BadMethodCallException","DomainException","InvalidArgumentException","LengthException","OutOfRangeException","RuntimeException","OutOfBoundsException","OverflowException","RangeException","UnderflowException","UnexpectedValueException","RecursiveIteratorIterator","IteratorIterator","FilterIterator","RecursiveFilterIterator","CallbackFilterIterator","RecursiveCallbackFilterIterator","ParentIterator","LimitIterator","CachingIterator","RecursiveCachingIterator","NoRewindIterator","AppendIterator","InfiniteIterator","RegexIterator","RecursiveRegexIterator","EmptyIterator","RecursiveTreeIterator","ArrayObject","ArrayIterator","RecursiveArrayIterator","SplFileInfo","DirectoryIterator","FilesystemIterator","RecursiveDirectoryIterator","GlobIterator","SplFileObject","SplTempFileObject","SplDoublyLinkedList","SplQueue","SplStack","SplHeap","SplMinHeap","SplMaxHeap","SplPriorityQueue","SplFixedArray","SplObjectStorage","MultipleIterator","SessionHandler","__PHP_Incomplete_Class","php_user_filter","Directory","mysqli_sql_exception","mysqli_driver","mysqli","mysqli_warning","mysqli_result","mysqli_stmt","PDOException","PDO","PDOStatement","PDORow","PharException","Phar","PharData","PharFileInfo","ReflectionException","Reflection","ReflectionFunctionAbstract","ReflectionFunction","ReflectionParameter","ReflectionMethod","ReflectionClass","ReflectionObject","ReflectionProperty","ReflectionExtension","ReflectionZendExtension","SimpleXMLElement","SimpleXMLIterator","SNMP","SNMPException","SoapClient","SoapVar","SoapServer","SoapFault","SoapParam","SoapHeader","tidy","tidyNode","XMLReader","XMLWriter","XSLTProcessor","ZipArchive"]}